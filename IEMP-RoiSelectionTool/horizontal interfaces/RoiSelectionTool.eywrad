<?xml version="1.0" encoding="UTF-8"?>

<EywRADproject version="3">
  <Properties dialog_colour="fff0ffff" dialog_caption="Roi Selection Tool"
              dialog_rect="0 0 1071 565" save_dialog_pos="0" tab_orientation="0"
              hide_tab_on_single_sheet="0" toolbar_visible="0" conn_btns_visible="1"
              ctrl_btns_visible="1" time_code_visible="1" autoconnect="1" autostart="1"
              autostop="1" always_create_new_patch="0" connection_timeout="10"
              log_btn_visible="0" tooltips_enabled="1" tooltip_bgnd_colour="ffeeeebb"
              tooltip_text_colour="ff000000" tooltip_outline_colour="4c000000"/>
  <ConnectionParams host="localhost" port="7834"/>
  <DataLoggingParams file_logging_enabled="0" log_filename=".." truncate_log_file="0"
                     database_logging_enabled="0" log_databasename="mobius_db" log_database_user_id=""
                     log_database_password="" log_tablename="mobius_log" create_log_table="1"
                     truncate_log_table="1"/>
  <Menu visible="0">
    <MenuItem type="1000" label="">
      <MenuItems/>
    </MenuItem>
  </Menu>
  <Sheets>
    <Sheet title="ROI selection tool" bgnd_colour="ffa7b2b2" SheetPatch="RoiSelectionTool">
      <SheetItems>
        <SheetItem type="1001" tooltip_text="" rectangle="16 152 489 121" border_colour="ff461e1e"
                   fill_colour="ffda8c7c" border_thickness="1" corner_size="0">
          <EywItemBindenabled patch="RoiSelectionTool" label="CompareFinal" id="output"/>
          <EywItemBindvisible patch="" label="" id="True"/>
        </SheetItem>
        <SheetItem type="1001" tooltip_text="" rectangle="16 8 489 129" border_colour="ff461e1e"
                   fill_colour="ff69a4da" border_thickness="1" corner_size="0">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>
        </SheetItem>
        <SheetItem type="2005" tooltip_text="" rectangle="360 32 129 25" values=".*\.(avi)&#10;.*\.(mp4)&#10;.*\.(mov)&#10;"
                   bgnd_colour="ffffffff" outline_colour="0" text_colour="ff000000"
                   button_colour="ffeeeeff" send_value="1">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>
          <EywItemLink type="1" patch="RoiSelectionTool" label="StringGenerator_10"
                       id="value"/>
        </SheetItem>
        <SheetItem type="2000" tooltip_text="" rectangle="16 296 225 41" style="0"
                   bgnd_colour="0" thumb_colour="ffddddff" track_colour="bbffffff"
                   min_val="1" max_val="2" step="1" skew_factor="1" unit_name=""
                   text_pos="1" text_width="60" text_height="20" text_editable="1"
                   text_bgnd_colour="ffffffff" text_txt_colour="ff000000" text_outline_colour="b2808080">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>
          <EywItemLink type="1" patch="RoiSelectionTool" label="IntGenerator_21" id="value"/>
        </SheetItem>
        <SheetItem type="3000" tooltip_text="" rectangle="32 184 297 25" bgnd_colour="ffffffff"
                   outline_colour="0" text_colour="ff000000" multiline="0">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>
          <EywItemLink type="3" patch="RoiSelectionTool" label="StringGenerator_20"
                       id="output"/>
          <Font name="&lt;Sans-Serif&gt;" size="14" style="0"/>
        </SheetItem>
        <SheetItem type="2002" tooltip_text="" rectangle="552 264 441 25" caption="&gt;&gt; NEXT VIDEO &gt;&gt;"
                   colour="ff2ecc5f" text_on_colour="ff000000" text_off_colour="ff000000"
                   conn_left="0" conn_right="0" conn_top="0" conn_bottom="0">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="RoiSelectionTool" label="StartIsClicked" id="output"/>
          <EywItemLink type="1" patch="RoiSelectionTool" label="BangGenerator_1" id="bang"/>
          <Font name="&lt;Sans-Serif&gt;" size="14" style="0"/>
          <Tooltip></Tooltip>
        </SheetItem>
        <SheetItem type="2002" tooltip_text="" rectangle="360 80 129 49" caption="LOAD CONFIG"
                   colour="ffd3d3d3" text_on_colour="ff000000" text_off_colour="ff000000"
                   conn_left="0" conn_right="0" conn_top="0" conn_bottom="0">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>
          <EywItemLink type="1" patch="RoiSelectionTool" label="BangGenerator_5" id="bang"/>
          <Font name="&lt;Sans-Serif&gt;" size="14" style="0"/>
          <Tooltip></Tooltip>
        </SheetItem>
        <SheetItem type="1003" tooltip_text="" rectangle="24 0 297 41" colour="ff000000"
                   justification="36">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>SELECT DATASET FOLDER:<Font name="Arial" size="12" style="0"/>
        </SheetItem>
        <SheetItem type="1003" tooltip_text="" rectangle="24 80 295 33" colour="ff000000"
                   justification="36">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>TYPE A LABEL FOR THIS DATASET:<Font name="Arial" size="12" style="0"/>
        </SheetItem>
        <SheetItem type="1003" tooltip_text="" rectangle="328 0 177 41" colour="ff000000"
                   justification="36">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>Select the extension type of your videos:<Font name="Arial" size="10" style="0"/>
        </SheetItem>
        <SheetItem type="1003" tooltip_text="" rectangle="16 280 233 25" colour="ff000000"
                   justification="36">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>ROI NUMBER:<Font name="&lt;Sans-Serif&gt;" size="14" style="0"/>
        </SheetItem>
        <SheetItem type="3003" tooltip_text="" rectangle="536 40 228 166">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>
          <EywItemLink type="3" patch="RoiSelectionTool" label="ImageMerge_1" id="output_video_stream"/>
        </SheetItem>
        <SheetItem type="2001" tooltip_text="" rectangle="32 104 289 25" bgnd_colour="ffffffff"
                   outline_colour="0" text_colour="ff000000" multiline="0">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>
          <EywItemLink type="1" patch="RoiSelectionTool" label="StringGenerator_2" id="value"/>
          <Font name="&lt;Sans-Serif&gt;" size="14" style="0"/>
        </SheetItem>
        <SheetItem type="1003" tooltip_text="" rectangle="96 160 153 25" colour="ff000000"
                   justification="36">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>Selected Video:<Font name="&lt;Sans-Serif&gt;" size="14" style="0"/>
        </SheetItem>
        <SheetItem type="3003" tooltip_text="" rectangle="784 40 228 166">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>
          <EywItemLink type="3" patch="RoiSelectionTool" label="ImageMerge_3" id="output_video_stream"/>
        </SheetItem>
        <SheetItem type="1003" tooltip_text="" rectangle="96 216 153 25" colour="ff000000"
                   justification="36">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>Output File:<Font name="&lt;Sans-Serif&gt;" size="14" style="0"/>
        </SheetItem>
        <SheetItem type="1003" tooltip_text="" rectangle="576 8 153 49" colour="ff000000"
                   justification="36">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>SELECTED ROI 1<Font name="&lt;Sans-Serif&gt;" size="14" style="0"/>
        </SheetItem>
        <SheetItem type="1003" tooltip_text="" rectangle="840 8 137 49" colour="ff000000"
                   justification="36">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>SELECTED ROI 2<Font name="&lt;Sans-Serif&gt;" size="14" style="0"/>
        </SheetItem>
        <SheetItem type="1000" tooltip_text="" start_point_x="8" start_point_y="144"
                   end_point_x="515" end_point_y="144" colour="ff000000" thickness="1">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>
        </SheetItem>
        <SheetItem type="1000" tooltip_text="" start_point_x="8" start_point_y="280"
                   end_point_x="516" end_point_y="280" colour="ff000000" thickness="1">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>
        </SheetItem>
        <SheetItem type="3000" tooltip_text="" rectangle="32 240 297 25" bgnd_colour="ffffffff"
                   outline_colour="0" text_colour="ff000000" multiline="0">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>
          <EywItemLink type="3" patch="RoiSelectionTool" label="StringGenerator_21"
                       id="output"/>
          <Font name="&lt;Sans-Serif&gt;" size="14" style="0"/>
        </SheetItem>
        <SheetItem type="1003" tooltip_text="" rectangle="280 152 281 37" colour="ff000000"
                   justification="36">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>VIDEOS : Analysed / Found<Font name="Arial" size="10" style="0"/>
        </SheetItem>
        <SheetItem type="3000" tooltip_text="" rectangle="360 184 49 25" bgnd_colour="ffffffff"
                   outline_colour="0" text_colour="ff000000" multiline="0">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>
          <EywItemLink type="3" patch="RoiSelectionTool" label="ConstantGenerator - int_6"
                       id="output"/>
          <Font name="&lt;Sans-Serif&gt;" size="14" style="0"/>
        </SheetItem>
        <SheetItem type="3000" tooltip_text="" rectangle="440 184 49 25" bgnd_colour="ffffffff"
                   outline_colour="0" text_colour="ff000000" multiline="0">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>
          <EywItemLink type="3" patch="RoiSelectionTool" label="ConstantGenerator - int_5"
                       id="output"/>
          <Font name="&lt;Sans-Serif&gt;" size="14" style="0"/>
        </SheetItem>
        <SheetItem type="1003" tooltip_text="" rectangle="408 184 33 25" colour="ff000000"
                   justification="36">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>/<Font name="Bell MT" size="50.099998474121094" style="0"/>
        </SheetItem>
        <SheetItem type="2002" tooltip_text="" rectangle="552 232 217 25" caption="CONFIRM ROI DATA"
                   colour="ffd3d3d3" text_on_colour="ff000000" text_off_colour="ff000000"
                   conn_left="0" conn_right="0" conn_top="0" conn_bottom="0">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="RoiSelectionTool" label="StartIsClicked" id="output"/>
          <EywItemLink type="1" patch="RoiSelectionTool" label="Confirm" id="bang"/>
          <Font name="&lt;Sans-Serif&gt;" size="14" style="0"/>
          <Tooltip></Tooltip>
        </SheetItem>
        <SheetItem type="2002" tooltip_text="" rectangle="360 216 129 49" caption="START"
                   colour="ff2ecc5f" text_on_colour="ff000000" text_off_colour="ff000000"
                   conn_left="0" conn_right="0" conn_top="0" conn_bottom="0">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="RoiSelectionTool" label="LoadConfig" id="output"/>
          <EywItemLink type="1" patch="RoiSelectionTool" label="BangGenerator_10" id="bang"/>
          <Font name="&lt;Sans-Serif&gt;" size="14" style="0"/>
          <Tooltip></Tooltip>
        </SheetItem>
        <SheetItem type="2000" tooltip_text="" rectangle="264 304 241 17" style="0"
                   bgnd_colour="0" thumb_colour="ffddddff" track_colour="bbffffff"
                   min_val="0" max_val="720" step="1" skew_factor="1" unit_name=""
                   text_pos="1" text_width="60" text_height="20" text_editable="1"
                   text_bgnd_colour="ffffffff" text_txt_colour="ff000000" text_outline_colour="b2808080">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>
          <EywItemLink type="1" patch="RoiSelectionTool" label="IntGenerator_5" id="value"/>
        </SheetItem>
        <SheetItem type="2000" tooltip_text="" rectangle="264 328 241 17" style="0"
                   bgnd_colour="0" thumb_colour="ffddddff" track_colour="bbffffff"
                   min_val="0" max_val="576" step="1" skew_factor="1" unit_name=""
                   text_pos="1" text_width="60" text_height="20" text_editable="1"
                   text_bgnd_colour="ffffffff" text_txt_colour="ff000000" text_outline_colour="b2808080">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>
          <EywItemLink type="1" patch="RoiSelectionTool" label="IntGenerator_3" id="value"/>
        </SheetItem>
        <SheetItem type="2000" tooltip_text="" rectangle="264 352 241 17" style="0"
                   bgnd_colour="0" thumb_colour="ffddddff" track_colour="bbffffff"
                   min_val="0" max_val="720" step="1" skew_factor="1" unit_name=""
                   text_pos="1" text_width="60" text_height="20" text_editable="1"
                   text_bgnd_colour="ffffffff" text_txt_colour="ff000000" text_outline_colour="b2808080">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>
          <EywItemLink type="1" patch="RoiSelectionTool" label="IntGenerator_6" id="value"/>
        </SheetItem>
        <SheetItem type="2000" tooltip_text="" rectangle="264 376 241 17" style="0"
                   bgnd_colour="0" thumb_colour="ffddddff" track_colour="bbffffff"
                   min_val="0" max_val="576" step="1" skew_factor="1" unit_name=""
                   text_pos="1" text_width="60" text_height="20" text_editable="1"
                   text_bgnd_colour="ffffffff" text_txt_colour="ff000000" text_outline_colour="b2808080">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>
          <EywItemLink type="1" patch="RoiSelectionTool" label="IntGenerator_2" id="value"/>
        </SheetItem>
        <SheetItem type="1003" tooltip_text="" rectangle="336 280 145 25" colour="ff000000"
                   justification="36">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>MANUAL ROI CONTROL:<Font name="&lt;Sans-Serif&gt;" size="14" style="0"/>
        </SheetItem>
        <SheetItem type="2004" tooltip_text="" rectangle="288 32 39 25" is_directory="1"
                   wildcard="*" filename_editable="1">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>
          <EywItemLink type="1" patch="RoiSelectionTool" label="StringGenerator_6" id="value"/>
        </SheetItem>
        <SheetItem type="3000" tooltip_text="" rectangle="32 32 249 25" bgnd_colour="ffffffff"
                   outline_colour="0" text_colour="ff000000" multiline="0">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>
          <EywItemLink type="3" patch="RoiSelectionTool" label="StringGenerator_24"
                       id="output"/>
          <Font name="&lt;Sans-Serif&gt;" size="14" style="0"/>
        </SheetItem>
        <SheetItem type="2002" tooltip_text="" rectangle="552 296 441 25" caption="END SESSION"
                   colour="ffe0463d" text_on_colour="ff000000" text_off_colour="ff000000"
                   conn_left="0" conn_right="0" conn_top="0" conn_bottom="0">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="RoiSelectionTool" label="StartIsClicked" id="output"/>
          <EywItemLink type="1" patch="RoiSelectionTool" label="SetToNull" id="bang"/>
          <Font name="&lt;Sans-Serif&gt;" size="14" style="0"/>
          <Tooltip></Tooltip>
        </SheetItem>
        <SheetItem type="1000" tooltip_text="" start_point_x="520" start_point_y="216"
                   end_point_x="1030" end_point_y="216" colour="ff000000" thickness="1">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>
        </SheetItem>
        <SheetItem type="2002" tooltip_text="" rectangle="552 328 441 25" caption="EXIT"
                   colour="ff808080" text_on_colour="ff000000" text_off_colour="ff000000"
                   conn_left="0" conn_right="0" conn_top="0" conn_bottom="0">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="RoiSelectionTool" label="CloseGuiVisible" id="output"/>
          <EywItemLink type="1" patch="RoiSelectionTool" label="Close Gui" id="bang"/>
          <Font name="&lt;Sans-Serif&gt;" size="14" style="0"/>
          <Tooltip></Tooltip>
        </SheetItem>
        <SheetItem type="3000" tooltip_text="" rectangle="784 232 201 25" bgnd_colour="ffffff"
                   outline_colour="0" text_colour="ff000000" multiline="0">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="RoiSelectionTool" label="StartIsClicked" id="output"/>
          <EywItemLink type="3" patch="RoiSelectionTool" label="_FDBKString" id="output"/>
          <Font name="Arial" size="15.699999809265137" style="0"/>
        </SheetItem>
        <SheetItem type="2000" tooltip_text="" rectangle="64 432 379 17" style="2"
                   bgnd_colour="0" thumb_colour="ffddddff" track_colour="bbffffff"
                   min_val="0" max_val="1" step="0.01" skew_factor="1" unit_name=""
                   text_pos="1" text_width="60" text_height="20" text_editable="1"
                   text_bgnd_colour="ffffffff" text_txt_colour="ff000000" text_outline_colour="b2808080">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>
          <EywItemLink type="1" patch="RoiSelectionTool" label="*videoScroll" id="value"/>
        </SheetItem>
        <SheetItem type="1003" tooltip_text="" rectangle="120 392 281 47" colour="ff000000"
                   justification="36">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>Video Frame Controller - set start and end<Font name="&lt;Sans-Serif&gt;" size="14" style="0"/>
        </SheetItem>
        <SheetItem type="2000" tooltip_text="" rectangle="64 456 377 17" style="2"
                   bgnd_colour="0" thumb_colour="ffddddff" track_colour="bbffffff"
                   min_val="0" max_val="1" step="0.01" skew_factor="1" unit_name=""
                   text_pos="1" text_width="60" text_height="20" text_editable="1"
                   text_bgnd_colour="ffffffff" text_txt_colour="ff000000" text_outline_colour="b2808080">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>
          <EywItemLink type="1" patch="RoiSelectionTool" label="*endFrame" id="value"/>
        </SheetItem>
        <SheetItem type="3000" tooltip_text="" rectangle="448 432 57 17" bgnd_colour="ffffff"
                   outline_colour="0" text_colour="ff000000" multiline="0">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>
          <EywItemLink type="3" patch="RoiSelectionTool" label="*formatStartFRAME" id="output"/>
          <Font name="&lt;Sans-Serif&gt;" size="14" style="0"/>
        </SheetItem>
        <SheetItem type="3000" tooltip_text="" rectangle="448 456 57 17" bgnd_colour="ffffff"
                   outline_colour="0" text_colour="ff000000" multiline="0">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>
          <EywItemLink type="3" patch="RoiSelectionTool" label="*formatENDFRAME" id="output"/>
          <Font name="&lt;Sans-Serif&gt;" size="14" style="0"/>
        </SheetItem>
        <SheetItem type="1003" tooltip_text="" rectangle="16 432 41 17" colour="ff000000"
                   justification="36">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>START<Font name="&lt;Sans-Serif&gt;" size="14" style="0"/>
        </SheetItem>
        <SheetItem type="1003" tooltip_text="" rectangle="16 456 41 17" colour="ff000000"
                   justification="36">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>END<Font name="&lt;Sans-Serif&gt;" size="14" style="0"/>
        </SheetItem>
        <SheetItem type="1000" tooltip_text="" start_point_x="8" start_point_y="480"
                   end_point_x="517" end_point_y="480" colour="ff000000" thickness="1">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>
        </SheetItem>
        <SheetItem type="1000" tooltip_text="" start_point_x="8" start_point_y="400"
                   end_point_x="517" end_point_y="400" colour="ff000000" thickness="1">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>
        </SheetItem>
        <SheetItem type="1001" tooltip_text="" rectangle="776 232 209 25" border_colour="ff000000"
                   fill_colour="ffffff" border_thickness="1" corner_size="0">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="RoiSelectionTool" label="StartIsClicked" id="output"/>
        </SheetItem>
        <SheetItem type="2001" tooltip_text="" rectangle="16 360 233 33" bgnd_colour="ffffffff"
                   outline_colour="0" text_colour="ff000000" multiline="0">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>
          <EywItemLink type="1" patch="RoiSelectionTool" label="StringGenerator_16"
                       id="value"/>
          <Font name="&lt;Sans-Serif&gt;" size="14" style="0"/>
        </SheetItem>
        <SheetItem type="1003" tooltip_text="" rectangle="16 328 228 25" colour="ff000000"
                   justification="36">
          <EywItemBindenabled patch="" label="" id="True"/>
          <EywItemBindvisible patch="" label="" id="True"/>OPTIONAL COMMENT:<Font name="&lt;Sans-Serif&gt;" size="14" style="0"/>
        </SheetItem>
      </SheetItems>
      <ConnectionParams host="localhost" port="7834"/>
      <PatchOutline imported_patch="RoiSelectionTool">
        <Blocks>
          <Block label="GetIndexedPath_1" catalog="base" class_id="get_indexed_path">
            <Parameters>
              <Parameter id="path" name="Source Folder" descr="Source Folder" exported="1">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="recursive" name="Recursive" descr="Recursive search" exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="file_or_path" name="Files or paths" descr="Specifies whether the block enumerates files or paths"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;2</Domain>
                <Layout type="0">
                  <Label>File</Label>
                  <Label>Path</Label>
                </Layout>
              </Parameter>
              <Parameter id="mask" name="Filename mask" descr="Filename/pathname mask (use regular expression syntax in Perl syntax: http://www.boost.org/libs/regex/doc/syntax_perl.html#Perl)"
                         exported="1">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="order_by" name="Order by" descr="Order file by name, date etc.."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;3</Domain>
                <Layout type="0">
                  <Label>Name</Label>
                  <Label>Last Write;Size</Label>
                </Layout>
              </Parameter>
              <Parameter id="sorting_type" name="Sorting type" descr="Sorting Type" exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;3</Domain>
                <Layout type="0">
                  <Label>Ascending</Label>
                  <Label>Descending</Label>
                  <Label>Random</Label>
                </Layout>
              </Parameter>
              <Parameter id="refresh" name="Refresh" descr="Refresh" exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="out_of_bound" name="Out of bounds" descr="Set the behaviour if the index of file is negative or greater than the number of files in the seleceted folder"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;3</Domain>
                <Layout type="0">
                  <Label>Wrap;Bound;Ignore</Label>
                </Layout>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="path" name="Pathname" descr="Full pathname">
                <Datatype type="3"/>
              </Output>
              <Output id="number_of_files" name="Number of files" descr="Number of files found">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="File index">
                <Datatype type="4"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="GetSpecialFolder_1" catalog="kernel" class_id="get_special_folder">
            <Parameters>
              <Parameter id="folder_type" name="Special Folder Type" descr="Specifies which type of folder to query.&#10; - KernelFolder: the folder where the EyesWeb kernel dll currently in use is located&#10; - PatchFolder: the folder where the currently running patch is located"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;2</Domain>
                <Layout type="0">
                  <Label>KernelFolder</Label>
                  <Label>PatchFolder</Label>
                </Layout>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous Output" descr="Specifies if the block has to output the folder continuously or not.&#10;"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="folder" name="Folder" descr="The queried folder">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConcatenateStrings_1" catalog="base" class_id="concatenate_strings">
            <Parameters/>
            <Outputs>
              <Output id="output" name="Output string" descr="The concatenation of the input strings">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="BangGenerator_1" catalog="kernel" class_id="bang_generator">
            <Parameters>
              <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="bang" name="Bang" descr="Bang">
                <Datatype type="2"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="GetFilePathComponent_1" catalog="base" class_id="GetFilePathComponent">
            <Parameters>
              <Parameter id="ComponentType" name="Component type" descr="Used to set the type of component to be extracted"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;4</Domain>
                <Layout type="0">
                  <Label>File Name or Folder Name</Label>
                  <Label>Path</Label>
                  <Label>File Stem (Filename Without Extension)</Label>
                  <Label>File Extension</Label>
                </Layout>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="OutputComponent" name="File Name" descr="The extracted file name">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="InputPath" name="Input File Path" descr="The input file path">
                <Datatype type="3"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="SetROI_1" catalog="base" class_id="image_set_roi">
            <Parameters/>
            <Outputs>
              <Output id="output_video_stream" name="Output image" descr="Output image">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_video_stream" name="Input image" descr="Input image">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="SetROI_12" catalog="base" class_id="image_set_roi">
            <Parameters/>
            <Outputs>
              <Output id="output_video_stream" name="Output image" descr="Output image">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_video_stream" name="Input image" descr="Input image">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="WriteToFile_1" catalog="base" class_id="WriteToFile">
            <Parameters>
              <Parameter id="file_name" name="FileName" descr="File Name" exported="1">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="file_mode" name="WritingMode" descr="Specifies if the file is overwited or appended every time the patch is started.&#10; append mode has been disabled because its behavior was broken&#10;"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;2</Domain>
                <Layout type="0">
                  <Label>Append</Label>
                  <Label>Overwrite</Label>
                </Layout>
              </Parameter>
              <Parameter id="write_header" name="WriteHeader" descr="It specifies if the block writes or not the header line. IF THIS PARAMETER IS SET TO FALSE, THE OUTPUT FILE IS NOT READABLE  USING READFROMFILE BLOCK!"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs>
              <Input id="input_00" name="Input00" descr="Input 00.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="StringDisplay_3" catalog="system" class_id="string_display">
            <Parameters>
              <Parameter id="number_of_lines" name="Number of lines" descr="The number of lines which compose the document on which the text is written"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;1;0;0</Domain>
              </Parameter>
              <Parameter id="number_of_columns" name="Number of columns" descr="The number of columns which compose the document on which the text is written"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;1;0;0</Domain>
              </Parameter>
              <Parameter id="aligment" name="Horizontal alignment" descr="Background color (RGB model space)"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;3</Domain>
                <Layout type="0">
                  <Label>Near (left);Center</Label>
                  <Label>Far (right)</Label>
                </Layout>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs>
              <Input id="string" name="Input string" descr="Input string to display.">
                <Datatype type="3"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="GetSpecialFolder_2" catalog="kernel" class_id="get_special_folder">
            <Parameters>
              <Parameter id="folder_type" name="Special Folder Type" descr="Specifies which type of folder to query.&#10; - KernelFolder: the folder where the EyesWeb kernel dll currently in use is located&#10; - PatchFolder: the folder where the currently running patch is located"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;2</Domain>
                <Layout type="0">
                  <Label>KernelFolder</Label>
                  <Label>PatchFolder</Label>
                </Layout>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous Output" descr="Specifies if the block has to output the folder continuously or not.&#10;"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="folder" name="Folder" descr="The queried folder">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConcatenateStrings_3" catalog="base" class_id="concatenate_strings">
            <Parameters/>
            <Outputs>
              <Output id="output" name="Output string" descr="The concatenation of the input strings">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_3" name="Input string 3" descr="The input string 3 wil be placed at position 3 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_4" name="Input string 4" descr="The input string 4 wil be placed at position 4 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="StringGenerator_3" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="StringGenerator_6" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="StringGenerator_2" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="StringGenerator_5" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="IntGenerator_1" catalog="kernel" class_id="int_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Value" exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="SetROI_2" catalog="base" class_id="image_set_roi">
            <Parameters/>
            <Outputs>
              <Output id="output_video_stream" name="Output image" descr="Output image">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_video_stream" name="Input image" descr="Input image">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="SetROI_3" catalog="base" class_id="image_set_roi">
            <Parameters/>
            <Outputs>
              <Output id="output_video_stream" name="Output image" descr="Output image">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_video_stream" name="Input image" descr="Input image">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="SetROI_4" catalog="base" class_id="image_set_roi">
            <Parameters/>
            <Outputs>
              <Output id="output_video_stream" name="Output image" descr="Output image">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_video_stream" name="Input image" descr="Input image">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="SetROI_5" catalog="base" class_id="image_set_roi">
            <Parameters/>
            <Outputs>
              <Output id="output_video_stream" name="Output image" descr="Output image">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_video_stream" name="Input image" descr="Input image">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="ScalarArithmeticOperation - int_2" catalog="kernel" class_id="scalar_arith_op_int">
            <Parameters>
              <Parameter id="op_type" name="Operation type" descr="Select the type of operation that will be performed on the input datatype."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;9</Domain>
                <Layout type="0">
                  <Label>Sum</Label>
                  <Label>Subtract;Subtract inverse;Multiply;Divide;Divide inverse</Label>
                  <Label>Max</Label>
                  <Label>Min</Label>
                  <Label>Set value</Label>
                </Layout>
              </Parameter>
              <Parameter id="scalar_value" name="Scalar value" descr="Specifies the scalar value involved in the operation."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Block output. It contains the result of the specified operation.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="This input represent the operand involved in the operation with the scalar value.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="OutputSelector_1" catalog="kernel" class_id="output_selector">
            <Parameters>
              <Parameter id="active_output" name="Active output" descr="Zero-based index of the active output. The selected output is activated."
                         exported="1">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;6</Domain>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output_1" name="Output 1" descr="0 output of the block.">
                <Datatype type="0"/>
              </Output>
              <Output id="output_2" name="Output 2" descr="1 output of the block.">
                <Datatype type="0"/>
              </Output>
              <Output id="output_3" name="Output 3" descr="2 output of the block.">
                <Datatype type="0"/>
              </Output>
              <Output id="output_4" name="Output 4" descr="3 output of the block.">
                <Datatype type="0"/>
              </Output>
              <Output id="output_5" name="Output 5" descr="4 output of the block.">
                <Datatype type="0"/>
              </Output>
              <Output id="output_6" name="Output 6" descr="5 output of the block.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input of the selector. The input is propagated to the choosen output.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="BangGenerator_5" catalog="kernel" class_id="bang_generator">
            <Parameters>
              <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="bang" name="Bang" descr="Bang">
                <Datatype type="2"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConcatenateStrings_2" catalog="base" class_id="concatenate_strings">
            <Parameters/>
            <Outputs>
              <Output id="output" name="Output string" descr="The concatenation of the input strings">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_3" name="Input string 3" descr="The input string 3 wil be placed at position 3 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_4" name="Input string 4" descr="The input string 4 wil be placed at position 4 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_5" name="Input string 5" descr="The input string 5 wil be placed at position 5 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_6" name="Input string 6" descr="The input string 6 wil be placed at position 6 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_7" name="Input string 7" descr="The input string 7 wil be placed at position 7 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_8" name="Input string 8" descr="The input string 8 wil be placed at position 8 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_9" name="Input string 9" descr="The input string 9 wil be placed at position 9 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="StringGenerator_1" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConcatenateStrings_4" catalog="base" class_id="concatenate_strings">
            <Parameters/>
            <Outputs>
              <Output id="output" name="Output string" descr="The concatenation of the input strings">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_3" name="Input string 3" descr="The input string 3 wil be placed at position 3 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_4" name="Input string 4" descr="The input string 4 wil be placed at position 4 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_5" name="Input string 5" descr="The input string 5 wil be placed at position 5 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_6" name="Input string 6" descr="The input string 6 wil be placed at position 6 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_7" name="Input string 7" descr="The input string 7 wil be placed at position 7 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_8" name="Input string 8" descr="The input string 8 wil be placed at position 8 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_9" name="Input string 9" descr="The input string 9 wil be placed at position 9 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_10" name="Input string 10" descr="The input string 10 wil be placed at position 10 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_11" name="Input string 11" descr="The input string 11 wil be placed at position 11 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_12" name="Input string 12" descr="The input string 12 wil be placed at position 12 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_13" name="Input string 13" descr="The input string 13 wil be placed at position 13 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_14" name="Input string 14" descr="The input string 14 wil be placed at position 14 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_15" name="Input string 15" descr="The input string 15 wil be placed at position 15 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="StringGenerator_4" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConcatenateStrings_5" catalog="base" class_id="concatenate_strings">
            <Parameters/>
            <Outputs>
              <Output id="output" name="Output string" descr="The concatenation of the input strings">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_3" name="Input string 3" descr="The input string 3 wil be placed at position 3 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_4" name="Input string 4" descr="The input string 4 wil be placed at position 4 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_5" name="Input string 5" descr="The input string 5 wil be placed at position 5 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_6" name="Input string 6" descr="The input string 6 wil be placed at position 6 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_7" name="Input string 7" descr="The input string 7 wil be placed at position 7 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_8" name="Input string 8" descr="The input string 8 wil be placed at position 8 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_9" name="Input string 9" descr="The input string 9 wil be placed at position 9 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_10" name="Input string 10" descr="The input string 10 wil be placed at position 10 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_11" name="Input string 11" descr="The input string 11 wil be placed at position 11 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_12" name="Input string 12" descr="The input string 12 wil be placed at position 12 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_13" name="Input string 13" descr="The input string 13 wil be placed at position 13 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_14" name="Input string 14" descr="The input string 14 wil be placed at position 14 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_15" name="Input string 15" descr="The input string 15 wil be placed at position 15 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_16" name="Input string 16" descr="The input string 16 wil be placed at position 16 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_17" name="Input string 17" descr="The input string 17 wil be placed at position 17 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_18" name="Input string 18" descr="The input string 18 wil be placed at position 18 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_19" name="Input string 19" descr="The input string 19 wil be placed at position 19 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_20" name="Input string 20" descr="The input string 20 wil be placed at position 20 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_21" name="Input string 21" descr="The input string 21 wil be placed at position 21 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="StringGenerator_7" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConcatenateStrings_6" catalog="base" class_id="concatenate_strings">
            <Parameters/>
            <Outputs>
              <Output id="output" name="Output string" descr="The concatenation of the input strings">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_3" name="Input string 3" descr="The input string 3 wil be placed at position 3 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_4" name="Input string 4" descr="The input string 4 wil be placed at position 4 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_5" name="Input string 5" descr="The input string 5 wil be placed at position 5 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_6" name="Input string 6" descr="The input string 6 wil be placed at position 6 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_7" name="Input string 7" descr="The input string 7 wil be placed at position 7 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_8" name="Input string 8" descr="The input string 8 wil be placed at position 8 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_9" name="Input string 9" descr="The input string 9 wil be placed at position 9 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_10" name="Input string 10" descr="The input string 10 wil be placed at position 10 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_11" name="Input string 11" descr="The input string 11 wil be placed at position 11 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_12" name="Input string 12" descr="The input string 12 wil be placed at position 12 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_13" name="Input string 13" descr="The input string 13 wil be placed at position 13 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_14" name="Input string 14" descr="The input string 14 wil be placed at position 14 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_15" name="Input string 15" descr="The input string 15 wil be placed at position 15 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_16" name="Input string 16" descr="The input string 16 wil be placed at position 16 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_17" name="Input string 17" descr="The input string 17 wil be placed at position 17 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_18" name="Input string 18" descr="The input string 18 wil be placed at position 18 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_19" name="Input string 19" descr="The input string 19 wil be placed at position 19 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_20" name="Input string 20" descr="The input string 20 wil be placed at position 20 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_21" name="Input string 21" descr="The input string 21 wil be placed at position 21 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_22" name="Input string 22" descr="The input string 22 wil be placed at position 22 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_23" name="Input string 23" descr="The input string 23 wil be placed at position 23 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_24" name="Input string 24" descr="The input string 24 wil be placed at position 24 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_25" name="Input string 25" descr="The input string 25 wil be placed at position 25 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_26" name="Input string 26" descr="The input string 26 wil be placed at position 26 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_27" name="Input string 27" descr="The input string 27 wil be placed at position 27 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="StringGenerator_9" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConcatenateStrings_7" catalog="base" class_id="concatenate_strings">
            <Parameters/>
            <Outputs>
              <Output id="output" name="Output string" descr="The concatenation of the input strings">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_3" name="Input string 3" descr="The input string 3 wil be placed at position 3 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_4" name="Input string 4" descr="The input string 4 wil be placed at position 4 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_5" name="Input string 5" descr="The input string 5 wil be placed at position 5 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_6" name="Input string 6" descr="The input string 6 wil be placed at position 6 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_7" name="Input string 7" descr="The input string 7 wil be placed at position 7 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_8" name="Input string 8" descr="The input string 8 wil be placed at position 8 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_9" name="Input string 9" descr="The input string 9 wil be placed at position 9 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_10" name="Input string 10" descr="The input string 10 wil be placed at position 10 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_11" name="Input string 11" descr="The input string 11 wil be placed at position 11 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_12" name="Input string 12" descr="The input string 12 wil be placed at position 12 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_13" name="Input string 13" descr="The input string 13 wil be placed at position 13 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_14" name="Input string 14" descr="The input string 14 wil be placed at position 14 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_15" name="Input string 15" descr="The input string 15 wil be placed at position 15 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_16" name="Input string 16" descr="The input string 16 wil be placed at position 16 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_17" name="Input string 17" descr="The input string 17 wil be placed at position 17 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_18" name="Input string 18" descr="The input string 18 wil be placed at position 18 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_19" name="Input string 19" descr="The input string 19 wil be placed at position 19 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_20" name="Input string 20" descr="The input string 20 wil be placed at position 20 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_21" name="Input string 21" descr="The input string 21 wil be placed at position 21 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_22" name="Input string 22" descr="The input string 22 wil be placed at position 22 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_23" name="Input string 23" descr="The input string 23 wil be placed at position 23 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_24" name="Input string 24" descr="The input string 24 wil be placed at position 24 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_25" name="Input string 25" descr="The input string 25 wil be placed at position 25 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_26" name="Input string 26" descr="The input string 26 wil be placed at position 26 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_27" name="Input string 27" descr="The input string 27 wil be placed at position 27 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_28" name="Input string 28" descr="The input string 28 wil be placed at position 28 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_29" name="Input string 29" descr="The input string 29 wil be placed at position 29 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_30" name="Input string 30" descr="The input string 30 wil be placed at position 30 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_31" name="Input string 31" descr="The input string 31 wil be placed at position 31 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_32" name="Input string 32" descr="The input string 32 wil be placed at position 32 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_33" name="Input string 33" descr="The input string 33 wil be placed at position 33 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="StringGenerator_11" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConcatenateStrings_8" catalog="base" class_id="concatenate_strings">
            <Parameters/>
            <Outputs>
              <Output id="output" name="Output string" descr="The concatenation of the input strings">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_3" name="Input string 3" descr="The input string 3 wil be placed at position 3 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_4" name="Input string 4" descr="The input string 4 wil be placed at position 4 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_5" name="Input string 5" descr="The input string 5 wil be placed at position 5 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_6" name="Input string 6" descr="The input string 6 wil be placed at position 6 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_7" name="Input string 7" descr="The input string 7 wil be placed at position 7 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_8" name="Input string 8" descr="The input string 8 wil be placed at position 8 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_9" name="Input string 9" descr="The input string 9 wil be placed at position 9 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_10" name="Input string 10" descr="The input string 10 wil be placed at position 10 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_11" name="Input string 11" descr="The input string 11 wil be placed at position 11 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_12" name="Input string 12" descr="The input string 12 wil be placed at position 12 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_13" name="Input string 13" descr="The input string 13 wil be placed at position 13 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_14" name="Input string 14" descr="The input string 14 wil be placed at position 14 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_15" name="Input string 15" descr="The input string 15 wil be placed at position 15 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_16" name="Input string 16" descr="The input string 16 wil be placed at position 16 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_17" name="Input string 17" descr="The input string 17 wil be placed at position 17 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_18" name="Input string 18" descr="The input string 18 wil be placed at position 18 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_19" name="Input string 19" descr="The input string 19 wil be placed at position 19 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_20" name="Input string 20" descr="The input string 20 wil be placed at position 20 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_21" name="Input string 21" descr="The input string 21 wil be placed at position 21 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_22" name="Input string 22" descr="The input string 22 wil be placed at position 22 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_23" name="Input string 23" descr="The input string 23 wil be placed at position 23 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_24" name="Input string 24" descr="The input string 24 wil be placed at position 24 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_25" name="Input string 25" descr="The input string 25 wil be placed at position 25 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_26" name="Input string 26" descr="The input string 26 wil be placed at position 26 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_27" name="Input string 27" descr="The input string 27 wil be placed at position 27 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_28" name="Input string 28" descr="The input string 28 wil be placed at position 28 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_29" name="Input string 29" descr="The input string 29 wil be placed at position 29 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_30" name="Input string 30" descr="The input string 30 wil be placed at position 30 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_31" name="Input string 31" descr="The input string 31 wil be placed at position 31 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_32" name="Input string 32" descr="The input string 32 wil be placed at position 32 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_33" name="Input string 33" descr="The input string 33 wil be placed at position 33 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_34" name="Input string 34" descr="The input string 34 wil be placed at position 34 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_35" name="Input string 35" descr="The input string 35 wil be placed at position 35 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_36" name="Input string 36" descr="The input string 36 wil be placed at position 36 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_37" name="Input string 37" descr="The input string 37 wil be placed at position 37 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_38" name="Input string 38" descr="The input string 38 wil be placed at position 38 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_39" name="Input string 39" descr="The input string 39 wil be placed at position 39 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="StringGenerator_13" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="InputSelector_1" catalog="kernel" class_id="input_selector">
            <Parameters>
              <Parameter id="active_input" name="Active input" descr="Zero-based index of the active input. The selected input is propagated to the output."
                         exported="1">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;6</Domain>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Output of the selector. It is equal to the specified input.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_1" name="Input 1" descr="0 input of the block.">
                <Datatype type="0"/>
              </Input>
              <Input id="input_2" name="Input 2" descr="1 input of the block.">
                <Datatype type="0"/>
              </Input>
              <Input id="input_3" name="Input 3" descr="2 input of the block.">
                <Datatype type="0"/>
              </Input>
              <Input id="input_4" name="Input 4" descr="3 input of the block.">
                <Datatype type="0"/>
              </Input>
              <Input id="input_5" name="Input 5" descr="4 input of the block.">
                <Datatype type="0"/>
              </Input>
              <Input id="input_6" name="Input 6" descr="5 input of the block.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="FormatIntAsString_1" catalog="base" class_id="format_int_as_string">
            <Parameters>
              <Parameter id="num_character" name="NumCharacter" descr="Number of character"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;0;0</Domain>
              </Parameter>
              <Parameter id="format_string" name="FormatString" descr="Specifies character to add"
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Output">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input">
                <Datatype type="4"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="Play" catalog="kernel" class_id="bang_generator">
            <Parameters>
              <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="bang" name="Bang" descr="Bang">
                <Datatype type="2"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="Counter_3" catalog="base" class_id="Counter">
            <Parameters>
              <Parameter id="Step" name="Step" descr="Step Description" exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="Begin" name="Begin" descr="Begin Description" exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="End" name="End" descr="End Description" exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="CustomReset" name="Custom reset value" descr="When the counter is reset, and the reset mode is set to custom value, this value is used."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="Start" name="Start" descr="Start Description" exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="Stop" name="Stop" descr="Stop Description" exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="Reset" name="Reset" descr="Reset Description" exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="ResetMode" name="Reset mode" descr="Specifies the behaviour when the counter is reset. The counter can reset to the initial value (Begin) or to a custom value."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;2</Domain>
                <Layout type="0">
                  <Label>Begin</Label>
                  <Label>Custom value</Label>
                </Layout>
              </Parameter>
              <Parameter id="TypeCounter" name="Bounding mode" descr="Specifies whether the counter is bounded (stops counting after a given bound is reached), unbounded (counts forever) or circular (restart from the beginning after a given bound is reached)."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;3</Domain>
                <Layout type="0">
                  <Label>Unbounded counter;Bounded counter</Label>
                  <Label>Circular counter</Label>
                </Layout>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="Output" name="Output" descr="Output Description">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="Input" name="Input" descr="Input Descrption">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="BooleanToTrigger_2" catalog="base" class_id="bool_to_trigger">
            <Parameters>
              <Parameter id="mode" name="Mode" descr="Specifies when to generate the output trigger. "
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;5</Domain>
                <Layout type="0">
                  <Label>False to true;True to false</Label>
                  <Label>Any change</Label>
                  <Label>True;False</Label>
                </Layout>
              </Parameter>
              <Parameter id="initial_state" name="Initial state" descr="This value is used only at first signal change detection to initialize the previous signal state."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;3</Domain>
                <Layout type="0">
                  <Label>Indeterminate;True</Label>
                  <Label>False</Label>
                </Layout>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Output trigger datatype.">
                <Datatype type="2"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input boolean datatype. The block generates a trigger as output according to the value of this datatype.">
                <Datatype type="1"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="BooleanToTrigger_3" catalog="base" class_id="bool_to_trigger">
            <Parameters>
              <Parameter id="mode" name="Mode" descr="Specifies when to generate the output trigger. "
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;5</Domain>
                <Layout type="0">
                  <Label>False to true;True to false</Label>
                  <Label>Any change</Label>
                  <Label>True;False</Label>
                </Layout>
              </Parameter>
              <Parameter id="initial_state" name="Initial state" descr="This value is used only at first signal change detection to initialize the previous signal state."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;3</Domain>
                <Layout type="0">
                  <Label>Indeterminate;True</Label>
                  <Label>False</Label>
                </Layout>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Output trigger datatype.">
                <Datatype type="2"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input boolean datatype. The block generates a trigger as output according to the value of this datatype.">
                <Datatype type="1"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="BangGenerator_2" catalog="kernel" class_id="bang_generator">
            <Parameters>
              <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="bang" name="Bang" descr="Bang">
                <Datatype type="2"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="StringGenerator_16" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="BangGenerator_10" catalog="kernel" class_id="bang_generator">
            <Parameters>
              <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="bang" name="Bang" descr="Bang">
                <Datatype type="2"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="StringGenerator_8" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConcatenateStrings_9" catalog="base" class_id="concatenate_strings">
            <Parameters/>
            <Outputs>
              <Output id="output" name="Output string" descr="The concatenation of the input strings">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_3" name="Input string 3" descr="The input string 3 wil be placed at position 3 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_4" name="Input string 4" descr="The input string 4 wil be placed at position 4 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_5" name="Input string 5" descr="The input string 5 wil be placed at position 5 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_6" name="Input string 6" descr="The input string 6 wil be placed at position 6 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_7" name="Input string 7" descr="The input string 7 wil be placed at position 7 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="StringGenerator_10" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="StringDisplay_6" catalog="system" class_id="string_display">
            <Parameters>
              <Parameter id="number_of_lines" name="Number of lines" descr="The number of lines which compose the document on which the text is written"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;1;0;0</Domain>
              </Parameter>
              <Parameter id="number_of_columns" name="Number of columns" descr="The number of columns which compose the document on which the text is written"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;1;0;0</Domain>
              </Parameter>
              <Parameter id="aligment" name="Horizontal alignment" descr="Background color (RGB model space)"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;3</Domain>
                <Layout type="0">
                  <Label>Near (left);Center</Label>
                  <Label>Far (right)</Label>
                </Layout>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs>
              <Input id="string" name="Input string" descr="Input string to display.">
                <Datatype type="3"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="StringDisplay_7" catalog="system" class_id="string_display">
            <Parameters>
              <Parameter id="number_of_lines" name="Number of lines" descr="The number of lines which compose the document on which the text is written"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;1;0;0</Domain>
              </Parameter>
              <Parameter id="number_of_columns" name="Number of columns" descr="The number of columns which compose the document on which the text is written"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;1;0;0</Domain>
              </Parameter>
              <Parameter id="aligment" name="Horizontal alignment" descr="Background color (RGB model space)"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;3</Domain>
                <Layout type="0">
                  <Label>Near (left);Center</Label>
                  <Label>Far (right)</Label>
                </Layout>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs>
              <Input id="string" name="Input string" descr="Input string to display.">
                <Datatype type="3"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="StringDisplay_8" catalog="system" class_id="string_display">
            <Parameters>
              <Parameter id="number_of_lines" name="Number of lines" descr="The number of lines which compose the document on which the text is written"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;1;0;0</Domain>
              </Parameter>
              <Parameter id="number_of_columns" name="Number of columns" descr="The number of columns which compose the document on which the text is written"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;1;0;0</Domain>
              </Parameter>
              <Parameter id="aligment" name="Horizontal alignment" descr="Background color (RGB model space)"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;3</Domain>
                <Layout type="0">
                  <Label>Near (left);Center</Label>
                  <Label>Far (right)</Label>
                </Layout>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs>
              <Input id="string" name="Input string" descr="Input string to display.">
                <Datatype type="3"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="StringDisplay_9" catalog="system" class_id="string_display">
            <Parameters>
              <Parameter id="number_of_lines" name="Number of lines" descr="The number of lines which compose the document on which the text is written"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;1;0;0</Domain>
              </Parameter>
              <Parameter id="number_of_columns" name="Number of columns" descr="The number of columns which compose the document on which the text is written"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;1;0;0</Domain>
              </Parameter>
              <Parameter id="aligment" name="Horizontal alignment" descr="Background color (RGB model space)"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;3</Domain>
                <Layout type="0">
                  <Label>Near (left);Center</Label>
                  <Label>Far (right)</Label>
                </Layout>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs>
              <Input id="string" name="Input string" descr="Input string to display.">
                <Datatype type="3"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="MediafileReader_1" catalog="base" class_id="media_file_reader_new">
            <Parameters>
              <Parameter id="media_filename" name="Filename" descr="Filepath of media file. An empty filename is allowed; the corresponding video output is black, the corresponding audio output is silence"
                         exported="1">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="out_of_bound_management" name="End of file mode" descr="Describes the behaviour of the reader when an end of file is reached:&#13;&#10; - Loop: playback restart from the beginning of the file&#13;&#10; - Keep last frame: the last frame is repeaed indefinitely&#13;&#10; - Black/silence: a black frame is generated as output (sound is set to silence)&#13;&#10; - No output: no output is given"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;4</Domain>
                <Layout type="0">
                  <Label>Loop</Label>
                  <Label>Keep last frame;Black/silence;No output</Label>
                </Layout>
              </Parameter>
              <Parameter id="play" name="Play" descr="Start/resume playing file" exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="pause" name="Pause" descr="Start/resume playing file" exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="goto_start" name="Go To Start" descr="Go back to start of file"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="video_output" name="Output video" descr="Output video">
                <Datatype type="6"/>
              </Output>
              <Output id="audio_output" name="Output Audio" descr="Output audio">
                <Datatype type="9"/>
              </Output>
              <Output id="video_duration" name="Output video duration (frames)" descr="Output video duration (frames)">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="frame" name="Frame index" descr="Frame index">
                <Datatype type="4"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="Counter_2" catalog="base" class_id="Counter">
            <Parameters>
              <Parameter id="Step" name="Step" descr="Step Description" exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="Begin" name="Begin" descr="Begin Description" exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="End" name="End" descr="End Description" exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="CustomReset" name="Custom reset value" descr="When the counter is reset, and the reset mode is set to custom value, this value is used."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="Start" name="Start" descr="Start Description" exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="Stop" name="Stop" descr="Stop Description" exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="Reset" name="Reset" descr="Reset Description" exported="1">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="ResetMode" name="Reset mode" descr="Specifies the behaviour when the counter is reset. The counter can reset to the initial value (Begin) or to a custom value."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;2</Domain>
                <Layout type="0">
                  <Label>Begin</Label>
                  <Label>Custom value</Label>
                </Layout>
              </Parameter>
              <Parameter id="TypeCounter" name="Bounding mode" descr="Specifies whether the counter is bounded (stops counting after a given bound is reached), unbounded (counts forever) or circular (restart from the beginning after a given bound is reached)."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;3</Domain>
                <Layout type="0">
                  <Label>Unbounded counter;Bounded counter</Label>
                  <Label>Circular counter</Label>
                </Layout>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="Output" name="Output" descr="Output Description">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="Input" name="Input" descr="Input Descrption">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="ConstantGenerator - int_4" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="*formatENDFRAME" catalog="base" class_id="format_int_as_string">
            <Parameters>
              <Parameter id="num_character" name="NumCharacter" descr="Number of character"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;0;0</Domain>
              </Parameter>
              <Parameter id="format_string" name="FormatString" descr="Specifies character to add"
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Output">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input">
                <Datatype type="4"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="ReplaceString_1" catalog="base" class_id="replace_string">
            <Parameters>
              <Parameter id="find" name="SubstringToReplace" descr="Find this substring inside the input string and replace it."
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="replace_with" name="ReplaceWith" descr="Replace the SubstringToReplace parameter with this substring."
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="replace_mode" name="ReplaceMode" descr="It is possible to replace alle the occurrences of the substring or just the first one."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;2</Domain>
                <Layout type="0">
                  <Label>AllOccurences;FirstOccurence</Label>
                </Layout>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output_string" name="ReplacedString" descr="Replaced string.">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_string" name="InputString" descr="Input string that must be replaced.">
                <Datatype type="3"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="Switch_3" catalog="kernel" class_id="switch">
            <Parameters>
              <Parameter id="condition" name="Status" descr="Specifies whether the channel is opened or closed, i.e., if inputs are propagated to the output or not."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;2</Domain>
                <Layout type="0">
                  <Label>Opened</Label>
                  <Label>Closed</Label>
                </Layout>
              </Parameter>
              <Parameter id="toggle" name="Toggle status" descr="Switch the state of the block. If it's opened it close it, otherwise it open it."
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="open" name="Open" descr="Open the switch." exported="1">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="close" name="Close" descr="Close the switch." exported="1">
                <Datatype type="2"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="It is generated only if condition is true.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="It is propagated to the output only if condition is true.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="BangGenerator_4" catalog="kernel" class_id="bang_generator">
            <Parameters>
              <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="bang" name="Bang" descr="Bang">
                <Datatype type="2"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="BangGenerator_6" catalog="kernel" class_id="bang_generator">
            <Parameters>
              <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="bang" name="Bang" descr="Bang">
                <Datatype type="2"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="BangGenerator_8" catalog="kernel" class_id="bang_generator">
            <Parameters>
              <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="bang" name="Bang" descr="Bang">
                <Datatype type="2"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="DisplayGDI-Interact_3" catalog="system" class_id="display_gdi">
            <Parameters>
              <Parameter id="QueueAlgo" name="Presentation time" descr="To respect the image presentation time this display use a ordered queue. This parameter selects the algorithm used to manage the presentation time ('ignore', 'respect'). When 'ignore' is selected the input image is displayed immediately (bypassing the queue), otherwise the image is stored into the queue and is displayed when the clock time matches the presentation time."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;2</Domain>
                <Layout type="0">
                  <Label>ignore the presentation time</Label>
                  <Label>respect the presentation time</Label>
                </Layout>
              </Parameter>
              <Parameter id="QueueMaxSize" name="Queue max size" descr="This parameter set the maximum number of images stored into the internal queue."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="QueuePurge" name="Purge queue" descr="Drop all images contained into the internal queue."
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="filtering" name="Interpolation Algorithm" descr="Specifies the algorithm used to interpolate the image when resize is needed.&#13;&#10;A rough interpolation (e.g., nearest neighbour) may cause visible artifacts, however, the CPU usage to perform such interpolation is quite limited. A good quality interpolation (e.g., lanczos) provides better results but may cause an high CPU load."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;4</Domain>
                <Layout type="0">
                  <Label>nearest neighbour interpolation;linear interpolation;cubic convolution interpolation</Label>
                  <Label>interpolation by 3-lobed Lanczos-windowed sinc function</Label>
                </Layout>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs>
              <Input id="input_image" name="Image" descr="Image to display.">
                <Datatype type="6"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="DisplayGDI-Interact_5" catalog="system" class_id="display_gdi">
            <Parameters>
              <Parameter id="QueueAlgo" name="Presentation time" descr="To respect the image presentation time this display use a ordered queue. This parameter selects the algorithm used to manage the presentation time ('ignore', 'respect'). When 'ignore' is selected the input image is displayed immediately (bypassing the queue), otherwise the image is stored into the queue and is displayed when the clock time matches the presentation time."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;2</Domain>
                <Layout type="0">
                  <Label>ignore the presentation time</Label>
                  <Label>respect the presentation time</Label>
                </Layout>
              </Parameter>
              <Parameter id="QueueMaxSize" name="Queue max size" descr="This parameter set the maximum number of images stored into the internal queue."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="QueuePurge" name="Purge queue" descr="Drop all images contained into the internal queue."
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="filtering" name="Interpolation Algorithm" descr="Specifies the algorithm used to interpolate the image when resize is needed.&#13;&#10;A rough interpolation (e.g., nearest neighbour) may cause visible artifacts, however, the CPU usage to perform such interpolation is quite limited. A good quality interpolation (e.g., lanczos) provides better results but may cause an high CPU load."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;4</Domain>
                <Layout type="0">
                  <Label>nearest neighbour interpolation;linear interpolation;cubic convolution interpolation</Label>
                  <Label>interpolation by 3-lobed Lanczos-windowed sinc function</Label>
                </Layout>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs>
              <Input id="input_image" name="Image" descr="Image to display.">
                <Datatype type="6"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="DisplayGDI-Interact_2" catalog="system" class_id="display_gdi">
            <Parameters>
              <Parameter id="QueueAlgo" name="Presentation time" descr="To respect the image presentation time this display use a ordered queue. This parameter selects the algorithm used to manage the presentation time ('ignore', 'respect'). When 'ignore' is selected the input image is displayed immediately (bypassing the queue), otherwise the image is stored into the queue and is displayed when the clock time matches the presentation time."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;2</Domain>
                <Layout type="0">
                  <Label>ignore the presentation time</Label>
                  <Label>respect the presentation time</Label>
                </Layout>
              </Parameter>
              <Parameter id="QueueMaxSize" name="Queue max size" descr="This parameter set the maximum number of images stored into the internal queue."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="QueuePurge" name="Purge queue" descr="Drop all images contained into the internal queue."
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="filtering" name="Interpolation Algorithm" descr="Specifies the algorithm used to interpolate the image when resize is needed.&#13;&#10;A rough interpolation (e.g., nearest neighbour) may cause visible artifacts, however, the CPU usage to perform such interpolation is quite limited. A good quality interpolation (e.g., lanczos) provides better results but may cause an high CPU load."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;4</Domain>
                <Layout type="0">
                  <Label>nearest neighbour interpolation;linear interpolation;cubic convolution interpolation</Label>
                  <Label>interpolation by 3-lobed Lanczos-windowed sinc function</Label>
                </Layout>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs>
              <Input id="input_image" name="Image" descr="Image to display.">
                <Datatype type="6"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="DisplayGDI-Interact_4" catalog="system" class_id="display_gdi">
            <Parameters>
              <Parameter id="QueueAlgo" name="Presentation time" descr="To respect the image presentation time this display use a ordered queue. This parameter selects the algorithm used to manage the presentation time ('ignore', 'respect'). When 'ignore' is selected the input image is displayed immediately (bypassing the queue), otherwise the image is stored into the queue and is displayed when the clock time matches the presentation time."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;2</Domain>
                <Layout type="0">
                  <Label>ignore the presentation time</Label>
                  <Label>respect the presentation time</Label>
                </Layout>
              </Parameter>
              <Parameter id="QueueMaxSize" name="Queue max size" descr="This parameter set the maximum number of images stored into the internal queue."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="QueuePurge" name="Purge queue" descr="Drop all images contained into the internal queue."
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="filtering" name="Interpolation Algorithm" descr="Specifies the algorithm used to interpolate the image when resize is needed.&#13;&#10;A rough interpolation (e.g., nearest neighbour) may cause visible artifacts, however, the CPU usage to perform such interpolation is quite limited. A good quality interpolation (e.g., lanczos) provides better results but may cause an high CPU load."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;4</Domain>
                <Layout type="0">
                  <Label>nearest neighbour interpolation;linear interpolation;cubic convolution interpolation</Label>
                  <Label>interpolation by 3-lobed Lanczos-windowed sinc function</Label>
                </Layout>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs>
              <Input id="input_image" name="Image" descr="Image to display.">
                <Datatype type="6"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="DisplayGDI-Interact_6" catalog="system" class_id="display_gdi">
            <Parameters>
              <Parameter id="QueueAlgo" name="Presentation time" descr="To respect the image presentation time this display use a ordered queue. This parameter selects the algorithm used to manage the presentation time ('ignore', 'respect'). When 'ignore' is selected the input image is displayed immediately (bypassing the queue), otherwise the image is stored into the queue and is displayed when the clock time matches the presentation time."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;2</Domain>
                <Layout type="0">
                  <Label>ignore the presentation time</Label>
                  <Label>respect the presentation time</Label>
                </Layout>
              </Parameter>
              <Parameter id="QueueMaxSize" name="Queue max size" descr="This parameter set the maximum number of images stored into the internal queue."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="QueuePurge" name="Purge queue" descr="Drop all images contained into the internal queue."
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="filtering" name="Interpolation Algorithm" descr="Specifies the algorithm used to interpolate the image when resize is needed.&#13;&#10;A rough interpolation (e.g., nearest neighbour) may cause visible artifacts, however, the CPU usage to perform such interpolation is quite limited. A good quality interpolation (e.g., lanczos) provides better results but may cause an high CPU load."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;4</Domain>
                <Layout type="0">
                  <Label>nearest neighbour interpolation;linear interpolation;cubic convolution interpolation</Label>
                  <Label>interpolation by 3-lobed Lanczos-windowed sinc function</Label>
                </Layout>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs>
              <Input id="input_image" name="Image" descr="Image to display.">
                <Datatype type="6"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="DisplayGDI-Interact_7" catalog="system" class_id="display_gdi">
            <Parameters>
              <Parameter id="QueueAlgo" name="Presentation time" descr="To respect the image presentation time this display use a ordered queue. This parameter selects the algorithm used to manage the presentation time ('ignore', 'respect'). When 'ignore' is selected the input image is displayed immediately (bypassing the queue), otherwise the image is stored into the queue and is displayed when the clock time matches the presentation time."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;2</Domain>
                <Layout type="0">
                  <Label>ignore the presentation time</Label>
                  <Label>respect the presentation time</Label>
                </Layout>
              </Parameter>
              <Parameter id="QueueMaxSize" name="Queue max size" descr="This parameter set the maximum number of images stored into the internal queue."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="QueuePurge" name="Purge queue" descr="Drop all images contained into the internal queue."
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="filtering" name="Interpolation Algorithm" descr="Specifies the algorithm used to interpolate the image when resize is needed.&#13;&#10;A rough interpolation (e.g., nearest neighbour) may cause visible artifacts, however, the CPU usage to perform such interpolation is quite limited. A good quality interpolation (e.g., lanczos) provides better results but may cause an high CPU load."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;4</Domain>
                <Layout type="0">
                  <Label>nearest neighbour interpolation;linear interpolation;cubic convolution interpolation</Label>
                  <Label>interpolation by 3-lobed Lanczos-windowed sinc function</Label>
                </Layout>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs>
              <Input id="input_image" name="Image" descr="Image to display.">
                <Datatype type="6"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="IntGenerator_21" catalog="kernel" class_id="int_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Value" exported="1">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ScalarDisplay_8" catalog="base" class_id="Display">
            <Parameters>
              <Parameter id="DisplayNDD" name="Decimal digits" descr="If the input datatype is double it sets the number of decimal digits to be shown."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs>
              <Input id="Input000" name="Input 0" descr="Input 0 of the block">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="DisplayGDI-Interact_8" catalog="system" class_id="display_gdi">
            <Parameters>
              <Parameter id="QueueAlgo" name="Presentation time" descr="To respect the image presentation time this display use a ordered queue. This parameter selects the algorithm used to manage the presentation time ('ignore', 'respect'). When 'ignore' is selected the input image is displayed immediately (bypassing the queue), otherwise the image is stored into the queue and is displayed when the clock time matches the presentation time."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;2</Domain>
                <Layout type="0">
                  <Label>ignore the presentation time</Label>
                  <Label>respect the presentation time</Label>
                </Layout>
              </Parameter>
              <Parameter id="QueueMaxSize" name="Queue max size" descr="This parameter set the maximum number of images stored into the internal queue."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="QueuePurge" name="Purge queue" descr="Drop all images contained into the internal queue."
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="filtering" name="Interpolation Algorithm" descr="Specifies the algorithm used to interpolate the image when resize is needed.&#13;&#10;A rough interpolation (e.g., nearest neighbour) may cause visible artifacts, however, the CPU usage to perform such interpolation is quite limited. A good quality interpolation (e.g., lanczos) provides better results but may cause an high CPU load."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;4</Domain>
                <Layout type="0">
                  <Label>nearest neighbour interpolation;linear interpolation;cubic convolution interpolation</Label>
                  <Label>interpolation by 3-lobed Lanczos-windowed sinc function</Label>
                </Layout>
              </Parameter>
              <Parameter id="MirrorX" name="Mouse Horizontal Mirror" descr="This parameter enable or disable the horizontal mirror of the mouse axis system."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="MirrorY" name="Mouse Vertical Mirror" descr="This parameter enable or disable the vertical mirror of the mouse axis system."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs>
              <Input id="input_image" name="Image" descr="Image to display.">
                <Datatype type="6"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="ScalarDisplay_11" catalog="base" class_id="Display">
            <Parameters>
              <Parameter id="DisplayNDD" name="Decimal digits" descr="If the input datatype is double it sets the number of decimal digits to be shown."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs>
              <Input id="Input000" name="Input 0" descr="Input 0 of the block">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="OutputSelector_2" catalog="kernel" class_id="output_selector">
            <Parameters>
              <Parameter id="active_output" name="Active output" descr="Zero-based index of the active output. The selected output is activated."
                         exported="1">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;6</Domain>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output_1" name="Output 1" descr="0 output of the block.">
                <Datatype type="0"/>
              </Output>
              <Output id="output_2" name="Output 2" descr="1 output of the block.">
                <Datatype type="0"/>
              </Output>
              <Output id="output_3" name="Output 3" descr="2 output of the block.">
                <Datatype type="0"/>
              </Output>
              <Output id="output_4" name="Output 4" descr="3 output of the block.">
                <Datatype type="0"/>
              </Output>
              <Output id="output_5" name="Output 5" descr="4 output of the block.">
                <Datatype type="0"/>
              </Output>
              <Output id="output_6" name="Output 6" descr="5 output of the block.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input of the selector. The input is propagated to the choosen output.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="DrawGraphicObject_1" catalog="base" class_id="DrawGraphicObject">
            <Parameters>
              <Parameter id="Quality" name="Quality" descr="Quality draw" exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;3</Domain>
                <Layout type="0">
                  <Label>High quality</Label>
                  <Label>Medium quality</Label>
                  <Label>Low quality</Label>
                </Layout>
              </Parameter>
              <Parameter id="draw_unchanged_parameters" name="Draw Unchanged Datatypes"
                         descr="If set to true, each time the block is activated it draws all inputs, regardless of whether they are changed or not (this is the old behaviour). If false (default behaviour), only changed datatypes are drawn."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="Output" name="Output image" descr="The output image on which the graphic object has been drawn.">
                <Datatype type="6"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="InputImage" name="Input image" descr="The input image on which the graphic object will be drawn.">
                <Datatype type="6"/>
              </Input>
              <Input id="InputGraphicObject00" name="Input graphic object" descr="The graphic object to be drawn.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="SetShapeFill_1" catalog="base" class_id="set_shape_properties_2d">
            <Parameters>
              <Parameter id="set_filled" name="SetFilled" descr="Specifies whether to set the filled property of the graphical geometric datatype."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="filled" name="Filled" descr="Specifies whether the shape is filled or not."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="set_color" name="SetFillColor" descr="Specifies whether to set the color of the graphical geometric datatype."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="set_alpha" name="SetFillAlpha" descr="Specifies whether to set the width of the graphical geometric datatype."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="alpha" name="FillAlpha" descr="Specifies the alpha level of the graphical geometric datatype."
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Graphical Object" descr="A bidimensional graphical object where the shape properties have been changed by this block.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input Graphical Object" descr="The input bidimensional graphical object of which to change the properties">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="RectangleToPointAndSize - int_1" catalog="base" class_id="RectToPoinandSizeInt">
            <Parameters>
              <Parameter id="point_position" name="Point position" descr="Specifies which point of the rectangle is given as output"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;10</Domain>
                <Layout type="0">
                  <Label>Top Left</Label>
                  <Label>Top Center;Top Right;Middle Left;Middle Center</Label>
                  <Label>Middle Right</Label>
                  <Label>Bottom Left</Label>
                  <Label>Bottom Center;Bottom Right;Custom</Label>
                </Layout>
              </Parameter>
              <Parameter id="custom_point_position_x" name="Custom point X position" descr="If Custom is chosen as the point position, this parameter specifies the horizontal offset of the point given as output with respect to the rectangle itself: 0.0 means left and 1.0 mean right"
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
              <Parameter id="custom_point_position_y" name="Custom point Y position" descr="If Custom is chosen as the point position, this parameter specifies the vertical offset of the point given as output with respect to the rectangle itself: 0.0 means top and 1.0 mean bottom"
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs/>
          </Block>
          <Block label="GetPoint2DCoordinates_1" catalog="base" class_id="get_point2d_coordinates">
            <Parameters/>
            <Outputs>
              <Output id="output_x" name="Output X" descr="X coordinate extracted from the input point">
                <Datatype type="4"/>
              </Output>
              <Output id="output_y" name="Output Y" descr="Y coordinate extracted from the input point">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="RectangleToPointAndSize - int_2" catalog="base" class_id="RectToPoinandSizeInt">
            <Parameters>
              <Parameter id="point_position" name="Point position" descr="Specifies which point of the rectangle is given as output"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;10</Domain>
                <Layout type="0">
                  <Label>Top Left</Label>
                  <Label>Top Center;Top Right;Middle Left;Middle Center</Label>
                  <Label>Middle Right</Label>
                  <Label>Bottom Left</Label>
                  <Label>Bottom Center;Bottom Right;Custom</Label>
                </Layout>
              </Parameter>
              <Parameter id="custom_point_position_x" name="Custom point X position" descr="If Custom is chosen as the point position, this parameter specifies the horizontal offset of the point given as output with respect to the rectangle itself: 0.0 means left and 1.0 mean right"
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
              <Parameter id="custom_point_position_y" name="Custom point Y position" descr="If Custom is chosen as the point position, this parameter specifies the vertical offset of the point given as output with respect to the rectangle itself: 0.0 means top and 1.0 mean bottom"
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs/>
          </Block>
          <Block label="GetPoint2DCoordinates_2" catalog="base" class_id="get_point2d_coordinates">
            <Parameters/>
            <Outputs>
              <Output id="output_x" name="Output X" descr="X coordinate extracted from the input point">
                <Datatype type="4"/>
              </Output>
              <Output id="output_y" name="Output Y" descr="Y coordinate extracted from the input point">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="Snapshot_3" catalog="kernel" class_id="snapshot">
            <Parameters>
              <Parameter id="load" name="Load" descr="Load new value of datatype in the internal memory."
                         exported="1">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="reset" name="Reset" descr="Reset value of datatype in the internal memory"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous Output" descr="Generate a new copy of snapshot datatype on every block activation"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Datatype stored in the internal memory and propagated to the output.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input stored in the internal memory.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="Snapshot_2" catalog="kernel" class_id="snapshot">
            <Parameters>
              <Parameter id="load" name="Load" descr="Load new value of datatype in the internal memory."
                         exported="1">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="reset" name="Reset" descr="Reset value of datatype in the internal memory"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous Output" descr="Generate a new copy of snapshot datatype on every block activation"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Datatype stored in the internal memory and propagated to the output.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input stored in the internal memory.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="Snapshot_6" catalog="kernel" class_id="snapshot">
            <Parameters>
              <Parameter id="load" name="Load" descr="Load new value of datatype in the internal memory."
                         exported="1">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="reset" name="Reset" descr="Reset value of datatype in the internal memory"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous Output" descr="Generate a new copy of snapshot datatype on every block activation"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Datatype stored in the internal memory and propagated to the output.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input stored in the internal memory.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="Snapshot_7" catalog="kernel" class_id="snapshot">
            <Parameters>
              <Parameter id="load" name="Load" descr="Load new value of datatype in the internal memory."
                         exported="1">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="reset" name="Reset" descr="Reset value of datatype in the internal memory"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous Output" descr="Generate a new copy of snapshot datatype on every block activation"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Datatype stored in the internal memory and propagated to the output.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input stored in the internal memory.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="Snapshot_8" catalog="kernel" class_id="snapshot">
            <Parameters>
              <Parameter id="load" name="Load" descr="Load new value of datatype in the internal memory."
                         exported="1">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="reset" name="Reset" descr="Reset value of datatype in the internal memory"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous Output" descr="Generate a new copy of snapshot datatype on every block activation"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Datatype stored in the internal memory and propagated to the output.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input stored in the internal memory.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="Snapshot_9" catalog="kernel" class_id="snapshot">
            <Parameters>
              <Parameter id="load" name="Load" descr="Load new value of datatype in the internal memory."
                         exported="1">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="reset" name="Reset" descr="Reset value of datatype in the internal memory"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous Output" descr="Generate a new copy of snapshot datatype on every block activation"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Datatype stored in the internal memory and propagated to the output.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input stored in the internal memory.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="Snapshot_10" catalog="kernel" class_id="snapshot">
            <Parameters>
              <Parameter id="load" name="Load" descr="Load new value of datatype in the internal memory."
                         exported="1">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="reset" name="Reset" descr="Reset value of datatype in the internal memory"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous Output" descr="Generate a new copy of snapshot datatype on every block activation"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Datatype stored in the internal memory and propagated to the output.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input stored in the internal memory.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="GetSize2DFields - int_1" catalog="base" class_id="get_size2d_fields_int">
            <Parameters/>
            <Outputs>
              <Output id="output_cx" name="Output X" descr="Size along the X axis, i.e., width">
                <Datatype type="4"/>
              </Output>
              <Output id="output_cy" name="Output Y" descr="Size along the Y axis, i.e., height">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConcatenateStrings_10" catalog="base" class_id="concatenate_strings">
            <Parameters/>
            <Outputs>
              <Output id="output" name="Output string" descr="The concatenation of the input strings">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_3" name="Input string 3" descr="The input string 3 wil be placed at position 3 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="StringGenerator_12" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ScalarArithmeticOperation - int_4" catalog="kernel" class_id="scalar_arith_op_int">
            <Parameters>
              <Parameter id="op_type" name="Operation type" descr="Select the type of operation that will be performed on the input datatype."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;9</Domain>
                <Layout type="0">
                  <Label>Sum</Label>
                  <Label>Subtract;Subtract inverse;Multiply;Divide;Divide inverse</Label>
                  <Label>Max</Label>
                  <Label>Min</Label>
                  <Label>Set value</Label>
                </Layout>
              </Parameter>
              <Parameter id="scalar_value" name="Scalar value" descr="Specifies the scalar value involved in the operation."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Block output. It contains the result of the specified operation.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="This input represent the operand involved in the operation with the scalar value.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="GetSize2DFields - int_2" catalog="base" class_id="get_size2d_fields_int">
            <Parameters/>
            <Outputs>
              <Output id="output_cx" name="Output X" descr="Size along the X axis, i.e., width">
                <Datatype type="4"/>
              </Output>
              <Output id="output_cy" name="Output Y" descr="Size along the Y axis, i.e., height">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConcatenateStrings_11" catalog="base" class_id="concatenate_strings">
            <Parameters/>
            <Outputs>
              <Output id="output" name="Output string" descr="The concatenation of the input strings">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_3" name="Input string 3" descr="The input string 3 wil be placed at position 3 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="StringGenerator_14" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="RectangleToPointAndSize - int_3" catalog="base" class_id="RectToPoinandSizeInt">
            <Parameters>
              <Parameter id="point_position" name="Point position" descr="Specifies which point of the rectangle is given as output"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;10</Domain>
                <Layout type="0">
                  <Label>Top Left</Label>
                  <Label>Top Center;Top Right;Middle Left;Middle Center</Label>
                  <Label>Middle Right</Label>
                  <Label>Bottom Left</Label>
                  <Label>Bottom Center;Bottom Right;Custom</Label>
                </Layout>
              </Parameter>
              <Parameter id="custom_point_position_x" name="Custom point X position" descr="If Custom is chosen as the point position, this parameter specifies the horizontal offset of the point given as output with respect to the rectangle itself: 0.0 means left and 1.0 mean right"
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
              <Parameter id="custom_point_position_y" name="Custom point Y position" descr="If Custom is chosen as the point position, this parameter specifies the vertical offset of the point given as output with respect to the rectangle itself: 0.0 means top and 1.0 mean bottom"
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs/>
          </Block>
          <Block label="GetPoint2DCoordinates_3" catalog="base" class_id="get_point2d_coordinates">
            <Parameters/>
            <Outputs>
              <Output id="output_x" name="Output X" descr="X coordinate extracted from the input point">
                <Datatype type="4"/>
              </Output>
              <Output id="output_y" name="Output Y" descr="Y coordinate extracted from the input point">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="GetSize2DFields - int_3" catalog="base" class_id="get_size2d_fields_int">
            <Parameters/>
            <Outputs>
              <Output id="output_cx" name="Output X" descr="Size along the X axis, i.e., width">
                <Datatype type="4"/>
              </Output>
              <Output id="output_cy" name="Output Y" descr="Size along the Y axis, i.e., height">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConcatenateStrings_12" catalog="base" class_id="concatenate_strings">
            <Parameters/>
            <Outputs>
              <Output id="output" name="Output string" descr="The concatenation of the input strings">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_3" name="Input string 3" descr="The input string 3 wil be placed at position 3 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="StringGenerator_15" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="RectangleToPointAndSize - int_4" catalog="base" class_id="RectToPoinandSizeInt">
            <Parameters>
              <Parameter id="point_position" name="Point position" descr="Specifies which point of the rectangle is given as output"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;10</Domain>
                <Layout type="0">
                  <Label>Top Left</Label>
                  <Label>Top Center;Top Right;Middle Left;Middle Center</Label>
                  <Label>Middle Right</Label>
                  <Label>Bottom Left</Label>
                  <Label>Bottom Center;Bottom Right;Custom</Label>
                </Layout>
              </Parameter>
              <Parameter id="custom_point_position_x" name="Custom point X position" descr="If Custom is chosen as the point position, this parameter specifies the horizontal offset of the point given as output with respect to the rectangle itself: 0.0 means left and 1.0 mean right"
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
              <Parameter id="custom_point_position_y" name="Custom point Y position" descr="If Custom is chosen as the point position, this parameter specifies the vertical offset of the point given as output with respect to the rectangle itself: 0.0 means top and 1.0 mean bottom"
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs/>
          </Block>
          <Block label="GetPoint2DCoordinates_4" catalog="base" class_id="get_point2d_coordinates">
            <Parameters/>
            <Outputs>
              <Output id="output_x" name="Output X" descr="X coordinate extracted from the input point">
                <Datatype type="4"/>
              </Output>
              <Output id="output_y" name="Output Y" descr="Y coordinate extracted from the input point">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="RectangleToPointAndSize - int_5" catalog="base" class_id="RectToPoinandSizeInt">
            <Parameters>
              <Parameter id="point_position" name="Point position" descr="Specifies which point of the rectangle is given as output"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;10</Domain>
                <Layout type="0">
                  <Label>Top Left</Label>
                  <Label>Top Center;Top Right;Middle Left;Middle Center</Label>
                  <Label>Middle Right</Label>
                  <Label>Bottom Left</Label>
                  <Label>Bottom Center;Bottom Right;Custom</Label>
                </Layout>
              </Parameter>
              <Parameter id="custom_point_position_x" name="Custom point X position" descr="If Custom is chosen as the point position, this parameter specifies the horizontal offset of the point given as output with respect to the rectangle itself: 0.0 means left and 1.0 mean right"
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
              <Parameter id="custom_point_position_y" name="Custom point Y position" descr="If Custom is chosen as the point position, this parameter specifies the vertical offset of the point given as output with respect to the rectangle itself: 0.0 means top and 1.0 mean bottom"
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs/>
          </Block>
          <Block label="GetPoint2DCoordinates_5" catalog="base" class_id="get_point2d_coordinates">
            <Parameters/>
            <Outputs>
              <Output id="output_x" name="Output X" descr="X coordinate extracted from the input point">
                <Datatype type="4"/>
              </Output>
              <Output id="output_y" name="Output Y" descr="Y coordinate extracted from the input point">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="GetSize2DFields - int_4" catalog="base" class_id="get_size2d_fields_int">
            <Parameters/>
            <Outputs>
              <Output id="output_cx" name="Output X" descr="Size along the X axis, i.e., width">
                <Datatype type="4"/>
              </Output>
              <Output id="output_cy" name="Output Y" descr="Size along the Y axis, i.e., height">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConcatenateStrings_13" catalog="base" class_id="concatenate_strings">
            <Parameters/>
            <Outputs>
              <Output id="output" name="Output string" descr="The concatenation of the input strings">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_3" name="Input string 3" descr="The input string 3 wil be placed at position 3 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="StringGenerator_17" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="GetSize2DFields - int_5" catalog="base" class_id="get_size2d_fields_int">
            <Parameters/>
            <Outputs>
              <Output id="output_cx" name="Output X" descr="Size along the X axis, i.e., width">
                <Datatype type="4"/>
              </Output>
              <Output id="output_cy" name="Output Y" descr="Size along the Y axis, i.e., height">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConcatenateStrings_14" catalog="base" class_id="concatenate_strings">
            <Parameters/>
            <Outputs>
              <Output id="output" name="Output string" descr="The concatenation of the input strings">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_3" name="Input string 3" descr="The input string 3 wil be placed at position 3 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="StringGenerator_18" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="RectangleToPointAndSize - int_6" catalog="base" class_id="RectToPoinandSizeInt">
            <Parameters>
              <Parameter id="point_position" name="Point position" descr="Specifies which point of the rectangle is given as output"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;10</Domain>
                <Layout type="0">
                  <Label>Top Left</Label>
                  <Label>Top Center;Top Right;Middle Left;Middle Center</Label>
                  <Label>Middle Right</Label>
                  <Label>Bottom Left</Label>
                  <Label>Bottom Center;Bottom Right;Custom</Label>
                </Layout>
              </Parameter>
              <Parameter id="custom_point_position_x" name="Custom point X position" descr="If Custom is chosen as the point position, this parameter specifies the horizontal offset of the point given as output with respect to the rectangle itself: 0.0 means left and 1.0 mean right"
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
              <Parameter id="custom_point_position_y" name="Custom point Y position" descr="If Custom is chosen as the point position, this parameter specifies the vertical offset of the point given as output with respect to the rectangle itself: 0.0 means top and 1.0 mean bottom"
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs/>
          </Block>
          <Block label="GetPoint2DCoordinates_6" catalog="base" class_id="get_point2d_coordinates">
            <Parameters/>
            <Outputs>
              <Output id="output_x" name="Output X" descr="X coordinate extracted from the input point">
                <Datatype type="4"/>
              </Output>
              <Output id="output_y" name="Output Y" descr="Y coordinate extracted from the input point">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="GetSize2DFields - int_6" catalog="base" class_id="get_size2d_fields_int">
            <Parameters/>
            <Outputs>
              <Output id="output_cx" name="Output X" descr="Size along the X axis, i.e., width">
                <Datatype type="4"/>
              </Output>
              <Output id="output_cy" name="Output Y" descr="Size along the Y axis, i.e., height">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConcatenateStrings_15" catalog="base" class_id="concatenate_strings">
            <Parameters/>
            <Outputs>
              <Output id="output" name="Output string" descr="The concatenation of the input strings">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_3" name="Input string 3" descr="The input string 3 wil be placed at position 3 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="StringGenerator_19" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ScalarDisplay_10" catalog="base" class_id="Display">
            <Parameters>
              <Parameter id="DisplayNDD" name="Decimal digits" descr="If the input datatype is double it sets the number of decimal digits to be shown."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs>
              <Input id="Input000" name="Input 0" descr="Input 0 of the block">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="BangGenerator_13" catalog="kernel" class_id="bang_generator">
            <Parameters>
              <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="bang" name="Bang" descr="Bang">
                <Datatype type="2"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ScalarDisplay_12" catalog="base" class_id="Display">
            <Parameters>
              <Parameter id="DisplayNDD" name="Decimal digits" descr="If the input datatype is double it sets the number of decimal digits to be shown."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs>
              <Input id="Input000" name="Input 0" descr="Input 0 of the block">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="ScalarDisplay_13" catalog="base" class_id="Display">
            <Parameters>
              <Parameter id="DisplayNDD" name="Decimal digits" descr="If the input datatype is double it sets the number of decimal digits to be shown."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs>
              <Input id="Input000" name="Input 0" descr="Input 0 of the block">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="BangGenerator_15" catalog="kernel" class_id="bang_generator">
            <Parameters>
              <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="bang" name="Bang" descr="Bang">
                <Datatype type="2"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="GetROI_1" catalog="base" class_id="image_get_roi">
            <Parameters/>
            <Outputs/>
            <Inputs>
              <Input id="input_video_stream" name="Input image" descr="Input image">
                <Datatype type="6"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="InputSelector_4" catalog="kernel" class_id="input_selector">
            <Parameters>
              <Parameter id="active_input" name="Active input" descr="Zero-based index of the active input. The selected input is propagated to the output."
                         exported="1">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;2</Domain>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Output of the selector. It is equal to the specified input.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_1" name="Input 1" descr="0 input of the block.">
                <Datatype type="0"/>
              </Input>
              <Input id="input_2" name="Input 2" descr="1 input of the block.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="ConstantGenerator - int_2" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConstantGenerator - int_12" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="Snapshot_5" catalog="kernel" class_id="snapshot">
            <Parameters>
              <Parameter id="load" name="Load" descr="Load new value of datatype in the internal memory."
                         exported="1">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="reset" name="Reset" descr="Reset value of datatype in the internal memory"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous Output" descr="Generate a new copy of snapshot datatype on every block activation"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Datatype stored in the internal memory and propagated to the output.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input stored in the internal memory.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="RectangleToPointAndSize - int_7" catalog="base" class_id="RectToPoinandSizeInt">
            <Parameters>
              <Parameter id="point_position" name="Point position" descr="Specifies which point of the rectangle is given as output"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;10</Domain>
                <Layout type="0">
                  <Label>Top Left</Label>
                  <Label>Top Center;Top Right;Middle Left;Middle Center</Label>
                  <Label>Middle Right</Label>
                  <Label>Bottom Left</Label>
                  <Label>Bottom Center;Bottom Right;Custom</Label>
                </Layout>
              </Parameter>
              <Parameter id="custom_point_position_x" name="Custom point X position" descr="If Custom is chosen as the point position, this parameter specifies the horizontal offset of the point given as output with respect to the rectangle itself: 0.0 means left and 1.0 mean right"
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
              <Parameter id="custom_point_position_y" name="Custom point Y position" descr="If Custom is chosen as the point position, this parameter specifies the vertical offset of the point given as output with respect to the rectangle itself: 0.0 means top and 1.0 mean bottom"
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs/>
          </Block>
          <Block label="ScalarDisplay_15" catalog="base" class_id="Display">
            <Parameters>
              <Parameter id="DisplayNDD" name="Decimal digits" descr="If the input datatype is double it sets the number of decimal digits to be shown."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs>
              <Input id="Input000" name="Input 0" descr="Input 0 of the block">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="GetPoint2DCoordinates_7" catalog="base" class_id="get_point2d_coordinates">
            <Parameters/>
            <Outputs>
              <Output id="output_x" name="Output X" descr="X coordinate extracted from the input point">
                <Datatype type="4"/>
              </Output>
              <Output id="output_y" name="Output Y" descr="Y coordinate extracted from the input point">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="GetROI_2" catalog="base" class_id="image_get_roi">
            <Parameters/>
            <Outputs/>
            <Inputs>
              <Input id="input_video_stream" name="Input image" descr="Input image">
                <Datatype type="6"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="BangGenerator_16" catalog="kernel" class_id="bang_generator">
            <Parameters>
              <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="bang" name="Bang" descr="Bang">
                <Datatype type="2"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConstantGenerator - int_13" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConstantGenerator - int_14" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="RectangleToPointAndSize - int_8" catalog="base" class_id="RectToPoinandSizeInt">
            <Parameters>
              <Parameter id="point_position" name="Point position" descr="Specifies which point of the rectangle is given as output"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;10</Domain>
                <Layout type="0">
                  <Label>Top Left</Label>
                  <Label>Top Center;Top Right;Middle Left;Middle Center</Label>
                  <Label>Middle Right</Label>
                  <Label>Bottom Left</Label>
                  <Label>Bottom Center;Bottom Right;Custom</Label>
                </Layout>
              </Parameter>
              <Parameter id="custom_point_position_x" name="Custom point X position" descr="If Custom is chosen as the point position, this parameter specifies the horizontal offset of the point given as output with respect to the rectangle itself: 0.0 means left and 1.0 mean right"
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
              <Parameter id="custom_point_position_y" name="Custom point Y position" descr="If Custom is chosen as the point position, this parameter specifies the vertical offset of the point given as output with respect to the rectangle itself: 0.0 means top and 1.0 mean bottom"
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs/>
          </Block>
          <Block label="ScalarDisplay_14" catalog="base" class_id="Display">
            <Parameters>
              <Parameter id="DisplayNDD" name="Decimal digits" descr="If the input datatype is double it sets the number of decimal digits to be shown."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs>
              <Input id="Input000" name="Input 0" descr="Input 0 of the block">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="GetPoint2DCoordinates_8" catalog="base" class_id="get_point2d_coordinates">
            <Parameters/>
            <Outputs>
              <Output id="output_x" name="Output X" descr="X coordinate extracted from the input point">
                <Datatype type="4"/>
              </Output>
              <Output id="output_y" name="Output Y" descr="Y coordinate extracted from the input point">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="Snapshot_11" catalog="kernel" class_id="snapshot">
            <Parameters>
              <Parameter id="load" name="Load" descr="Load new value of datatype in the internal memory."
                         exported="1">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="reset" name="Reset" descr="Reset value of datatype in the internal memory"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous Output" descr="Generate a new copy of snapshot datatype on every block activation"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Datatype stored in the internal memory and propagated to the output.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input stored in the internal memory.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="GetROI_3" catalog="base" class_id="image_get_roi">
            <Parameters/>
            <Outputs/>
            <Inputs>
              <Input id="input_video_stream" name="Input image" descr="Input image">
                <Datatype type="6"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="GetROI_4" catalog="base" class_id="image_get_roi">
            <Parameters/>
            <Outputs/>
            <Inputs>
              <Input id="input_video_stream" name="Input image" descr="Input image">
                <Datatype type="6"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="GetROI_5" catalog="base" class_id="image_get_roi">
            <Parameters/>
            <Outputs/>
            <Inputs>
              <Input id="input_video_stream" name="Input image" descr="Input image">
                <Datatype type="6"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="GetROI_6" catalog="base" class_id="image_get_roi">
            <Parameters/>
            <Outputs/>
            <Inputs>
              <Input id="input_video_stream" name="Input image" descr="Input image">
                <Datatype type="6"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="BangGenerator_17" catalog="kernel" class_id="bang_generator">
            <Parameters>
              <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="bang" name="Bang" descr="Bang">
                <Datatype type="2"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="InputSelector_6" catalog="kernel" class_id="input_selector">
            <Parameters>
              <Parameter id="active_input" name="Active input" descr="Zero-based index of the active input. The selected input is propagated to the output."
                         exported="1">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;2</Domain>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Output of the selector. It is equal to the specified input.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_1" name="Input 1" descr="0 input of the block.">
                <Datatype type="0"/>
              </Input>
              <Input id="input_2" name="Input 2" descr="1 input of the block.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="ConstantGenerator - int_15" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConstantGenerator - int_16" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="BangGenerator_18" catalog="kernel" class_id="bang_generator">
            <Parameters>
              <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="bang" name="Bang" descr="Bang">
                <Datatype type="2"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="InputSelector_7" catalog="kernel" class_id="input_selector">
            <Parameters>
              <Parameter id="active_input" name="Active input" descr="Zero-based index of the active input. The selected input is propagated to the output."
                         exported="1">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;2</Domain>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Output of the selector. It is equal to the specified input.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_1" name="Input 1" descr="0 input of the block.">
                <Datatype type="0"/>
              </Input>
              <Input id="input_2" name="Input 2" descr="1 input of the block.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="ConstantGenerator - int_17" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConstantGenerator - int_18" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="BangGenerator_19" catalog="kernel" class_id="bang_generator">
            <Parameters>
              <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="bang" name="Bang" descr="Bang">
                <Datatype type="2"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="InputSelector_8" catalog="kernel" class_id="input_selector">
            <Parameters>
              <Parameter id="active_input" name="Active input" descr="Zero-based index of the active input. The selected input is propagated to the output."
                         exported="1">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;2</Domain>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Output of the selector. It is equal to the specified input.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_1" name="Input 1" descr="0 input of the block.">
                <Datatype type="0"/>
              </Input>
              <Input id="input_2" name="Input 2" descr="1 input of the block.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="ConstantGenerator - int_19" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConstantGenerator - int_20" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="BangGenerator_20" catalog="kernel" class_id="bang_generator">
            <Parameters>
              <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="bang" name="Bang" descr="Bang">
                <Datatype type="2"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="InputSelector_9" catalog="kernel" class_id="input_selector">
            <Parameters>
              <Parameter id="active_input" name="Active input" descr="Zero-based index of the active input. The selected input is propagated to the output."
                         exported="1">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;2</Domain>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Output of the selector. It is equal to the specified input.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_1" name="Input 1" descr="0 input of the block.">
                <Datatype type="0"/>
              </Input>
              <Input id="input_2" name="Input 2" descr="1 input of the block.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="ConstantGenerator - int_21" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConstantGenerator - int_22" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="Snapshot_12" catalog="kernel" class_id="snapshot">
            <Parameters>
              <Parameter id="load" name="Load" descr="Load new value of datatype in the internal memory."
                         exported="1">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="reset" name="Reset" descr="Reset value of datatype in the internal memory"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous Output" descr="Generate a new copy of snapshot datatype on every block activation"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Datatype stored in the internal memory and propagated to the output.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input stored in the internal memory.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="Snapshot_13" catalog="kernel" class_id="snapshot">
            <Parameters>
              <Parameter id="load" name="Load" descr="Load new value of datatype in the internal memory."
                         exported="1">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="reset" name="Reset" descr="Reset value of datatype in the internal memory"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous Output" descr="Generate a new copy of snapshot datatype on every block activation"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Datatype stored in the internal memory and propagated to the output.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input stored in the internal memory.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="Snapshot_14" catalog="kernel" class_id="snapshot">
            <Parameters>
              <Parameter id="load" name="Load" descr="Load new value of datatype in the internal memory."
                         exported="1">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="reset" name="Reset" descr="Reset value of datatype in the internal memory"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous Output" descr="Generate a new copy of snapshot datatype on every block activation"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Datatype stored in the internal memory and propagated to the output.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input stored in the internal memory.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="Snapshot_15" catalog="kernel" class_id="snapshot">
            <Parameters>
              <Parameter id="load" name="Load" descr="Load new value of datatype in the internal memory."
                         exported="1">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="reset" name="Reset" descr="Reset value of datatype in the internal memory"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous Output" descr="Generate a new copy of snapshot datatype on every block activation"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Datatype stored in the internal memory and propagated to the output.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input stored in the internal memory.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="StringGenerator_21" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="1">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ImageMerge_1" catalog="base" class_id="image_merge">
            <Parameters/>
            <Outputs>
              <Output id="output_video_stream" name="Output image" descr="Output image">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_video_stream_1" name="Input image" descr="Input image">
                <Datatype type="6"/>
              </Input>
              <Input id="input_video_stream_2" name="Input image" descr="Input image">
                <Datatype type="6"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="ImageGenerator_1" catalog="base" class_id="image_generator">
            <Parameters>
              <Parameter id="continuous" name="Continuous" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="constant_alpha" name="Alpha" descr="The alpha channel is filled with this value."
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
              <Parameter id="source_type" name="Source type" descr="Specifies the type of image generated. May assume one of following values:&#13;&#10;Constant (all pixels have the same color)&#13;&#10;Color Bars (vertical bar of colors)&#13;&#10;Random values with uniform distribution (pixels have random values)&#13;&#10;Random values with Gaussian distribution (pixels have random values)&#13;&#10;Jaehne (Jaehne&#8217;s test image)&#13;&#10;Ramp (gradient of color intensity starting on the upper left corner)&#13;&#10;"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;6</Domain>
                <Layout type="0">
                  <Label>Constant</Label>
                  <Label>Color bars</Label>
                  <Label>Random values with uniform distribution</Label>
                  <Label>Random values with Gaussian distribution;Jaehne;Ramp</Label>
                </Layout>
              </Parameter>
              <Parameter id="unif_min" name="Min (uniform)" descr="Lower bound for the range of uniform distribution.&#13;&#10;This parameter is used only in the 'Random value with uniform distribution' source type."
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
              <Parameter id="unif_max" name="Max (uniform)" descr="Upper bound for the range of uniform distribution.&#13;&#10;This parameter is used only in the 'Random value with uniform distribution' source type."
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
              <Parameter id="gauss_mean" name="Mean" descr="Mean of gaussian distribution.&#13;&#10;This parameter is used only in the 'Random value with gaussian distribution' source type."
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
              <Parameter id="gauss_stddev" name="Standard deviation" descr="Standard deviation of gaussian distribution.&#13;&#10;This parameter is used only in the 'Random value with gaussian distribution' source type."
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
              <Parameter id="axis" name="Axis" descr="Specifies the direction of the image intensity ramp. May be the horizontal axis, the vertical axis, or both.&#13;&#10;This parameter is used only in 'Ramp' source type."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;3</Domain>
                <Layout type="0">
                  <Label>Horizontal axis;Vertical axis</Label>
                  <Label>Both axis</Label>
                </Layout>
              </Parameter>
              <Parameter id="ramp_offset" name="Offset" descr="Starting value of the color intensity ramp.&#13;&#10;This parameter is used only in the 'Ramp' source type."
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
              <Parameter id="ramp_slope" name="Slope" descr="Slope value of the color intensity ramp.&#13;&#10;This parameter is used only in the 'Ramp' source type."
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output_video_stream" name="Output" descr="The output with the characteristics specified in the block">
                <Datatype type="6"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ImageMerge_3" catalog="base" class_id="image_merge">
            <Parameters/>
            <Outputs>
              <Output id="output_video_stream" name="Output image" descr="Output image">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_video_stream_1" name="Input image" descr="Input image">
                <Datatype type="6"/>
              </Input>
              <Input id="input_video_stream_2" name="Input image" descr="Input image">
                <Datatype type="6"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="ImageGenerator_2" catalog="base" class_id="image_generator">
            <Parameters>
              <Parameter id="continuous" name="Continuous" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="constant_alpha" name="Alpha" descr="The alpha channel is filled with this value."
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
              <Parameter id="source_type" name="Source type" descr="Specifies the type of image generated. May assume one of following values:&#13;&#10;Constant (all pixels have the same color)&#13;&#10;Color Bars (vertical bar of colors)&#13;&#10;Random values with uniform distribution (pixels have random values)&#13;&#10;Random values with Gaussian distribution (pixels have random values)&#13;&#10;Jaehne (Jaehne&#8217;s test image)&#13;&#10;Ramp (gradient of color intensity starting on the upper left corner)&#13;&#10;"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;6</Domain>
                <Layout type="0">
                  <Label>Constant</Label>
                  <Label>Color bars</Label>
                  <Label>Random values with uniform distribution</Label>
                  <Label>Random values with Gaussian distribution;Jaehne;Ramp</Label>
                </Layout>
              </Parameter>
              <Parameter id="unif_min" name="Min (uniform)" descr="Lower bound for the range of uniform distribution.&#13;&#10;This parameter is used only in the 'Random value with uniform distribution' source type."
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
              <Parameter id="unif_max" name="Max (uniform)" descr="Upper bound for the range of uniform distribution.&#13;&#10;This parameter is used only in the 'Random value with uniform distribution' source type."
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
              <Parameter id="gauss_mean" name="Mean" descr="Mean of gaussian distribution.&#13;&#10;This parameter is used only in the 'Random value with gaussian distribution' source type."
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
              <Parameter id="gauss_stddev" name="Standard deviation" descr="Standard deviation of gaussian distribution.&#13;&#10;This parameter is used only in the 'Random value with gaussian distribution' source type."
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
              <Parameter id="axis" name="Axis" descr="Specifies the direction of the image intensity ramp. May be the horizontal axis, the vertical axis, or both.&#13;&#10;This parameter is used only in 'Ramp' source type."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;3</Domain>
                <Layout type="0">
                  <Label>Horizontal axis;Vertical axis</Label>
                  <Label>Both axis</Label>
                </Layout>
              </Parameter>
              <Parameter id="ramp_offset" name="Offset" descr="Starting value of the color intensity ramp.&#13;&#10;This parameter is used only in the 'Ramp' source type."
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
              <Parameter id="ramp_slope" name="Slope" descr="Slope value of the color intensity ramp.&#13;&#10;This parameter is used only in the 'Ramp' source type."
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output_video_stream" name="Output" descr="The output with the characteristics specified in the block">
                <Datatype type="6"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConcatenateStrings_16" catalog="base" class_id="concatenate_strings">
            <Parameters/>
            <Outputs>
              <Output id="output" name="Output string" descr="The concatenation of the input strings">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
              <Input id="input_3" name="Input string 3" descr="The input string 3 wil be placed at position 3 to build the output concatenated string">
                <Datatype type="3"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="ConstantGenerator - int_5" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="1">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="Counter_5" catalog="base" class_id="Counter">
            <Parameters>
              <Parameter id="Step" name="Step" descr="Step Description" exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="Begin" name="Begin" descr="Begin Description" exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="End" name="End" descr="End Description" exported="1">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="CustomReset" name="Custom reset value" descr="When the counter is reset, and the reset mode is set to custom value, this value is used."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="Start" name="Start" descr="Start Description" exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="Stop" name="Stop" descr="Stop Description" exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="Reset" name="Reset" descr="Reset Description" exported="1">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="ResetMode" name="Reset mode" descr="Specifies the behaviour when the counter is reset. The counter can reset to the initial value (Begin) or to a custom value."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;2</Domain>
                <Layout type="0">
                  <Label>Begin</Label>
                  <Label>Custom value</Label>
                </Layout>
              </Parameter>
              <Parameter id="TypeCounter" name="Bounding mode" descr="Specifies whether the counter is bounded (stops counting after a given bound is reached), unbounded (counts forever) or circular (restart from the beginning after a given bound is reached)."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;3</Domain>
                <Layout type="0">
                  <Label>Unbounded counter;Bounded counter</Label>
                  <Label>Circular counter</Label>
                </Layout>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="Output" name="Output" descr="Output Description">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="Input" name="Input" descr="Input Descrption">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="CompareWithValue - int_1" catalog="kernel" class_id="comparison_op_int">
            <Parameters>
              <Parameter id="op_type" name="Operation type" descr="Select the type of operation that will be performed on the input datatype."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;6</Domain>
                <Layout type="0">
                  <Label>Less Than (&lt;)</Label>
                  <Label>Less Than or Equal To (&lt;=);Equal To (=);Different From (!= or &lt;&gt;)</Label>
                  <Label>Greater Than (&gt;)</Label>
                  <Label>Greater Than or Equal To (&gt;=)</Label>
                </Layout>
              </Parameter>
              <Parameter id="scalar_value" name="Value" descr="Value to compare with the input pin."
                         exported="1">
                <Datatype type="4"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Result of comparison operation.">
                <Datatype type="1"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input before comparing datatype.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="BooleanToTrigger_1" catalog="base" class_id="bool_to_trigger">
            <Parameters>
              <Parameter id="mode" name="Mode" descr="Specifies when to generate the output trigger. "
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;5</Domain>
                <Layout type="0">
                  <Label>False to true;True to false</Label>
                  <Label>Any change</Label>
                  <Label>True;False</Label>
                </Layout>
              </Parameter>
              <Parameter id="initial_state" name="Initial state" descr="This value is used only at first signal change detection to initialize the previous signal state."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;3</Domain>
                <Layout type="0">
                  <Label>Indeterminate;True</Label>
                  <Label>False</Label>
                </Layout>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Output trigger datatype.">
                <Datatype type="2"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input boolean datatype. The block generates a trigger as output according to the value of this datatype.">
                <Datatype type="1"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="Confirm" catalog="kernel" class_id="bang_generator">
            <Parameters>
              <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="bang" name="Bang" descr="Bang">
                <Datatype type="2"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ScalarDisplay_6" catalog="base" class_id="Display">
            <Parameters>
              <Parameter id="DisplayNDD" name="Decimal digits" descr="If the input datatype is double it sets the number of decimal digits to be shown."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs>
              <Input id="Input000" name="Input 0" descr="Input 0 of the block">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="ScalarDisplay_9" catalog="base" class_id="Display">
            <Parameters>
              <Parameter id="DisplayNDD" name="Decimal digits" descr="If the input datatype is double it sets the number of decimal digits to be shown."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs>
              <Input id="Input000" name="Input 0" descr="Input 0 of the block">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="ConstantGenerator - int_7" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="Logical_1" catalog="kernel" class_id="logical_op">
            <Parameters>
              <Parameter id="op_type" name="Operation type" descr="Select the type of logic operation that will be performed on the input datatypes."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;6</Domain>
                <Layout type="0">
                  <Label>AND</Label>
                  <Label>OR</Label>
                  <Label>XOR</Label>
                  <Label>NAND</Label>
                  <Label>NOR</Label>
                  <Label>NXOR</Label>
                </Layout>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Block output. It contains the result of the specified operation.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_1" name="Input 1" descr="This input represent the 0th operand involved in the operation.">
                <Datatype type="0"/>
              </Input>
              <Input id="input_2" name="Input 2" descr="This input represent the 1th operand involved in the operation.">
                <Datatype type="0"/>
              </Input>
              <Input id="input_3" name="Input 3" descr="This input represent the 2th operand involved in the operation.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="comapreInit" catalog="kernel" class_id="comparison_op_int">
            <Parameters>
              <Parameter id="op_type" name="Operation type" descr="Select the type of operation that will be performed on the input datatype."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;6</Domain>
                <Layout type="0">
                  <Label>Less Than (&lt;)</Label>
                  <Label>Less Than or Equal To (&lt;=);Equal To (=);Different From (!= or &lt;&gt;)</Label>
                  <Label>Greater Than (&gt;)</Label>
                  <Label>Greater Than or Equal To (&gt;=)</Label>
                </Layout>
              </Parameter>
              <Parameter id="scalar_value" name="Value" descr="Value to compare with the input pin."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Result of comparison operation.">
                <Datatype type="1"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input before comparing datatype.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="CompareWithString_1" catalog="base" class_id="compare_string">
            <Parameters>
              <Parameter id="compare_string" name="StringTemplate" descr="Template string for comparison. (use regular expression syntax in Perl syntax: http://www.boost.org/libs/regex/doc/syntax_perl.html#Perl). For example, .* pattern matches any number of characters, thus behaving similarly to the * pattern.So if you need to match objects with label starting with 'point' substring, you can write (point).* instead, if you need to match objects with label containing 'point' substring, you can write .*(point).* "
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output_comparison" name="CompareValue" descr="The output value is 1 if the strings match, 0 otherwise. ">
                <Datatype type="1"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_string" name="InputString" descr="String to compare">
                <Datatype type="3"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="CompareWithString_2" catalog="base" class_id="compare_string">
            <Parameters>
              <Parameter id="compare_string" name="StringTemplate" descr="Template string for comparison. (use regular expression syntax in Perl syntax: http://www.boost.org/libs/regex/doc/syntax_perl.html#Perl). For example, .* pattern matches any number of characters, thus behaving similarly to the * pattern.So if you need to match objects with label starting with 'point' substring, you can write (point).* instead, if you need to match objects with label containing 'point' substring, you can write .*(point).* "
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output_comparison" name="CompareValue" descr="The output value is 1 if the strings match, 0 otherwise. ">
                <Datatype type="1"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_string" name="InputString" descr="String to compare">
                <Datatype type="3"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="CompareWithString_3" catalog="base" class_id="compare_string">
            <Parameters>
              <Parameter id="compare_string" name="StringTemplate" descr="Template string for comparison. (use regular expression syntax in Perl syntax: http://www.boost.org/libs/regex/doc/syntax_perl.html#Perl). For example, .* pattern matches any number of characters, thus behaving similarly to the * pattern.So if you need to match objects with label starting with 'point' substring, you can write (point).* instead, if you need to match objects with label containing 'point' substring, you can write .*(point).* "
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output_comparison" name="CompareValue" descr="The output value is 1 if the strings match, 0 otherwise. ">
                <Datatype type="1"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_string" name="InputString" descr="String to compare">
                <Datatype type="3"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="ConstantGenerator - int_3" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="CompareWithValue - int_2" catalog="kernel" class_id="comparison_op_int">
            <Parameters>
              <Parameter id="op_type" name="Operation type" descr="Select the type of operation that will be performed on the input datatype."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;6</Domain>
                <Layout type="0">
                  <Label>Less Than (&lt;)</Label>
                  <Label>Less Than or Equal To (&lt;=);Equal To (=);Different From (!= or &lt;&gt;)</Label>
                  <Label>Greater Than (&gt;)</Label>
                  <Label>Greater Than or Equal To (&gt;=)</Label>
                </Layout>
              </Parameter>
              <Parameter id="scalar_value" name="Value" descr="Value to compare with the input pin."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Result of comparison operation.">
                <Datatype type="1"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input before comparing datatype.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="Logical_2" catalog="kernel" class_id="logical_op">
            <Parameters>
              <Parameter id="op_type" name="Operation type" descr="Select the type of logic operation that will be performed on the input datatypes."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;6</Domain>
                <Layout type="0">
                  <Label>AND</Label>
                  <Label>OR</Label>
                  <Label>XOR</Label>
                  <Label>NAND</Label>
                  <Label>NOR</Label>
                  <Label>NXOR</Label>
                </Layout>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Block output. It contains the result of the specified operation.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_1" name="Input 1" descr="This input represent the 0th operand involved in the operation.">
                <Datatype type="0"/>
              </Input>
              <Input id="input_2" name="Input 2" descr="This input represent the 1th operand involved in the operation.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="CompareWithValue - int_3" catalog="kernel" class_id="comparison_op_int">
            <Parameters>
              <Parameter id="op_type" name="Operation type" descr="Select the type of operation that will be performed on the input datatype."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;6</Domain>
                <Layout type="0">
                  <Label>Less Than (&lt;)</Label>
                  <Label>Less Than or Equal To (&lt;=);Equal To (=);Different From (!= or &lt;&gt;)</Label>
                  <Label>Greater Than (&gt;)</Label>
                  <Label>Greater Than or Equal To (&gt;=)</Label>
                </Layout>
              </Parameter>
              <Parameter id="scalar_value" name="Value" descr="Value to compare with the input pin."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Result of comparison operation.">
                <Datatype type="1"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input before comparing datatype.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="Delay_1" catalog="kernel" class_id="delay">
            <Parameters>
              <Parameter id="reset" name="Reset" descr="Reset the status of the block by discarding the datatypes being stored. New datatypes will be processed normally (i.e.., will be delayed)"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Output datatype (delayed)">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input datatype which will be delayed before being sent out. The block doesn't stop the execution of the patch during the time of delay. ">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="PointToRoi_2" catalog="base" class_id="pointtoroi">
            <Parameters>
              <Parameter id="roi_offset" name="ROI Offset" descr="Specify the position of the input point with respect to the generated output rectangle"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;9</Domain>
                <Layout type="0">
                  <Label>Top Left</Label>
                  <Label>Top Center;Top Right;Middle Left;Middle Center</Label>
                  <Label>Middle Right</Label>
                  <Label>Bottom Left</Label>
                  <Label>Bottom Center;Bottom Right</Label>
                </Layout>
              </Parameter>
              <Parameter id="null_roi" name="Null ROI" descr="If set to true, the NULL flag of the output ROI. Note that implementations of blocks may interpret a NULL ROI differently from an empty ROI. For instance, the image datatype inteprets a NULL ROI as a ROI covering the whole images, whereas an empty ROI (width or height set to zero) actually causes all pixels to be unaffected by the subsequent operations"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="size_x" name="Width" descr="Width of the generated rectangle"
                         exported="1">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="size_y" name="Height" descr="Height of the generated rectangle"
                         exported="1">
                <Datatype type="4"/>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs/>
          </Block>
          <Block label="Point2DGenerator_4" catalog="base" class_id="point2d_generator">
            <Parameters>
              <Parameter id="x" name="X" descr="X value" exported="1">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="y" name="Y" descr="Y value" exported="1">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="trasform" name="Matrix trasform" descr="Matrix trasform"
                         exported="0">
                <Datatype type="8"/>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs/>
          </Block>
          <Block label="IntGenerator_3" catalog="kernel" class_id="int_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Value" exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="IntGenerator_5" catalog="kernel" class_id="int_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Value" exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="IntGenerator_6" catalog="kernel" class_id="int_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Value" exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="IntGenerator_2" catalog="kernel" class_id="int_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Value" exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="RGBGenerator_1" catalog="gpgpu" class_id="rgb_generator">
            <Parameters>
              <Parameter id="red" name="Red" descr="Red component" exported="0">
                <Datatype type="5"/>
                <Domain type="1">1;0;1;1</Domain>
              </Parameter>
              <Parameter id="green" name="Green" descr="Green component" exported="0">
                <Datatype type="5"/>
                <Domain type="1">1;0;1;1</Domain>
              </Parameter>
              <Parameter id="blue" name="Blue" descr="Blue component" exported="0">
                <Datatype type="5"/>
                <Domain type="1">1;0;1;1</Domain>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs/>
          </Block>
          <Block label="RGBGenerator_2" catalog="gpgpu" class_id="rgb_generator">
            <Parameters>
              <Parameter id="red" name="Red" descr="Red component" exported="0">
                <Datatype type="5"/>
                <Domain type="1">1;0;1;1</Domain>
              </Parameter>
              <Parameter id="green" name="Green" descr="Green component" exported="0">
                <Datatype type="5"/>
                <Domain type="1">1;0;1;1</Domain>
              </Parameter>
              <Parameter id="blue" name="Blue" descr="Blue component" exported="0">
                <Datatype type="5"/>
                <Domain type="1">1;0;1;1</Domain>
              </Parameter>
            </Parameters>
            <Outputs/>
            <Inputs/>
          </Block>
          <Block label="StringGenerator_24" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="1">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="RemoveDuplicates_1" catalog="base" class_id="remove_duplicates">
            <Parameters/>
            <Outputs>
              <Output id="Output" name="Output" descr="Output">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="Input" name="Input" descr="Input">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="SetToNull" catalog="kernel" class_id="bang_generator">
            <Parameters>
              <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="bang" name="Bang" descr="Bang">
                <Datatype type="2"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="StringGenerator_25" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="StringGenerator_20" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="1">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="Filename" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="1">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="InputSelector_2" catalog="kernel" class_id="input_selector">
            <Parameters>
              <Parameter id="active_input" name="Active input" descr="Zero-based index of the active input. The selected input is propagated to the output."
                         exported="1">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;2</Domain>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Output of the selector. It is equal to the specified input.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_1" name="Input 1" descr="0 input of the block.">
                <Datatype type="0"/>
              </Input>
              <Input id="input_2" name="Input 2" descr="1 input of the block.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="SpawnCommand_1" catalog="base" class_id="spawn_command">
            <Parameters>
              <Parameter id="allow_duplicates" name="Allow duplicates" descr="If set to true, dusplicates commands are executed. If set to false, only the first occurance is executed"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="handle_process" name="OutputHandle" descr="The handler of the process executed">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="command_string" name="InputCommand" descr="The command-line of the process to be executed">
                <Datatype type="3"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="StringGenerator_22" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="Close Gui" catalog="kernel" class_id="bang_generator">
            <Parameters>
              <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="bang" name="Bang" descr="Bang">
                <Datatype type="2"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="StartIsClicked" catalog="kernel" class_id="comparison_op_int">
            <Parameters>
              <Parameter id="op_type" name="Operation type" descr="Select the type of operation that will be performed on the input datatype."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;6</Domain>
                <Layout type="0">
                  <Label>Less Than (&lt;)</Label>
                  <Label>Less Than or Equal To (&lt;=);Equal To (=);Different From (!= or &lt;&gt;)</Label>
                  <Label>Greater Than (&gt;)</Label>
                  <Label>Greater Than or Equal To (&gt;=)</Label>
                </Layout>
              </Parameter>
              <Parameter id="scalar_value" name="Value" descr="Value to compare with the input pin."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Result of comparison operation.">
                <Datatype type="1"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input before comparing datatype.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="LoadConfig" catalog="kernel" class_id="comparison_op_int">
            <Parameters>
              <Parameter id="op_type" name="Operation type" descr="Select the type of operation that will be performed on the input datatype."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;6</Domain>
                <Layout type="0">
                  <Label>Less Than (&lt;)</Label>
                  <Label>Less Than or Equal To (&lt;=);Equal To (=);Different From (!= or &lt;&gt;)</Label>
                  <Label>Greater Than (&gt;)</Label>
                  <Label>Greater Than or Equal To (&gt;=)</Label>
                </Layout>
              </Parameter>
              <Parameter id="scalar_value" name="Value" descr="Value to compare with the input pin."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Result of comparison operation.">
                <Datatype type="1"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input before comparing datatype.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="StringGenerator_26" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="_FDBKString" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="1">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="StringGenerator_28" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="StringGenerator_29" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="BangGenerator_9" catalog="kernel" class_id="bang_generator">
            <Parameters>
              <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="bang" name="Bang" descr="Bang">
                <Datatype type="2"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="CompareWithString_5" catalog="base" class_id="compare_string">
            <Parameters>
              <Parameter id="compare_string" name="StringTemplate" descr="Template string for comparison. (use regular expression syntax in Perl syntax: http://www.boost.org/libs/regex/doc/syntax_perl.html#Perl). For example, .* pattern matches any number of characters, thus behaving similarly to the * pattern.So if you need to match objects with label starting with 'point' substring, you can write (point).* instead, if you need to match objects with label containing 'point' substring, you can write .*(point).* "
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output_comparison" name="CompareValue" descr="The output value is 1 if the strings match, 0 otherwise. ">
                <Datatype type="1"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_string" name="InputString" descr="String to compare">
                <Datatype type="3"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="Logical_3" catalog="kernel" class_id="logical_op">
            <Parameters>
              <Parameter id="op_type" name="Operation type" descr="Select the type of logic operation that will be performed on the input datatypes."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;6</Domain>
                <Layout type="0">
                  <Label>AND</Label>
                  <Label>OR</Label>
                  <Label>XOR</Label>
                  <Label>NAND</Label>
                  <Label>NOR</Label>
                  <Label>NXOR</Label>
                </Layout>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Block output. It contains the result of the specified operation.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_1" name="Input 1" descr="This input represent the 0th operand involved in the operation.">
                <Datatype type="0"/>
              </Input>
              <Input id="input_2" name="Input 2" descr="This input represent the 1th operand involved in the operation.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="CompareToStart" catalog="kernel" class_id="comparison_op_int">
            <Parameters>
              <Parameter id="op_type" name="Operation type" descr="Select the type of operation that will be performed on the input datatype."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;6</Domain>
                <Layout type="0">
                  <Label>Less Than (&lt;)</Label>
                  <Label>Less Than or Equal To (&lt;=);Equal To (=);Different From (!= or &lt;&gt;)</Label>
                  <Label>Greater Than (&gt;)</Label>
                  <Label>Greater Than or Equal To (&gt;=)</Label>
                </Layout>
              </Parameter>
              <Parameter id="scalar_value" name="Value" descr="Value to compare with the input pin."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Result of comparison operation.">
                <Datatype type="1"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input before comparing datatype.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="MonadicLogical_1" catalog="kernel" class_id="monadic_logic_op">
            <Parameters>
              <Parameter id="op_type" name="Operation type" descr="Select the type of operation that will be performed on the input datatypes. At the moment the block compute only not operation."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;1;0</Domain>
                <Layout type="0">
                  <Label>Not</Label>
                </Layout>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Block output. It contains the result of the specified operation.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input value">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="BooleanToTrigger_5" catalog="base" class_id="bool_to_trigger">
            <Parameters>
              <Parameter id="mode" name="Mode" descr="Specifies when to generate the output trigger. "
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;5</Domain>
                <Layout type="0">
                  <Label>False to true;True to false</Label>
                  <Label>Any change</Label>
                  <Label>True;False</Label>
                </Layout>
              </Parameter>
              <Parameter id="initial_state" name="Initial state" descr="This value is used only at first signal change detection to initialize the previous signal state."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;3</Domain>
                <Layout type="0">
                  <Label>Indeterminate;True</Label>
                  <Label>False</Label>
                </Layout>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Output trigger datatype.">
                <Datatype type="2"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input boolean datatype. The block generates a trigger as output according to the value of this datatype.">
                <Datatype type="1"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="StringGenerator_27" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="1">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="BooleanToTrigger_6" catalog="base" class_id="bool_to_trigger">
            <Parameters>
              <Parameter id="mode" name="Mode" descr="Specifies when to generate the output trigger. "
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;5</Domain>
                <Layout type="0">
                  <Label>False to true;True to false</Label>
                  <Label>Any change</Label>
                  <Label>True;False</Label>
                </Layout>
              </Parameter>
              <Parameter id="initial_state" name="Initial state" descr="This value is used only at first signal change detection to initialize the previous signal state."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;3</Domain>
                <Layout type="0">
                  <Label>Indeterminate;True</Label>
                  <Label>False</Label>
                </Layout>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Output trigger datatype.">
                <Datatype type="2"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input boolean datatype. The block generates a trigger as output according to the value of this datatype.">
                <Datatype type="1"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="StringGenerator_30" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="StringGenerator_31" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="BangGenerator_11" catalog="kernel" class_id="bang_generator">
            <Parameters>
              <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
              <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="bang" name="Bang" descr="Bang">
                <Datatype type="2"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="StringGenerator_32" catalog="kernel" class_id="string_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="*videoScroll" catalog="kernel" class_id="double_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Value" exported="1">
                <Datatype type="5"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="5"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ScalarRescaler_1" catalog="base" class_id="Rescale">
            <Parameters>
              <Parameter id="param_mode" name="Mode" descr="Set the input range mode parameter. In custom mode the user must provides the input range. In automatic mode it is calculated setting end and start input range as maximum and minimum input values."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;2</Domain>
                <Layout type="0">
                  <Label>Custom range;Automatic range</Label>
                </Layout>
              </Parameter>
              <Parameter id="param_start_range_output" name="Start Range Output" descr="Start Range Output"
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
              <Parameter id="param_end_range_output" name="End Range Output" descr="End Range Output"
                         exported="1">
                <Datatype type="5"/>
              </Parameter>
              <Parameter id="param_start_range_input" name="Start Range Input" descr="Start Range Input. Ignored in automatic mode."
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
              <Parameter id="param_end_range_input" name="End Range Input" descr="End Range Input. Ignored in automatic mode."
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
              <Parameter id="param_update" name="Update" descr="Use input value to update max and min values. Not used in custom mode."
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="param_not_update" name="NotUpdate" descr="Use old max and min value. Not used in custom mode."
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Output rescaled value.">
                <Datatype type="5"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input value. ">
                <Datatype type="5"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="***TypeCast_1" catalog="base" class_id="ConversionLegacy">
            <Parameters/>
            <Outputs>
              <Output id="Output" name="Output" descr="Output">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="Input" name="Input" descr="Input">
                <Datatype type="4"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="*formatStartFRAME" catalog="base" class_id="format_int_as_string">
            <Parameters>
              <Parameter id="num_character" name="NumCharacter" descr="Number of character"
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;0;0</Domain>
              </Parameter>
              <Parameter id="format_string" name="FormatString" descr="Specifies character to add"
                         exported="0">
                <Datatype type="3"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Output">
                <Datatype type="3"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input">
                <Datatype type="4"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="*endFrame" catalog="kernel" class_id="double_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Value" exported="1">
                <Datatype type="5"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Value" descr="Value">
                <Datatype type="5"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ScalarRescaler_2" catalog="base" class_id="Rescale">
            <Parameters>
              <Parameter id="param_mode" name="Mode" descr="Set the input range mode parameter. In custom mode the user must provides the input range. In automatic mode it is calculated setting end and start input range as maximum and minimum input values."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;2</Domain>
                <Layout type="0">
                  <Label>Custom range;Automatic range</Label>
                </Layout>
              </Parameter>
              <Parameter id="param_start_range_output" name="Start Range Output" descr="Start Range Output"
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
              <Parameter id="param_end_range_output" name="End Range Output" descr="End Range Output"
                         exported="1">
                <Datatype type="5"/>
              </Parameter>
              <Parameter id="param_start_range_input" name="Start Range Input" descr="Start Range Input. Ignored in automatic mode."
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
              <Parameter id="param_end_range_input" name="End Range Input" descr="End Range Input. Ignored in automatic mode."
                         exported="0">
                <Datatype type="5"/>
              </Parameter>
              <Parameter id="param_update" name="Update" descr="Use input value to update max and min values. Not used in custom mode."
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
              <Parameter id="param_not_update" name="NotUpdate" descr="Use old max and min value. Not used in custom mode."
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Output rescaled value.">
                <Datatype type="5"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input value. ">
                <Datatype type="5"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="***TypeCast_2" catalog="base" class_id="ConversionLegacy">
            <Parameters/>
            <Outputs>
              <Output id="Output" name="Output" descr="Output">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="Input" name="Input" descr="Input">
                <Datatype type="4"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="ConstantGenerator - int_8" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="InputSelector_10" catalog="kernel" class_id="input_selector">
            <Parameters>
              <Parameter id="active_input" name="Active input" descr="Zero-based index of the active input. The selected input is propagated to the output."
                         exported="1">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;2</Domain>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Output of the selector. It is equal to the specified input.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input_1" name="Input 1" descr="0 input of the block.">
                <Datatype type="0"/>
              </Input>
              <Input id="input_2" name="Input 2" descr="1 input of the block.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="ConstantGenerator - int_9" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConstantGenerator - int_10" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ScalarArithmeticOperation - int_3" catalog="kernel" class_id="scalar_arith_op_int">
            <Parameters>
              <Parameter id="op_type" name="Operation type" descr="Select the type of operation that will be performed on the input datatype."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;9</Domain>
                <Layout type="0">
                  <Label>Sum</Label>
                  <Label>Subtract;Subtract inverse;Multiply;Divide;Divide inverse</Label>
                  <Label>Max</Label>
                  <Label>Min</Label>
                  <Label>Set value</Label>
                </Layout>
              </Parameter>
              <Parameter id="scalar_value" name="Scalar value" descr="Specifies the scalar value involved in the operation."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Block output. It contains the result of the specified operation.">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="This input represent the operand involved in the operation with the scalar value.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="ConstantGenerator - int_11" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConstantGenerator - int_23" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="1">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConstantGenerator - int_24" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConstantGenerator - int_25" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConstantGenerator - int_26" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConstantGenerator - int_27" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="1">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConstantGenerator - int_28" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="1">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConstantGenerator - int_29" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConstantGenerator - int_6" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="1">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="CloseGuiVisible" catalog="kernel" class_id="comparison_op_int">
            <Parameters>
              <Parameter id="op_type" name="Operation type" descr="Select the type of operation that will be performed on the input datatype."
                         exported="0">
                <Datatype type="4"/>
                <Domain type="0">1;0;2;6</Domain>
                <Layout type="0">
                  <Label>Less Than (&lt;)</Label>
                  <Label>Less Than or Equal To (&lt;=);Equal To (=);Different From (!= or &lt;&gt;)</Label>
                  <Label>Greater Than (&gt;)</Label>
                  <Label>Greater Than or Equal To (&gt;=)</Label>
                </Layout>
              </Parameter>
              <Parameter id="scalar_value" name="Value" descr="Value to compare with the input pin."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Result of comparison operation.">
                <Datatype type="1"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input before comparing datatype.">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
          <Block label="ConstantGenerator - int_30" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConstantGenerator - int_31" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="1">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="ConstantGenerator - int_32" catalog="kernel" class_id="int_const_generator">
            <Parameters>
              <Parameter id="value" name="Value" descr="Input value of the constant."
                         exported="0">
                <Datatype type="4"/>
              </Parameter>
              <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                         exported="0">
                <Datatype type="1"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output Value" descr="Output Value of the constant.">
                <Datatype type="4"/>
              </Output>
            </Outputs>
            <Inputs/>
          </Block>
          <Block label="Delay_2" catalog="kernel" class_id="delay">
            <Parameters>
              <Parameter id="reset" name="Reset" descr="Reset the status of the block by discarding the datatypes being stored. New datatypes will be processed normally (i.e.., will be delayed)"
                         exported="0">
                <Datatype type="2"/>
              </Parameter>
            </Parameters>
            <Outputs>
              <Output id="output" name="Output" descr="Output datatype (delayed)">
                <Datatype type="0"/>
              </Output>
            </Outputs>
            <Inputs>
              <Input id="input" name="Input" descr="Input datatype which will be delayed before being sent out. The block doesn't stop the execution of the patch during the time of delay. ">
                <Datatype type="0"/>
              </Input>
            </Inputs>
          </Block>
        </Blocks>
        <SubpatchParamPins/>
        <SubpatchOutputPins/>
        <SubpatchInputPins/>
      </PatchOutline>
      <EywSheetBindSheetVisible patch="" label="" id=""/>
    </Sheet>
  </Sheets>
  <PatchOutline imported_patch="RoiSelectionTool">
    <Blocks>
      <Block label="GetIndexedPath_1" catalog="base" class_id="get_indexed_path">
        <Parameters>
          <Parameter id="path" name="Source Folder" descr="Source Folder" exported="1">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="recursive" name="Recursive" descr="Recursive search" exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="file_or_path" name="Files or paths" descr="Specifies whether the block enumerates files or paths"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;2</Domain>
            <Layout type="0">
              <Label>File</Label>
              <Label>Path</Label>
            </Layout>
          </Parameter>
          <Parameter id="mask" name="Filename mask" descr="Filename/pathname mask (use regular expression syntax in Perl syntax: http://www.boost.org/libs/regex/doc/syntax_perl.html#Perl)"
                     exported="1">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="order_by" name="Order by" descr="Order file by name, date etc.."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;3</Domain>
            <Layout type="0">
              <Label>Name</Label>
              <Label>Last Write;Size</Label>
            </Layout>
          </Parameter>
          <Parameter id="sorting_type" name="Sorting type" descr="Sorting Type" exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;3</Domain>
            <Layout type="0">
              <Label>Ascending</Label>
              <Label>Descending</Label>
              <Label>Random</Label>
            </Layout>
          </Parameter>
          <Parameter id="refresh" name="Refresh" descr="Refresh" exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="out_of_bound" name="Out of bounds" descr="Set the behaviour if the index of file is negative or greater than the number of files in the seleceted folder"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;3</Domain>
            <Layout type="0">
              <Label>Wrap;Bound;Ignore</Label>
            </Layout>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="path" name="Pathname" descr="Full pathname">
            <Datatype type="3"/>
          </Output>
          <Output id="number_of_files" name="Number of files" descr="Number of files found">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="File index">
            <Datatype type="4"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="GetSpecialFolder_1" catalog="kernel" class_id="get_special_folder">
        <Parameters>
          <Parameter id="folder_type" name="Special Folder Type" descr="Specifies which type of folder to query.&#10; - KernelFolder: the folder where the EyesWeb kernel dll currently in use is located&#10; - PatchFolder: the folder where the currently running patch is located"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;2</Domain>
            <Layout type="0">
              <Label>KernelFolder</Label>
              <Label>PatchFolder</Label>
            </Layout>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous Output" descr="Specifies if the block has to output the folder continuously or not.&#10;"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="folder" name="Folder" descr="The queried folder">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConcatenateStrings_1" catalog="base" class_id="concatenate_strings">
        <Parameters/>
        <Outputs>
          <Output id="output" name="Output string" descr="The concatenation of the input strings">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="BangGenerator_1" catalog="kernel" class_id="bang_generator">
        <Parameters>
          <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="bang" name="Bang" descr="Bang">
            <Datatype type="2"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="GetFilePathComponent_1" catalog="base" class_id="GetFilePathComponent">
        <Parameters>
          <Parameter id="ComponentType" name="Component type" descr="Used to set the type of component to be extracted"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;4</Domain>
            <Layout type="0">
              <Label>File Name or Folder Name</Label>
              <Label>Path</Label>
              <Label>File Stem (Filename Without Extension)</Label>
              <Label>File Extension</Label>
            </Layout>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="OutputComponent" name="File Name" descr="The extracted file name">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="InputPath" name="Input File Path" descr="The input file path">
            <Datatype type="3"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="SetROI_1" catalog="base" class_id="image_set_roi">
        <Parameters/>
        <Outputs>
          <Output id="output_video_stream" name="Output image" descr="Output image">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_video_stream" name="Input image" descr="Input image">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="SetROI_12" catalog="base" class_id="image_set_roi">
        <Parameters/>
        <Outputs>
          <Output id="output_video_stream" name="Output image" descr="Output image">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_video_stream" name="Input image" descr="Input image">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="WriteToFile_1" catalog="base" class_id="WriteToFile">
        <Parameters>
          <Parameter id="file_name" name="FileName" descr="File Name" exported="1">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="file_mode" name="WritingMode" descr="Specifies if the file is overwited or appended every time the patch is started.&#10; append mode has been disabled because its behavior was broken&#10;"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;2</Domain>
            <Layout type="0">
              <Label>Append</Label>
              <Label>Overwrite</Label>
            </Layout>
          </Parameter>
          <Parameter id="write_header" name="WriteHeader" descr="It specifies if the block writes or not the header line. IF THIS PARAMETER IS SET TO FALSE, THE OUTPUT FILE IS NOT READABLE  USING READFROMFILE BLOCK!"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs>
          <Input id="input_00" name="Input00" descr="Input 00.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="StringDisplay_3" catalog="system" class_id="string_display">
        <Parameters>
          <Parameter id="number_of_lines" name="Number of lines" descr="The number of lines which compose the document on which the text is written"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;1;0;0</Domain>
          </Parameter>
          <Parameter id="number_of_columns" name="Number of columns" descr="The number of columns which compose the document on which the text is written"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;1;0;0</Domain>
          </Parameter>
          <Parameter id="aligment" name="Horizontal alignment" descr="Background color (RGB model space)"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;3</Domain>
            <Layout type="0">
              <Label>Near (left);Center</Label>
              <Label>Far (right)</Label>
            </Layout>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs>
          <Input id="string" name="Input string" descr="Input string to display.">
            <Datatype type="3"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="GetSpecialFolder_2" catalog="kernel" class_id="get_special_folder">
        <Parameters>
          <Parameter id="folder_type" name="Special Folder Type" descr="Specifies which type of folder to query.&#10; - KernelFolder: the folder where the EyesWeb kernel dll currently in use is located&#10; - PatchFolder: the folder where the currently running patch is located"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;2</Domain>
            <Layout type="0">
              <Label>KernelFolder</Label>
              <Label>PatchFolder</Label>
            </Layout>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous Output" descr="Specifies if the block has to output the folder continuously or not.&#10;"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="folder" name="Folder" descr="The queried folder">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConcatenateStrings_3" catalog="base" class_id="concatenate_strings">
        <Parameters/>
        <Outputs>
          <Output id="output" name="Output string" descr="The concatenation of the input strings">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_3" name="Input string 3" descr="The input string 3 wil be placed at position 3 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_4" name="Input string 4" descr="The input string 4 wil be placed at position 4 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="StringGenerator_3" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="StringGenerator_6" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="StringGenerator_2" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="StringGenerator_5" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="IntGenerator_1" catalog="kernel" class_id="int_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Value" exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="SetROI_2" catalog="base" class_id="image_set_roi">
        <Parameters/>
        <Outputs>
          <Output id="output_video_stream" name="Output image" descr="Output image">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_video_stream" name="Input image" descr="Input image">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="SetROI_3" catalog="base" class_id="image_set_roi">
        <Parameters/>
        <Outputs>
          <Output id="output_video_stream" name="Output image" descr="Output image">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_video_stream" name="Input image" descr="Input image">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="SetROI_4" catalog="base" class_id="image_set_roi">
        <Parameters/>
        <Outputs>
          <Output id="output_video_stream" name="Output image" descr="Output image">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_video_stream" name="Input image" descr="Input image">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="SetROI_5" catalog="base" class_id="image_set_roi">
        <Parameters/>
        <Outputs>
          <Output id="output_video_stream" name="Output image" descr="Output image">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_video_stream" name="Input image" descr="Input image">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="ScalarArithmeticOperation - int_2" catalog="kernel" class_id="scalar_arith_op_int">
        <Parameters>
          <Parameter id="op_type" name="Operation type" descr="Select the type of operation that will be performed on the input datatype."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;9</Domain>
            <Layout type="0">
              <Label>Sum</Label>
              <Label>Subtract;Subtract inverse;Multiply;Divide;Divide inverse</Label>
              <Label>Max</Label>
              <Label>Min</Label>
              <Label>Set value</Label>
            </Layout>
          </Parameter>
          <Parameter id="scalar_value" name="Scalar value" descr="Specifies the scalar value involved in the operation."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Block output. It contains the result of the specified operation.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="This input represent the operand involved in the operation with the scalar value.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="OutputSelector_1" catalog="kernel" class_id="output_selector">
        <Parameters>
          <Parameter id="active_output" name="Active output" descr="Zero-based index of the active output. The selected output is activated."
                     exported="1">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;6</Domain>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output_1" name="Output 1" descr="0 output of the block.">
            <Datatype type="0"/>
          </Output>
          <Output id="output_2" name="Output 2" descr="1 output of the block.">
            <Datatype type="0"/>
          </Output>
          <Output id="output_3" name="Output 3" descr="2 output of the block.">
            <Datatype type="0"/>
          </Output>
          <Output id="output_4" name="Output 4" descr="3 output of the block.">
            <Datatype type="0"/>
          </Output>
          <Output id="output_5" name="Output 5" descr="4 output of the block.">
            <Datatype type="0"/>
          </Output>
          <Output id="output_6" name="Output 6" descr="5 output of the block.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input of the selector. The input is propagated to the choosen output.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="BangGenerator_5" catalog="kernel" class_id="bang_generator">
        <Parameters>
          <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="bang" name="Bang" descr="Bang">
            <Datatype type="2"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConcatenateStrings_2" catalog="base" class_id="concatenate_strings">
        <Parameters/>
        <Outputs>
          <Output id="output" name="Output string" descr="The concatenation of the input strings">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_3" name="Input string 3" descr="The input string 3 wil be placed at position 3 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_4" name="Input string 4" descr="The input string 4 wil be placed at position 4 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_5" name="Input string 5" descr="The input string 5 wil be placed at position 5 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_6" name="Input string 6" descr="The input string 6 wil be placed at position 6 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_7" name="Input string 7" descr="The input string 7 wil be placed at position 7 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_8" name="Input string 8" descr="The input string 8 wil be placed at position 8 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_9" name="Input string 9" descr="The input string 9 wil be placed at position 9 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="StringGenerator_1" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConcatenateStrings_4" catalog="base" class_id="concatenate_strings">
        <Parameters/>
        <Outputs>
          <Output id="output" name="Output string" descr="The concatenation of the input strings">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_3" name="Input string 3" descr="The input string 3 wil be placed at position 3 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_4" name="Input string 4" descr="The input string 4 wil be placed at position 4 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_5" name="Input string 5" descr="The input string 5 wil be placed at position 5 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_6" name="Input string 6" descr="The input string 6 wil be placed at position 6 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_7" name="Input string 7" descr="The input string 7 wil be placed at position 7 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_8" name="Input string 8" descr="The input string 8 wil be placed at position 8 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_9" name="Input string 9" descr="The input string 9 wil be placed at position 9 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_10" name="Input string 10" descr="The input string 10 wil be placed at position 10 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_11" name="Input string 11" descr="The input string 11 wil be placed at position 11 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_12" name="Input string 12" descr="The input string 12 wil be placed at position 12 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_13" name="Input string 13" descr="The input string 13 wil be placed at position 13 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_14" name="Input string 14" descr="The input string 14 wil be placed at position 14 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_15" name="Input string 15" descr="The input string 15 wil be placed at position 15 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="StringGenerator_4" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConcatenateStrings_5" catalog="base" class_id="concatenate_strings">
        <Parameters/>
        <Outputs>
          <Output id="output" name="Output string" descr="The concatenation of the input strings">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_3" name="Input string 3" descr="The input string 3 wil be placed at position 3 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_4" name="Input string 4" descr="The input string 4 wil be placed at position 4 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_5" name="Input string 5" descr="The input string 5 wil be placed at position 5 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_6" name="Input string 6" descr="The input string 6 wil be placed at position 6 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_7" name="Input string 7" descr="The input string 7 wil be placed at position 7 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_8" name="Input string 8" descr="The input string 8 wil be placed at position 8 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_9" name="Input string 9" descr="The input string 9 wil be placed at position 9 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_10" name="Input string 10" descr="The input string 10 wil be placed at position 10 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_11" name="Input string 11" descr="The input string 11 wil be placed at position 11 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_12" name="Input string 12" descr="The input string 12 wil be placed at position 12 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_13" name="Input string 13" descr="The input string 13 wil be placed at position 13 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_14" name="Input string 14" descr="The input string 14 wil be placed at position 14 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_15" name="Input string 15" descr="The input string 15 wil be placed at position 15 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_16" name="Input string 16" descr="The input string 16 wil be placed at position 16 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_17" name="Input string 17" descr="The input string 17 wil be placed at position 17 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_18" name="Input string 18" descr="The input string 18 wil be placed at position 18 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_19" name="Input string 19" descr="The input string 19 wil be placed at position 19 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_20" name="Input string 20" descr="The input string 20 wil be placed at position 20 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_21" name="Input string 21" descr="The input string 21 wil be placed at position 21 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="StringGenerator_7" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConcatenateStrings_6" catalog="base" class_id="concatenate_strings">
        <Parameters/>
        <Outputs>
          <Output id="output" name="Output string" descr="The concatenation of the input strings">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_3" name="Input string 3" descr="The input string 3 wil be placed at position 3 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_4" name="Input string 4" descr="The input string 4 wil be placed at position 4 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_5" name="Input string 5" descr="The input string 5 wil be placed at position 5 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_6" name="Input string 6" descr="The input string 6 wil be placed at position 6 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_7" name="Input string 7" descr="The input string 7 wil be placed at position 7 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_8" name="Input string 8" descr="The input string 8 wil be placed at position 8 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_9" name="Input string 9" descr="The input string 9 wil be placed at position 9 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_10" name="Input string 10" descr="The input string 10 wil be placed at position 10 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_11" name="Input string 11" descr="The input string 11 wil be placed at position 11 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_12" name="Input string 12" descr="The input string 12 wil be placed at position 12 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_13" name="Input string 13" descr="The input string 13 wil be placed at position 13 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_14" name="Input string 14" descr="The input string 14 wil be placed at position 14 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_15" name="Input string 15" descr="The input string 15 wil be placed at position 15 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_16" name="Input string 16" descr="The input string 16 wil be placed at position 16 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_17" name="Input string 17" descr="The input string 17 wil be placed at position 17 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_18" name="Input string 18" descr="The input string 18 wil be placed at position 18 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_19" name="Input string 19" descr="The input string 19 wil be placed at position 19 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_20" name="Input string 20" descr="The input string 20 wil be placed at position 20 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_21" name="Input string 21" descr="The input string 21 wil be placed at position 21 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_22" name="Input string 22" descr="The input string 22 wil be placed at position 22 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_23" name="Input string 23" descr="The input string 23 wil be placed at position 23 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_24" name="Input string 24" descr="The input string 24 wil be placed at position 24 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_25" name="Input string 25" descr="The input string 25 wil be placed at position 25 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_26" name="Input string 26" descr="The input string 26 wil be placed at position 26 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_27" name="Input string 27" descr="The input string 27 wil be placed at position 27 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="StringGenerator_9" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConcatenateStrings_7" catalog="base" class_id="concatenate_strings">
        <Parameters/>
        <Outputs>
          <Output id="output" name="Output string" descr="The concatenation of the input strings">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_3" name="Input string 3" descr="The input string 3 wil be placed at position 3 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_4" name="Input string 4" descr="The input string 4 wil be placed at position 4 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_5" name="Input string 5" descr="The input string 5 wil be placed at position 5 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_6" name="Input string 6" descr="The input string 6 wil be placed at position 6 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_7" name="Input string 7" descr="The input string 7 wil be placed at position 7 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_8" name="Input string 8" descr="The input string 8 wil be placed at position 8 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_9" name="Input string 9" descr="The input string 9 wil be placed at position 9 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_10" name="Input string 10" descr="The input string 10 wil be placed at position 10 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_11" name="Input string 11" descr="The input string 11 wil be placed at position 11 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_12" name="Input string 12" descr="The input string 12 wil be placed at position 12 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_13" name="Input string 13" descr="The input string 13 wil be placed at position 13 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_14" name="Input string 14" descr="The input string 14 wil be placed at position 14 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_15" name="Input string 15" descr="The input string 15 wil be placed at position 15 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_16" name="Input string 16" descr="The input string 16 wil be placed at position 16 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_17" name="Input string 17" descr="The input string 17 wil be placed at position 17 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_18" name="Input string 18" descr="The input string 18 wil be placed at position 18 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_19" name="Input string 19" descr="The input string 19 wil be placed at position 19 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_20" name="Input string 20" descr="The input string 20 wil be placed at position 20 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_21" name="Input string 21" descr="The input string 21 wil be placed at position 21 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_22" name="Input string 22" descr="The input string 22 wil be placed at position 22 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_23" name="Input string 23" descr="The input string 23 wil be placed at position 23 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_24" name="Input string 24" descr="The input string 24 wil be placed at position 24 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_25" name="Input string 25" descr="The input string 25 wil be placed at position 25 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_26" name="Input string 26" descr="The input string 26 wil be placed at position 26 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_27" name="Input string 27" descr="The input string 27 wil be placed at position 27 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_28" name="Input string 28" descr="The input string 28 wil be placed at position 28 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_29" name="Input string 29" descr="The input string 29 wil be placed at position 29 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_30" name="Input string 30" descr="The input string 30 wil be placed at position 30 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_31" name="Input string 31" descr="The input string 31 wil be placed at position 31 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_32" name="Input string 32" descr="The input string 32 wil be placed at position 32 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_33" name="Input string 33" descr="The input string 33 wil be placed at position 33 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="StringGenerator_11" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConcatenateStrings_8" catalog="base" class_id="concatenate_strings">
        <Parameters/>
        <Outputs>
          <Output id="output" name="Output string" descr="The concatenation of the input strings">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_3" name="Input string 3" descr="The input string 3 wil be placed at position 3 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_4" name="Input string 4" descr="The input string 4 wil be placed at position 4 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_5" name="Input string 5" descr="The input string 5 wil be placed at position 5 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_6" name="Input string 6" descr="The input string 6 wil be placed at position 6 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_7" name="Input string 7" descr="The input string 7 wil be placed at position 7 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_8" name="Input string 8" descr="The input string 8 wil be placed at position 8 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_9" name="Input string 9" descr="The input string 9 wil be placed at position 9 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_10" name="Input string 10" descr="The input string 10 wil be placed at position 10 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_11" name="Input string 11" descr="The input string 11 wil be placed at position 11 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_12" name="Input string 12" descr="The input string 12 wil be placed at position 12 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_13" name="Input string 13" descr="The input string 13 wil be placed at position 13 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_14" name="Input string 14" descr="The input string 14 wil be placed at position 14 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_15" name="Input string 15" descr="The input string 15 wil be placed at position 15 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_16" name="Input string 16" descr="The input string 16 wil be placed at position 16 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_17" name="Input string 17" descr="The input string 17 wil be placed at position 17 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_18" name="Input string 18" descr="The input string 18 wil be placed at position 18 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_19" name="Input string 19" descr="The input string 19 wil be placed at position 19 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_20" name="Input string 20" descr="The input string 20 wil be placed at position 20 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_21" name="Input string 21" descr="The input string 21 wil be placed at position 21 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_22" name="Input string 22" descr="The input string 22 wil be placed at position 22 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_23" name="Input string 23" descr="The input string 23 wil be placed at position 23 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_24" name="Input string 24" descr="The input string 24 wil be placed at position 24 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_25" name="Input string 25" descr="The input string 25 wil be placed at position 25 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_26" name="Input string 26" descr="The input string 26 wil be placed at position 26 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_27" name="Input string 27" descr="The input string 27 wil be placed at position 27 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_28" name="Input string 28" descr="The input string 28 wil be placed at position 28 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_29" name="Input string 29" descr="The input string 29 wil be placed at position 29 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_30" name="Input string 30" descr="The input string 30 wil be placed at position 30 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_31" name="Input string 31" descr="The input string 31 wil be placed at position 31 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_32" name="Input string 32" descr="The input string 32 wil be placed at position 32 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_33" name="Input string 33" descr="The input string 33 wil be placed at position 33 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_34" name="Input string 34" descr="The input string 34 wil be placed at position 34 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_35" name="Input string 35" descr="The input string 35 wil be placed at position 35 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_36" name="Input string 36" descr="The input string 36 wil be placed at position 36 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_37" name="Input string 37" descr="The input string 37 wil be placed at position 37 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_38" name="Input string 38" descr="The input string 38 wil be placed at position 38 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_39" name="Input string 39" descr="The input string 39 wil be placed at position 39 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="StringGenerator_13" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="InputSelector_1" catalog="kernel" class_id="input_selector">
        <Parameters>
          <Parameter id="active_input" name="Active input" descr="Zero-based index of the active input. The selected input is propagated to the output."
                     exported="1">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;6</Domain>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Output of the selector. It is equal to the specified input.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_1" name="Input 1" descr="0 input of the block.">
            <Datatype type="0"/>
          </Input>
          <Input id="input_2" name="Input 2" descr="1 input of the block.">
            <Datatype type="0"/>
          </Input>
          <Input id="input_3" name="Input 3" descr="2 input of the block.">
            <Datatype type="0"/>
          </Input>
          <Input id="input_4" name="Input 4" descr="3 input of the block.">
            <Datatype type="0"/>
          </Input>
          <Input id="input_5" name="Input 5" descr="4 input of the block.">
            <Datatype type="0"/>
          </Input>
          <Input id="input_6" name="Input 6" descr="5 input of the block.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="FormatIntAsString_1" catalog="base" class_id="format_int_as_string">
        <Parameters>
          <Parameter id="num_character" name="NumCharacter" descr="Number of character"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;0;0</Domain>
          </Parameter>
          <Parameter id="format_string" name="FormatString" descr="Specifies character to add"
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Output">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input">
            <Datatype type="4"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="Play" catalog="kernel" class_id="bang_generator">
        <Parameters>
          <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="bang" name="Bang" descr="Bang">
            <Datatype type="2"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="Counter_3" catalog="base" class_id="Counter">
        <Parameters>
          <Parameter id="Step" name="Step" descr="Step Description" exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="Begin" name="Begin" descr="Begin Description" exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="End" name="End" descr="End Description" exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="CustomReset" name="Custom reset value" descr="When the counter is reset, and the reset mode is set to custom value, this value is used."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="Start" name="Start" descr="Start Description" exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="Stop" name="Stop" descr="Stop Description" exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="Reset" name="Reset" descr="Reset Description" exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="ResetMode" name="Reset mode" descr="Specifies the behaviour when the counter is reset. The counter can reset to the initial value (Begin) or to a custom value."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;2</Domain>
            <Layout type="0">
              <Label>Begin</Label>
              <Label>Custom value</Label>
            </Layout>
          </Parameter>
          <Parameter id="TypeCounter" name="Bounding mode" descr="Specifies whether the counter is bounded (stops counting after a given bound is reached), unbounded (counts forever) or circular (restart from the beginning after a given bound is reached)."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;3</Domain>
            <Layout type="0">
              <Label>Unbounded counter;Bounded counter</Label>
              <Label>Circular counter</Label>
            </Layout>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="Output" name="Output" descr="Output Description">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="Input" name="Input" descr="Input Descrption">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="BooleanToTrigger_2" catalog="base" class_id="bool_to_trigger">
        <Parameters>
          <Parameter id="mode" name="Mode" descr="Specifies when to generate the output trigger. "
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;5</Domain>
            <Layout type="0">
              <Label>False to true;True to false</Label>
              <Label>Any change</Label>
              <Label>True;False</Label>
            </Layout>
          </Parameter>
          <Parameter id="initial_state" name="Initial state" descr="This value is used only at first signal change detection to initialize the previous signal state."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;3</Domain>
            <Layout type="0">
              <Label>Indeterminate;True</Label>
              <Label>False</Label>
            </Layout>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Output trigger datatype.">
            <Datatype type="2"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input boolean datatype. The block generates a trigger as output according to the value of this datatype.">
            <Datatype type="1"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="BooleanToTrigger_3" catalog="base" class_id="bool_to_trigger">
        <Parameters>
          <Parameter id="mode" name="Mode" descr="Specifies when to generate the output trigger. "
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;5</Domain>
            <Layout type="0">
              <Label>False to true;True to false</Label>
              <Label>Any change</Label>
              <Label>True;False</Label>
            </Layout>
          </Parameter>
          <Parameter id="initial_state" name="Initial state" descr="This value is used only at first signal change detection to initialize the previous signal state."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;3</Domain>
            <Layout type="0">
              <Label>Indeterminate;True</Label>
              <Label>False</Label>
            </Layout>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Output trigger datatype.">
            <Datatype type="2"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input boolean datatype. The block generates a trigger as output according to the value of this datatype.">
            <Datatype type="1"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="BangGenerator_2" catalog="kernel" class_id="bang_generator">
        <Parameters>
          <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="bang" name="Bang" descr="Bang">
            <Datatype type="2"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="StringGenerator_16" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="BangGenerator_10" catalog="kernel" class_id="bang_generator">
        <Parameters>
          <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="bang" name="Bang" descr="Bang">
            <Datatype type="2"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="StringGenerator_8" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConcatenateStrings_9" catalog="base" class_id="concatenate_strings">
        <Parameters/>
        <Outputs>
          <Output id="output" name="Output string" descr="The concatenation of the input strings">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_3" name="Input string 3" descr="The input string 3 wil be placed at position 3 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_4" name="Input string 4" descr="The input string 4 wil be placed at position 4 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_5" name="Input string 5" descr="The input string 5 wil be placed at position 5 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_6" name="Input string 6" descr="The input string 6 wil be placed at position 6 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_7" name="Input string 7" descr="The input string 7 wil be placed at position 7 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="StringGenerator_10" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="StringDisplay_6" catalog="system" class_id="string_display">
        <Parameters>
          <Parameter id="number_of_lines" name="Number of lines" descr="The number of lines which compose the document on which the text is written"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;1;0;0</Domain>
          </Parameter>
          <Parameter id="number_of_columns" name="Number of columns" descr="The number of columns which compose the document on which the text is written"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;1;0;0</Domain>
          </Parameter>
          <Parameter id="aligment" name="Horizontal alignment" descr="Background color (RGB model space)"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;3</Domain>
            <Layout type="0">
              <Label>Near (left);Center</Label>
              <Label>Far (right)</Label>
            </Layout>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs>
          <Input id="string" name="Input string" descr="Input string to display.">
            <Datatype type="3"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="StringDisplay_7" catalog="system" class_id="string_display">
        <Parameters>
          <Parameter id="number_of_lines" name="Number of lines" descr="The number of lines which compose the document on which the text is written"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;1;0;0</Domain>
          </Parameter>
          <Parameter id="number_of_columns" name="Number of columns" descr="The number of columns which compose the document on which the text is written"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;1;0;0</Domain>
          </Parameter>
          <Parameter id="aligment" name="Horizontal alignment" descr="Background color (RGB model space)"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;3</Domain>
            <Layout type="0">
              <Label>Near (left);Center</Label>
              <Label>Far (right)</Label>
            </Layout>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs>
          <Input id="string" name="Input string" descr="Input string to display.">
            <Datatype type="3"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="StringDisplay_8" catalog="system" class_id="string_display">
        <Parameters>
          <Parameter id="number_of_lines" name="Number of lines" descr="The number of lines which compose the document on which the text is written"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;1;0;0</Domain>
          </Parameter>
          <Parameter id="number_of_columns" name="Number of columns" descr="The number of columns which compose the document on which the text is written"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;1;0;0</Domain>
          </Parameter>
          <Parameter id="aligment" name="Horizontal alignment" descr="Background color (RGB model space)"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;3</Domain>
            <Layout type="0">
              <Label>Near (left);Center</Label>
              <Label>Far (right)</Label>
            </Layout>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs>
          <Input id="string" name="Input string" descr="Input string to display.">
            <Datatype type="3"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="StringDisplay_9" catalog="system" class_id="string_display">
        <Parameters>
          <Parameter id="number_of_lines" name="Number of lines" descr="The number of lines which compose the document on which the text is written"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;1;0;0</Domain>
          </Parameter>
          <Parameter id="number_of_columns" name="Number of columns" descr="The number of columns which compose the document on which the text is written"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;1;0;0</Domain>
          </Parameter>
          <Parameter id="aligment" name="Horizontal alignment" descr="Background color (RGB model space)"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;3</Domain>
            <Layout type="0">
              <Label>Near (left);Center</Label>
              <Label>Far (right)</Label>
            </Layout>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs>
          <Input id="string" name="Input string" descr="Input string to display.">
            <Datatype type="3"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="Counter_8" catalog="base" class_id="Counter">
        <Parameters>
          <Parameter id="Step" name="Step" descr="Step Description" exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="Begin" name="Begin" descr="Begin Description" exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="End" name="End" descr="End Description" exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="CustomReset" name="Custom reset value" descr="When the counter is reset, and the reset mode is set to custom value, this value is used."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="Start" name="Start" descr="Start Description" exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="Stop" name="Stop" descr="Stop Description" exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="Reset" name="Reset" descr="Reset Description" exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="ResetMode" name="Reset mode" descr="Specifies the behaviour when the counter is reset. The counter can reset to the initial value (Begin) or to a custom value."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;2</Domain>
            <Layout type="0">
              <Label>Begin</Label>
              <Label>Custom value</Label>
            </Layout>
          </Parameter>
          <Parameter id="TypeCounter" name="Bounding mode" descr="Specifies whether the counter is bounded (stops counting after a given bound is reached), unbounded (counts forever) or circular (restart from the beginning after a given bound is reached)."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;3</Domain>
            <Layout type="0">
              <Label>Unbounded counter;Bounded counter</Label>
              <Label>Circular counter</Label>
            </Layout>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="Output" name="Output" descr="Output Description">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="Input" name="Input" descr="Input Descrption">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="ScalarDisplay_1" catalog="base" class_id="Display">
        <Parameters>
          <Parameter id="DisplayNDD" name="Decimal digits" descr="If the input datatype is double it sets the number of decimal digits to be shown."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs>
          <Input id="Input000" name="Input 0" descr="Input 0 of the block">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="MediafileReader_1" catalog="base" class_id="media_file_reader_new">
        <Parameters>
          <Parameter id="media_filename" name="Filename" descr="Filepath of media file. An empty filename is allowed; the corresponding video output is black, the corresponding audio output is silence"
                     exported="1">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="out_of_bound_management" name="End of file mode" descr="Describes the behaviour of the reader when an end of file is reached:&#13;&#10; - Loop: playback restart from the beginning of the file&#13;&#10; - Keep last frame: the last frame is repeaed indefinitely&#13;&#10; - Black/silence: a black frame is generated as output (sound is set to silence)&#13;&#10; - No output: no output is given"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;4</Domain>
            <Layout type="0">
              <Label>Loop</Label>
              <Label>Keep last frame;Black/silence;No output</Label>
            </Layout>
          </Parameter>
          <Parameter id="play" name="Play" descr="Start/resume playing file" exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="pause" name="Pause" descr="Start/resume playing file" exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="goto_start" name="Go To Start" descr="Go back to start of file"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="video_output" name="Output video" descr="Output video">
            <Datatype type="6"/>
          </Output>
          <Output id="audio_output" name="Output Audio" descr="Output audio">
            <Datatype type="9"/>
          </Output>
          <Output id="video_duration" name="Output video duration (frames)" descr="Output video duration (frames)">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="frame" name="Frame index" descr="Frame index">
            <Datatype type="4"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="Counter_2" catalog="base" class_id="Counter">
        <Parameters>
          <Parameter id="Step" name="Step" descr="Step Description" exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="Begin" name="Begin" descr="Begin Description" exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="End" name="End" descr="End Description" exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="CustomReset" name="Custom reset value" descr="When the counter is reset, and the reset mode is set to custom value, this value is used."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="Start" name="Start" descr="Start Description" exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="Stop" name="Stop" descr="Stop Description" exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="Reset" name="Reset" descr="Reset Description" exported="1">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="ResetMode" name="Reset mode" descr="Specifies the behaviour when the counter is reset. The counter can reset to the initial value (Begin) or to a custom value."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;2</Domain>
            <Layout type="0">
              <Label>Begin</Label>
              <Label>Custom value</Label>
            </Layout>
          </Parameter>
          <Parameter id="TypeCounter" name="Bounding mode" descr="Specifies whether the counter is bounded (stops counting after a given bound is reached), unbounded (counts forever) or circular (restart from the beginning after a given bound is reached)."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;3</Domain>
            <Layout type="0">
              <Label>Unbounded counter;Bounded counter</Label>
              <Label>Circular counter</Label>
            </Layout>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="Output" name="Output" descr="Output Description">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="Input" name="Input" descr="Input Descrption">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="ConstantGenerator - int_4" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="*formatENDFRAME" catalog="base" class_id="format_int_as_string">
        <Parameters>
          <Parameter id="num_character" name="NumCharacter" descr="Number of character"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;0;0</Domain>
          </Parameter>
          <Parameter id="format_string" name="FormatString" descr="Specifies character to add"
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Output">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input">
            <Datatype type="4"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="ReplaceString_1" catalog="base" class_id="replace_string">
        <Parameters>
          <Parameter id="find" name="SubstringToReplace" descr="Find this substring inside the input string and replace it."
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="replace_with" name="ReplaceWith" descr="Replace the SubstringToReplace parameter with this substring."
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="replace_mode" name="ReplaceMode" descr="It is possible to replace alle the occurrences of the substring or just the first one."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;2</Domain>
            <Layout type="0">
              <Label>AllOccurences;FirstOccurence</Label>
            </Layout>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output_string" name="ReplacedString" descr="Replaced string.">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_string" name="InputString" descr="Input string that must be replaced.">
            <Datatype type="3"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="Switch_3" catalog="kernel" class_id="switch">
        <Parameters>
          <Parameter id="condition" name="Status" descr="Specifies whether the channel is opened or closed, i.e., if inputs are propagated to the output or not."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;2</Domain>
            <Layout type="0">
              <Label>Opened</Label>
              <Label>Closed</Label>
            </Layout>
          </Parameter>
          <Parameter id="toggle" name="Toggle status" descr="Switch the state of the block. If it's opened it close it, otherwise it open it."
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="open" name="Open" descr="Open the switch." exported="1">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="close" name="Close" descr="Close the switch." exported="1">
            <Datatype type="2"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="It is generated only if condition is true.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="It is propagated to the output only if condition is true.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="BangGenerator_4" catalog="kernel" class_id="bang_generator">
        <Parameters>
          <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="bang" name="Bang" descr="Bang">
            <Datatype type="2"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="BangGenerator_6" catalog="kernel" class_id="bang_generator">
        <Parameters>
          <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="bang" name="Bang" descr="Bang">
            <Datatype type="2"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="BangGenerator_8" catalog="kernel" class_id="bang_generator">
        <Parameters>
          <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="bang" name="Bang" descr="Bang">
            <Datatype type="2"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="DisplayGDI-Interact_3" catalog="system" class_id="display_gdi">
        <Parameters>
          <Parameter id="QueueAlgo" name="Presentation time" descr="To respect the image presentation time this display use a ordered queue. This parameter selects the algorithm used to manage the presentation time ('ignore', 'respect'). When 'ignore' is selected the input image is displayed immediately (bypassing the queue), otherwise the image is stored into the queue and is displayed when the clock time matches the presentation time."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;2</Domain>
            <Layout type="0">
              <Label>ignore the presentation time</Label>
              <Label>respect the presentation time</Label>
            </Layout>
          </Parameter>
          <Parameter id="QueueMaxSize" name="Queue max size" descr="This parameter set the maximum number of images stored into the internal queue."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="QueuePurge" name="Purge queue" descr="Drop all images contained into the internal queue."
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="filtering" name="Interpolation Algorithm" descr="Specifies the algorithm used to interpolate the image when resize is needed.&#13;&#10;A rough interpolation (e.g., nearest neighbour) may cause visible artifacts, however, the CPU usage to perform such interpolation is quite limited. A good quality interpolation (e.g., lanczos) provides better results but may cause an high CPU load."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;4</Domain>
            <Layout type="0">
              <Label>nearest neighbour interpolation;linear interpolation;cubic convolution interpolation</Label>
              <Label>interpolation by 3-lobed Lanczos-windowed sinc function</Label>
            </Layout>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs>
          <Input id="input_image" name="Image" descr="Image to display.">
            <Datatype type="6"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="DisplayGDI-Interact_5" catalog="system" class_id="display_gdi">
        <Parameters>
          <Parameter id="QueueAlgo" name="Presentation time" descr="To respect the image presentation time this display use a ordered queue. This parameter selects the algorithm used to manage the presentation time ('ignore', 'respect'). When 'ignore' is selected the input image is displayed immediately (bypassing the queue), otherwise the image is stored into the queue and is displayed when the clock time matches the presentation time."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;2</Domain>
            <Layout type="0">
              <Label>ignore the presentation time</Label>
              <Label>respect the presentation time</Label>
            </Layout>
          </Parameter>
          <Parameter id="QueueMaxSize" name="Queue max size" descr="This parameter set the maximum number of images stored into the internal queue."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="QueuePurge" name="Purge queue" descr="Drop all images contained into the internal queue."
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="filtering" name="Interpolation Algorithm" descr="Specifies the algorithm used to interpolate the image when resize is needed.&#13;&#10;A rough interpolation (e.g., nearest neighbour) may cause visible artifacts, however, the CPU usage to perform such interpolation is quite limited. A good quality interpolation (e.g., lanczos) provides better results but may cause an high CPU load."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;4</Domain>
            <Layout type="0">
              <Label>nearest neighbour interpolation;linear interpolation;cubic convolution interpolation</Label>
              <Label>interpolation by 3-lobed Lanczos-windowed sinc function</Label>
            </Layout>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs>
          <Input id="input_image" name="Image" descr="Image to display.">
            <Datatype type="6"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="DisplayGDI-Interact_2" catalog="system" class_id="display_gdi">
        <Parameters>
          <Parameter id="QueueAlgo" name="Presentation time" descr="To respect the image presentation time this display use a ordered queue. This parameter selects the algorithm used to manage the presentation time ('ignore', 'respect'). When 'ignore' is selected the input image is displayed immediately (bypassing the queue), otherwise the image is stored into the queue and is displayed when the clock time matches the presentation time."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;2</Domain>
            <Layout type="0">
              <Label>ignore the presentation time</Label>
              <Label>respect the presentation time</Label>
            </Layout>
          </Parameter>
          <Parameter id="QueueMaxSize" name="Queue max size" descr="This parameter set the maximum number of images stored into the internal queue."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="QueuePurge" name="Purge queue" descr="Drop all images contained into the internal queue."
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="filtering" name="Interpolation Algorithm" descr="Specifies the algorithm used to interpolate the image when resize is needed.&#13;&#10;A rough interpolation (e.g., nearest neighbour) may cause visible artifacts, however, the CPU usage to perform such interpolation is quite limited. A good quality interpolation (e.g., lanczos) provides better results but may cause an high CPU load."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;4</Domain>
            <Layout type="0">
              <Label>nearest neighbour interpolation;linear interpolation;cubic convolution interpolation</Label>
              <Label>interpolation by 3-lobed Lanczos-windowed sinc function</Label>
            </Layout>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs>
          <Input id="input_image" name="Image" descr="Image to display.">
            <Datatype type="6"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="DisplayGDI-Interact_4" catalog="system" class_id="display_gdi">
        <Parameters>
          <Parameter id="QueueAlgo" name="Presentation time" descr="To respect the image presentation time this display use a ordered queue. This parameter selects the algorithm used to manage the presentation time ('ignore', 'respect'). When 'ignore' is selected the input image is displayed immediately (bypassing the queue), otherwise the image is stored into the queue and is displayed when the clock time matches the presentation time."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;2</Domain>
            <Layout type="0">
              <Label>ignore the presentation time</Label>
              <Label>respect the presentation time</Label>
            </Layout>
          </Parameter>
          <Parameter id="QueueMaxSize" name="Queue max size" descr="This parameter set the maximum number of images stored into the internal queue."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="QueuePurge" name="Purge queue" descr="Drop all images contained into the internal queue."
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="filtering" name="Interpolation Algorithm" descr="Specifies the algorithm used to interpolate the image when resize is needed.&#13;&#10;A rough interpolation (e.g., nearest neighbour) may cause visible artifacts, however, the CPU usage to perform such interpolation is quite limited. A good quality interpolation (e.g., lanczos) provides better results but may cause an high CPU load."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;4</Domain>
            <Layout type="0">
              <Label>nearest neighbour interpolation;linear interpolation;cubic convolution interpolation</Label>
              <Label>interpolation by 3-lobed Lanczos-windowed sinc function</Label>
            </Layout>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs>
          <Input id="input_image" name="Image" descr="Image to display.">
            <Datatype type="6"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="DisplayGDI-Interact_6" catalog="system" class_id="display_gdi">
        <Parameters>
          <Parameter id="QueueAlgo" name="Presentation time" descr="To respect the image presentation time this display use a ordered queue. This parameter selects the algorithm used to manage the presentation time ('ignore', 'respect'). When 'ignore' is selected the input image is displayed immediately (bypassing the queue), otherwise the image is stored into the queue and is displayed when the clock time matches the presentation time."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;2</Domain>
            <Layout type="0">
              <Label>ignore the presentation time</Label>
              <Label>respect the presentation time</Label>
            </Layout>
          </Parameter>
          <Parameter id="QueueMaxSize" name="Queue max size" descr="This parameter set the maximum number of images stored into the internal queue."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="QueuePurge" name="Purge queue" descr="Drop all images contained into the internal queue."
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="filtering" name="Interpolation Algorithm" descr="Specifies the algorithm used to interpolate the image when resize is needed.&#13;&#10;A rough interpolation (e.g., nearest neighbour) may cause visible artifacts, however, the CPU usage to perform such interpolation is quite limited. A good quality interpolation (e.g., lanczos) provides better results but may cause an high CPU load."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;4</Domain>
            <Layout type="0">
              <Label>nearest neighbour interpolation;linear interpolation;cubic convolution interpolation</Label>
              <Label>interpolation by 3-lobed Lanczos-windowed sinc function</Label>
            </Layout>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs>
          <Input id="input_image" name="Image" descr="Image to display.">
            <Datatype type="6"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="DisplayGDI-Interact_7" catalog="system" class_id="display_gdi">
        <Parameters>
          <Parameter id="QueueAlgo" name="Presentation time" descr="To respect the image presentation time this display use a ordered queue. This parameter selects the algorithm used to manage the presentation time ('ignore', 'respect'). When 'ignore' is selected the input image is displayed immediately (bypassing the queue), otherwise the image is stored into the queue and is displayed when the clock time matches the presentation time."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;2</Domain>
            <Layout type="0">
              <Label>ignore the presentation time</Label>
              <Label>respect the presentation time</Label>
            </Layout>
          </Parameter>
          <Parameter id="QueueMaxSize" name="Queue max size" descr="This parameter set the maximum number of images stored into the internal queue."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="QueuePurge" name="Purge queue" descr="Drop all images contained into the internal queue."
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="filtering" name="Interpolation Algorithm" descr="Specifies the algorithm used to interpolate the image when resize is needed.&#13;&#10;A rough interpolation (e.g., nearest neighbour) may cause visible artifacts, however, the CPU usage to perform such interpolation is quite limited. A good quality interpolation (e.g., lanczos) provides better results but may cause an high CPU load."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;4</Domain>
            <Layout type="0">
              <Label>nearest neighbour interpolation;linear interpolation;cubic convolution interpolation</Label>
              <Label>interpolation by 3-lobed Lanczos-windowed sinc function</Label>
            </Layout>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs>
          <Input id="input_image" name="Image" descr="Image to display.">
            <Datatype type="6"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="IntGenerator_21" catalog="kernel" class_id="int_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Value" exported="1">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ScalarDisplay_8" catalog="base" class_id="Display">
        <Parameters>
          <Parameter id="DisplayNDD" name="Decimal digits" descr="If the input datatype is double it sets the number of decimal digits to be shown."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs>
          <Input id="Input000" name="Input 0" descr="Input 0 of the block">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="DisplayGDI-Interact_8" catalog="system" class_id="display_gdi">
        <Parameters>
          <Parameter id="QueueAlgo" name="Presentation time" descr="To respect the image presentation time this display use a ordered queue. This parameter selects the algorithm used to manage the presentation time ('ignore', 'respect'). When 'ignore' is selected the input image is displayed immediately (bypassing the queue), otherwise the image is stored into the queue and is displayed when the clock time matches the presentation time."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;2</Domain>
            <Layout type="0">
              <Label>ignore the presentation time</Label>
              <Label>respect the presentation time</Label>
            </Layout>
          </Parameter>
          <Parameter id="QueueMaxSize" name="Queue max size" descr="This parameter set the maximum number of images stored into the internal queue."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="QueuePurge" name="Purge queue" descr="Drop all images contained into the internal queue."
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="filtering" name="Interpolation Algorithm" descr="Specifies the algorithm used to interpolate the image when resize is needed.&#13;&#10;A rough interpolation (e.g., nearest neighbour) may cause visible artifacts, however, the CPU usage to perform such interpolation is quite limited. A good quality interpolation (e.g., lanczos) provides better results but may cause an high CPU load."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;4</Domain>
            <Layout type="0">
              <Label>nearest neighbour interpolation;linear interpolation;cubic convolution interpolation</Label>
              <Label>interpolation by 3-lobed Lanczos-windowed sinc function</Label>
            </Layout>
          </Parameter>
          <Parameter id="MirrorX" name="Mouse Horizontal Mirror" descr="This parameter enable or disable the horizontal mirror of the mouse axis system."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="MirrorY" name="Mouse Vertical Mirror" descr="This parameter enable or disable the vertical mirror of the mouse axis system."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs>
          <Input id="input_image" name="Image" descr="Image to display.">
            <Datatype type="6"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="ScalarDisplay_11" catalog="base" class_id="Display">
        <Parameters>
          <Parameter id="DisplayNDD" name="Decimal digits" descr="If the input datatype is double it sets the number of decimal digits to be shown."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs>
          <Input id="Input000" name="Input 0" descr="Input 0 of the block">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="OutputSelector_2" catalog="kernel" class_id="output_selector">
        <Parameters>
          <Parameter id="active_output" name="Active output" descr="Zero-based index of the active output. The selected output is activated."
                     exported="1">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;6</Domain>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output_1" name="Output 1" descr="0 output of the block.">
            <Datatype type="0"/>
          </Output>
          <Output id="output_2" name="Output 2" descr="1 output of the block.">
            <Datatype type="0"/>
          </Output>
          <Output id="output_3" name="Output 3" descr="2 output of the block.">
            <Datatype type="0"/>
          </Output>
          <Output id="output_4" name="Output 4" descr="3 output of the block.">
            <Datatype type="0"/>
          </Output>
          <Output id="output_5" name="Output 5" descr="4 output of the block.">
            <Datatype type="0"/>
          </Output>
          <Output id="output_6" name="Output 6" descr="5 output of the block.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input of the selector. The input is propagated to the choosen output.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="DrawGraphicObject_1" catalog="base" class_id="DrawGraphicObject">
        <Parameters>
          <Parameter id="Quality" name="Quality" descr="Quality draw" exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;3</Domain>
            <Layout type="0">
              <Label>High quality</Label>
              <Label>Medium quality</Label>
              <Label>Low quality</Label>
            </Layout>
          </Parameter>
          <Parameter id="draw_unchanged_parameters" name="Draw Unchanged Datatypes"
                     descr="If set to true, each time the block is activated it draws all inputs, regardless of whether they are changed or not (this is the old behaviour). If false (default behaviour), only changed datatypes are drawn."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="Output" name="Output image" descr="The output image on which the graphic object has been drawn.">
            <Datatype type="6"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="InputImage" name="Input image" descr="The input image on which the graphic object will be drawn.">
            <Datatype type="6"/>
          </Input>
          <Input id="InputGraphicObject00" name="Input graphic object" descr="The graphic object to be drawn.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="SetShapeFill_1" catalog="base" class_id="set_shape_properties_2d">
        <Parameters>
          <Parameter id="set_filled" name="SetFilled" descr="Specifies whether to set the filled property of the graphical geometric datatype."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="filled" name="Filled" descr="Specifies whether the shape is filled or not."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="set_color" name="SetFillColor" descr="Specifies whether to set the color of the graphical geometric datatype."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="set_alpha" name="SetFillAlpha" descr="Specifies whether to set the width of the graphical geometric datatype."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="alpha" name="FillAlpha" descr="Specifies the alpha level of the graphical geometric datatype."
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Graphical Object" descr="A bidimensional graphical object where the shape properties have been changed by this block.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input Graphical Object" descr="The input bidimensional graphical object of which to change the properties">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="RectangleToPointAndSize - int_1" catalog="base" class_id="RectToPoinandSizeInt">
        <Parameters>
          <Parameter id="point_position" name="Point position" descr="Specifies which point of the rectangle is given as output"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;10</Domain>
            <Layout type="0">
              <Label>Top Left</Label>
              <Label>Top Center;Top Right;Middle Left;Middle Center</Label>
              <Label>Middle Right</Label>
              <Label>Bottom Left</Label>
              <Label>Bottom Center;Bottom Right;Custom</Label>
            </Layout>
          </Parameter>
          <Parameter id="custom_point_position_x" name="Custom point X position" descr="If Custom is chosen as the point position, this parameter specifies the horizontal offset of the point given as output with respect to the rectangle itself: 0.0 means left and 1.0 mean right"
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
          <Parameter id="custom_point_position_y" name="Custom point Y position" descr="If Custom is chosen as the point position, this parameter specifies the vertical offset of the point given as output with respect to the rectangle itself: 0.0 means top and 1.0 mean bottom"
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs/>
      </Block>
      <Block label="GetPoint2DCoordinates_1" catalog="base" class_id="get_point2d_coordinates">
        <Parameters/>
        <Outputs>
          <Output id="output_x" name="Output X" descr="X coordinate extracted from the input point">
            <Datatype type="4"/>
          </Output>
          <Output id="output_y" name="Output Y" descr="Y coordinate extracted from the input point">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="RectangleToPointAndSize - int_2" catalog="base" class_id="RectToPoinandSizeInt">
        <Parameters>
          <Parameter id="point_position" name="Point position" descr="Specifies which point of the rectangle is given as output"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;10</Domain>
            <Layout type="0">
              <Label>Top Left</Label>
              <Label>Top Center;Top Right;Middle Left;Middle Center</Label>
              <Label>Middle Right</Label>
              <Label>Bottom Left</Label>
              <Label>Bottom Center;Bottom Right;Custom</Label>
            </Layout>
          </Parameter>
          <Parameter id="custom_point_position_x" name="Custom point X position" descr="If Custom is chosen as the point position, this parameter specifies the horizontal offset of the point given as output with respect to the rectangle itself: 0.0 means left and 1.0 mean right"
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
          <Parameter id="custom_point_position_y" name="Custom point Y position" descr="If Custom is chosen as the point position, this parameter specifies the vertical offset of the point given as output with respect to the rectangle itself: 0.0 means top and 1.0 mean bottom"
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs/>
      </Block>
      <Block label="GetPoint2DCoordinates_2" catalog="base" class_id="get_point2d_coordinates">
        <Parameters/>
        <Outputs>
          <Output id="output_x" name="Output X" descr="X coordinate extracted from the input point">
            <Datatype type="4"/>
          </Output>
          <Output id="output_y" name="Output Y" descr="Y coordinate extracted from the input point">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="Snapshot_3" catalog="kernel" class_id="snapshot">
        <Parameters>
          <Parameter id="load" name="Load" descr="Load new value of datatype in the internal memory."
                     exported="1">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="reset" name="Reset" descr="Reset value of datatype in the internal memory"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous Output" descr="Generate a new copy of snapshot datatype on every block activation"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Datatype stored in the internal memory and propagated to the output.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input stored in the internal memory.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="Snapshot_2" catalog="kernel" class_id="snapshot">
        <Parameters>
          <Parameter id="load" name="Load" descr="Load new value of datatype in the internal memory."
                     exported="1">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="reset" name="Reset" descr="Reset value of datatype in the internal memory"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous Output" descr="Generate a new copy of snapshot datatype on every block activation"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Datatype stored in the internal memory and propagated to the output.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input stored in the internal memory.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="Snapshot_6" catalog="kernel" class_id="snapshot">
        <Parameters>
          <Parameter id="load" name="Load" descr="Load new value of datatype in the internal memory."
                     exported="1">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="reset" name="Reset" descr="Reset value of datatype in the internal memory"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous Output" descr="Generate a new copy of snapshot datatype on every block activation"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Datatype stored in the internal memory and propagated to the output.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input stored in the internal memory.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="Snapshot_7" catalog="kernel" class_id="snapshot">
        <Parameters>
          <Parameter id="load" name="Load" descr="Load new value of datatype in the internal memory."
                     exported="1">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="reset" name="Reset" descr="Reset value of datatype in the internal memory"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous Output" descr="Generate a new copy of snapshot datatype on every block activation"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Datatype stored in the internal memory and propagated to the output.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input stored in the internal memory.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="Snapshot_8" catalog="kernel" class_id="snapshot">
        <Parameters>
          <Parameter id="load" name="Load" descr="Load new value of datatype in the internal memory."
                     exported="1">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="reset" name="Reset" descr="Reset value of datatype in the internal memory"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous Output" descr="Generate a new copy of snapshot datatype on every block activation"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Datatype stored in the internal memory and propagated to the output.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input stored in the internal memory.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="Snapshot_9" catalog="kernel" class_id="snapshot">
        <Parameters>
          <Parameter id="load" name="Load" descr="Load new value of datatype in the internal memory."
                     exported="1">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="reset" name="Reset" descr="Reset value of datatype in the internal memory"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous Output" descr="Generate a new copy of snapshot datatype on every block activation"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Datatype stored in the internal memory and propagated to the output.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input stored in the internal memory.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="Snapshot_10" catalog="kernel" class_id="snapshot">
        <Parameters>
          <Parameter id="load" name="Load" descr="Load new value of datatype in the internal memory."
                     exported="1">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="reset" name="Reset" descr="Reset value of datatype in the internal memory"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous Output" descr="Generate a new copy of snapshot datatype on every block activation"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Datatype stored in the internal memory and propagated to the output.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input stored in the internal memory.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="GetSize2DFields - int_1" catalog="base" class_id="get_size2d_fields_int">
        <Parameters/>
        <Outputs>
          <Output id="output_cx" name="Output X" descr="Size along the X axis, i.e., width">
            <Datatype type="4"/>
          </Output>
          <Output id="output_cy" name="Output Y" descr="Size along the Y axis, i.e., height">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConcatenateStrings_10" catalog="base" class_id="concatenate_strings">
        <Parameters/>
        <Outputs>
          <Output id="output" name="Output string" descr="The concatenation of the input strings">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_3" name="Input string 3" descr="The input string 3 wil be placed at position 3 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="StringGenerator_12" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ScalarArithmeticOperation - int_4" catalog="kernel" class_id="scalar_arith_op_int">
        <Parameters>
          <Parameter id="op_type" name="Operation type" descr="Select the type of operation that will be performed on the input datatype."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;9</Domain>
            <Layout type="0">
              <Label>Sum</Label>
              <Label>Subtract;Subtract inverse;Multiply;Divide;Divide inverse</Label>
              <Label>Max</Label>
              <Label>Min</Label>
              <Label>Set value</Label>
            </Layout>
          </Parameter>
          <Parameter id="scalar_value" name="Scalar value" descr="Specifies the scalar value involved in the operation."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Block output. It contains the result of the specified operation.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="This input represent the operand involved in the operation with the scalar value.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="GetSize2DFields - int_2" catalog="base" class_id="get_size2d_fields_int">
        <Parameters/>
        <Outputs>
          <Output id="output_cx" name="Output X" descr="Size along the X axis, i.e., width">
            <Datatype type="4"/>
          </Output>
          <Output id="output_cy" name="Output Y" descr="Size along the Y axis, i.e., height">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConcatenateStrings_11" catalog="base" class_id="concatenate_strings">
        <Parameters/>
        <Outputs>
          <Output id="output" name="Output string" descr="The concatenation of the input strings">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_3" name="Input string 3" descr="The input string 3 wil be placed at position 3 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="StringGenerator_14" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="RectangleToPointAndSize - int_3" catalog="base" class_id="RectToPoinandSizeInt">
        <Parameters>
          <Parameter id="point_position" name="Point position" descr="Specifies which point of the rectangle is given as output"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;10</Domain>
            <Layout type="0">
              <Label>Top Left</Label>
              <Label>Top Center;Top Right;Middle Left;Middle Center</Label>
              <Label>Middle Right</Label>
              <Label>Bottom Left</Label>
              <Label>Bottom Center;Bottom Right;Custom</Label>
            </Layout>
          </Parameter>
          <Parameter id="custom_point_position_x" name="Custom point X position" descr="If Custom is chosen as the point position, this parameter specifies the horizontal offset of the point given as output with respect to the rectangle itself: 0.0 means left and 1.0 mean right"
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
          <Parameter id="custom_point_position_y" name="Custom point Y position" descr="If Custom is chosen as the point position, this parameter specifies the vertical offset of the point given as output with respect to the rectangle itself: 0.0 means top and 1.0 mean bottom"
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs/>
      </Block>
      <Block label="GetPoint2DCoordinates_3" catalog="base" class_id="get_point2d_coordinates">
        <Parameters/>
        <Outputs>
          <Output id="output_x" name="Output X" descr="X coordinate extracted from the input point">
            <Datatype type="4"/>
          </Output>
          <Output id="output_y" name="Output Y" descr="Y coordinate extracted from the input point">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="GetSize2DFields - int_3" catalog="base" class_id="get_size2d_fields_int">
        <Parameters/>
        <Outputs>
          <Output id="output_cx" name="Output X" descr="Size along the X axis, i.e., width">
            <Datatype type="4"/>
          </Output>
          <Output id="output_cy" name="Output Y" descr="Size along the Y axis, i.e., height">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConcatenateStrings_12" catalog="base" class_id="concatenate_strings">
        <Parameters/>
        <Outputs>
          <Output id="output" name="Output string" descr="The concatenation of the input strings">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_3" name="Input string 3" descr="The input string 3 wil be placed at position 3 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="StringGenerator_15" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="RectangleToPointAndSize - int_4" catalog="base" class_id="RectToPoinandSizeInt">
        <Parameters>
          <Parameter id="point_position" name="Point position" descr="Specifies which point of the rectangle is given as output"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;10</Domain>
            <Layout type="0">
              <Label>Top Left</Label>
              <Label>Top Center;Top Right;Middle Left;Middle Center</Label>
              <Label>Middle Right</Label>
              <Label>Bottom Left</Label>
              <Label>Bottom Center;Bottom Right;Custom</Label>
            </Layout>
          </Parameter>
          <Parameter id="custom_point_position_x" name="Custom point X position" descr="If Custom is chosen as the point position, this parameter specifies the horizontal offset of the point given as output with respect to the rectangle itself: 0.0 means left and 1.0 mean right"
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
          <Parameter id="custom_point_position_y" name="Custom point Y position" descr="If Custom is chosen as the point position, this parameter specifies the vertical offset of the point given as output with respect to the rectangle itself: 0.0 means top and 1.0 mean bottom"
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs/>
      </Block>
      <Block label="GetPoint2DCoordinates_4" catalog="base" class_id="get_point2d_coordinates">
        <Parameters/>
        <Outputs>
          <Output id="output_x" name="Output X" descr="X coordinate extracted from the input point">
            <Datatype type="4"/>
          </Output>
          <Output id="output_y" name="Output Y" descr="Y coordinate extracted from the input point">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="RectangleToPointAndSize - int_5" catalog="base" class_id="RectToPoinandSizeInt">
        <Parameters>
          <Parameter id="point_position" name="Point position" descr="Specifies which point of the rectangle is given as output"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;10</Domain>
            <Layout type="0">
              <Label>Top Left</Label>
              <Label>Top Center;Top Right;Middle Left;Middle Center</Label>
              <Label>Middle Right</Label>
              <Label>Bottom Left</Label>
              <Label>Bottom Center;Bottom Right;Custom</Label>
            </Layout>
          </Parameter>
          <Parameter id="custom_point_position_x" name="Custom point X position" descr="If Custom is chosen as the point position, this parameter specifies the horizontal offset of the point given as output with respect to the rectangle itself: 0.0 means left and 1.0 mean right"
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
          <Parameter id="custom_point_position_y" name="Custom point Y position" descr="If Custom is chosen as the point position, this parameter specifies the vertical offset of the point given as output with respect to the rectangle itself: 0.0 means top and 1.0 mean bottom"
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs/>
      </Block>
      <Block label="GetPoint2DCoordinates_5" catalog="base" class_id="get_point2d_coordinates">
        <Parameters/>
        <Outputs>
          <Output id="output_x" name="Output X" descr="X coordinate extracted from the input point">
            <Datatype type="4"/>
          </Output>
          <Output id="output_y" name="Output Y" descr="Y coordinate extracted from the input point">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="GetSize2DFields - int_4" catalog="base" class_id="get_size2d_fields_int">
        <Parameters/>
        <Outputs>
          <Output id="output_cx" name="Output X" descr="Size along the X axis, i.e., width">
            <Datatype type="4"/>
          </Output>
          <Output id="output_cy" name="Output Y" descr="Size along the Y axis, i.e., height">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConcatenateStrings_13" catalog="base" class_id="concatenate_strings">
        <Parameters/>
        <Outputs>
          <Output id="output" name="Output string" descr="The concatenation of the input strings">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_3" name="Input string 3" descr="The input string 3 wil be placed at position 3 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="StringGenerator_17" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="GetSize2DFields - int_5" catalog="base" class_id="get_size2d_fields_int">
        <Parameters/>
        <Outputs>
          <Output id="output_cx" name="Output X" descr="Size along the X axis, i.e., width">
            <Datatype type="4"/>
          </Output>
          <Output id="output_cy" name="Output Y" descr="Size along the Y axis, i.e., height">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConcatenateStrings_14" catalog="base" class_id="concatenate_strings">
        <Parameters/>
        <Outputs>
          <Output id="output" name="Output string" descr="The concatenation of the input strings">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_3" name="Input string 3" descr="The input string 3 wil be placed at position 3 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="StringGenerator_18" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="RectangleToPointAndSize - int_6" catalog="base" class_id="RectToPoinandSizeInt">
        <Parameters>
          <Parameter id="point_position" name="Point position" descr="Specifies which point of the rectangle is given as output"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;10</Domain>
            <Layout type="0">
              <Label>Top Left</Label>
              <Label>Top Center;Top Right;Middle Left;Middle Center</Label>
              <Label>Middle Right</Label>
              <Label>Bottom Left</Label>
              <Label>Bottom Center;Bottom Right;Custom</Label>
            </Layout>
          </Parameter>
          <Parameter id="custom_point_position_x" name="Custom point X position" descr="If Custom is chosen as the point position, this parameter specifies the horizontal offset of the point given as output with respect to the rectangle itself: 0.0 means left and 1.0 mean right"
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
          <Parameter id="custom_point_position_y" name="Custom point Y position" descr="If Custom is chosen as the point position, this parameter specifies the vertical offset of the point given as output with respect to the rectangle itself: 0.0 means top and 1.0 mean bottom"
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs/>
      </Block>
      <Block label="GetPoint2DCoordinates_6" catalog="base" class_id="get_point2d_coordinates">
        <Parameters/>
        <Outputs>
          <Output id="output_x" name="Output X" descr="X coordinate extracted from the input point">
            <Datatype type="4"/>
          </Output>
          <Output id="output_y" name="Output Y" descr="Y coordinate extracted from the input point">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="GetSize2DFields - int_6" catalog="base" class_id="get_size2d_fields_int">
        <Parameters/>
        <Outputs>
          <Output id="output_cx" name="Output X" descr="Size along the X axis, i.e., width">
            <Datatype type="4"/>
          </Output>
          <Output id="output_cy" name="Output Y" descr="Size along the Y axis, i.e., height">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConcatenateStrings_15" catalog="base" class_id="concatenate_strings">
        <Parameters/>
        <Outputs>
          <Output id="output" name="Output string" descr="The concatenation of the input strings">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_3" name="Input string 3" descr="The input string 3 wil be placed at position 3 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="StringGenerator_19" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ScalarDisplay_10" catalog="base" class_id="Display">
        <Parameters>
          <Parameter id="DisplayNDD" name="Decimal digits" descr="If the input datatype is double it sets the number of decimal digits to be shown."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs>
          <Input id="Input000" name="Input 0" descr="Input 0 of the block">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="BangGenerator_13" catalog="kernel" class_id="bang_generator">
        <Parameters>
          <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="bang" name="Bang" descr="Bang">
            <Datatype type="2"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ScalarDisplay_12" catalog="base" class_id="Display">
        <Parameters>
          <Parameter id="DisplayNDD" name="Decimal digits" descr="If the input datatype is double it sets the number of decimal digits to be shown."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs>
          <Input id="Input000" name="Input 0" descr="Input 0 of the block">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="ScalarDisplay_13" catalog="base" class_id="Display">
        <Parameters>
          <Parameter id="DisplayNDD" name="Decimal digits" descr="If the input datatype is double it sets the number of decimal digits to be shown."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs>
          <Input id="Input000" name="Input 0" descr="Input 0 of the block">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="BangGenerator_15" catalog="kernel" class_id="bang_generator">
        <Parameters>
          <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="bang" name="Bang" descr="Bang">
            <Datatype type="2"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="GetROI_1" catalog="base" class_id="image_get_roi">
        <Parameters/>
        <Outputs/>
        <Inputs>
          <Input id="input_video_stream" name="Input image" descr="Input image">
            <Datatype type="6"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="InputSelector_4" catalog="kernel" class_id="input_selector">
        <Parameters>
          <Parameter id="active_input" name="Active input" descr="Zero-based index of the active input. The selected input is propagated to the output."
                     exported="1">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;2</Domain>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Output of the selector. It is equal to the specified input.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_1" name="Input 1" descr="0 input of the block.">
            <Datatype type="0"/>
          </Input>
          <Input id="input_2" name="Input 2" descr="1 input of the block.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="ConstantGenerator - int_2" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConstantGenerator - int_12" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="Snapshot_5" catalog="kernel" class_id="snapshot">
        <Parameters>
          <Parameter id="load" name="Load" descr="Load new value of datatype in the internal memory."
                     exported="1">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="reset" name="Reset" descr="Reset value of datatype in the internal memory"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous Output" descr="Generate a new copy of snapshot datatype on every block activation"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Datatype stored in the internal memory and propagated to the output.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input stored in the internal memory.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="RectangleToPointAndSize - int_7" catalog="base" class_id="RectToPoinandSizeInt">
        <Parameters>
          <Parameter id="point_position" name="Point position" descr="Specifies which point of the rectangle is given as output"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;10</Domain>
            <Layout type="0">
              <Label>Top Left</Label>
              <Label>Top Center;Top Right;Middle Left;Middle Center</Label>
              <Label>Middle Right</Label>
              <Label>Bottom Left</Label>
              <Label>Bottom Center;Bottom Right;Custom</Label>
            </Layout>
          </Parameter>
          <Parameter id="custom_point_position_x" name="Custom point X position" descr="If Custom is chosen as the point position, this parameter specifies the horizontal offset of the point given as output with respect to the rectangle itself: 0.0 means left and 1.0 mean right"
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
          <Parameter id="custom_point_position_y" name="Custom point Y position" descr="If Custom is chosen as the point position, this parameter specifies the vertical offset of the point given as output with respect to the rectangle itself: 0.0 means top and 1.0 mean bottom"
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs/>
      </Block>
      <Block label="ScalarDisplay_15" catalog="base" class_id="Display">
        <Parameters>
          <Parameter id="DisplayNDD" name="Decimal digits" descr="If the input datatype is double it sets the number of decimal digits to be shown."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs>
          <Input id="Input000" name="Input 0" descr="Input 0 of the block">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="GetPoint2DCoordinates_7" catalog="base" class_id="get_point2d_coordinates">
        <Parameters/>
        <Outputs>
          <Output id="output_x" name="Output X" descr="X coordinate extracted from the input point">
            <Datatype type="4"/>
          </Output>
          <Output id="output_y" name="Output Y" descr="Y coordinate extracted from the input point">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="GetROI_2" catalog="base" class_id="image_get_roi">
        <Parameters/>
        <Outputs/>
        <Inputs>
          <Input id="input_video_stream" name="Input image" descr="Input image">
            <Datatype type="6"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="BangGenerator_16" catalog="kernel" class_id="bang_generator">
        <Parameters>
          <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="bang" name="Bang" descr="Bang">
            <Datatype type="2"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConstantGenerator - int_13" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConstantGenerator - int_14" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="RectangleToPointAndSize - int_8" catalog="base" class_id="RectToPoinandSizeInt">
        <Parameters>
          <Parameter id="point_position" name="Point position" descr="Specifies which point of the rectangle is given as output"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;10</Domain>
            <Layout type="0">
              <Label>Top Left</Label>
              <Label>Top Center;Top Right;Middle Left;Middle Center</Label>
              <Label>Middle Right</Label>
              <Label>Bottom Left</Label>
              <Label>Bottom Center;Bottom Right;Custom</Label>
            </Layout>
          </Parameter>
          <Parameter id="custom_point_position_x" name="Custom point X position" descr="If Custom is chosen as the point position, this parameter specifies the horizontal offset of the point given as output with respect to the rectangle itself: 0.0 means left and 1.0 mean right"
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
          <Parameter id="custom_point_position_y" name="Custom point Y position" descr="If Custom is chosen as the point position, this parameter specifies the vertical offset of the point given as output with respect to the rectangle itself: 0.0 means top and 1.0 mean bottom"
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs/>
      </Block>
      <Block label="ScalarDisplay_14" catalog="base" class_id="Display">
        <Parameters>
          <Parameter id="DisplayNDD" name="Decimal digits" descr="If the input datatype is double it sets the number of decimal digits to be shown."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs>
          <Input id="Input000" name="Input 0" descr="Input 0 of the block">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="GetPoint2DCoordinates_8" catalog="base" class_id="get_point2d_coordinates">
        <Parameters/>
        <Outputs>
          <Output id="output_x" name="Output X" descr="X coordinate extracted from the input point">
            <Datatype type="4"/>
          </Output>
          <Output id="output_y" name="Output Y" descr="Y coordinate extracted from the input point">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="Snapshot_11" catalog="kernel" class_id="snapshot">
        <Parameters>
          <Parameter id="load" name="Load" descr="Load new value of datatype in the internal memory."
                     exported="1">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="reset" name="Reset" descr="Reset value of datatype in the internal memory"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous Output" descr="Generate a new copy of snapshot datatype on every block activation"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Datatype stored in the internal memory and propagated to the output.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input stored in the internal memory.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="GetROI_3" catalog="base" class_id="image_get_roi">
        <Parameters/>
        <Outputs/>
        <Inputs>
          <Input id="input_video_stream" name="Input image" descr="Input image">
            <Datatype type="6"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="GetROI_4" catalog="base" class_id="image_get_roi">
        <Parameters/>
        <Outputs/>
        <Inputs>
          <Input id="input_video_stream" name="Input image" descr="Input image">
            <Datatype type="6"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="GetROI_5" catalog="base" class_id="image_get_roi">
        <Parameters/>
        <Outputs/>
        <Inputs>
          <Input id="input_video_stream" name="Input image" descr="Input image">
            <Datatype type="6"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="GetROI_6" catalog="base" class_id="image_get_roi">
        <Parameters/>
        <Outputs/>
        <Inputs>
          <Input id="input_video_stream" name="Input image" descr="Input image">
            <Datatype type="6"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="BangGenerator_17" catalog="kernel" class_id="bang_generator">
        <Parameters>
          <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="bang" name="Bang" descr="Bang">
            <Datatype type="2"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="InputSelector_6" catalog="kernel" class_id="input_selector">
        <Parameters>
          <Parameter id="active_input" name="Active input" descr="Zero-based index of the active input. The selected input is propagated to the output."
                     exported="1">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;2</Domain>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Output of the selector. It is equal to the specified input.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_1" name="Input 1" descr="0 input of the block.">
            <Datatype type="0"/>
          </Input>
          <Input id="input_2" name="Input 2" descr="1 input of the block.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="ConstantGenerator - int_15" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConstantGenerator - int_16" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="BangGenerator_18" catalog="kernel" class_id="bang_generator">
        <Parameters>
          <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="bang" name="Bang" descr="Bang">
            <Datatype type="2"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="InputSelector_7" catalog="kernel" class_id="input_selector">
        <Parameters>
          <Parameter id="active_input" name="Active input" descr="Zero-based index of the active input. The selected input is propagated to the output."
                     exported="1">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;2</Domain>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Output of the selector. It is equal to the specified input.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_1" name="Input 1" descr="0 input of the block.">
            <Datatype type="0"/>
          </Input>
          <Input id="input_2" name="Input 2" descr="1 input of the block.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="ConstantGenerator - int_17" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConstantGenerator - int_18" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="BangGenerator_19" catalog="kernel" class_id="bang_generator">
        <Parameters>
          <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="bang" name="Bang" descr="Bang">
            <Datatype type="2"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="InputSelector_8" catalog="kernel" class_id="input_selector">
        <Parameters>
          <Parameter id="active_input" name="Active input" descr="Zero-based index of the active input. The selected input is propagated to the output."
                     exported="1">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;2</Domain>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Output of the selector. It is equal to the specified input.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_1" name="Input 1" descr="0 input of the block.">
            <Datatype type="0"/>
          </Input>
          <Input id="input_2" name="Input 2" descr="1 input of the block.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="ConstantGenerator - int_19" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConstantGenerator - int_20" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="BangGenerator_20" catalog="kernel" class_id="bang_generator">
        <Parameters>
          <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="bang" name="Bang" descr="Bang">
            <Datatype type="2"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="InputSelector_9" catalog="kernel" class_id="input_selector">
        <Parameters>
          <Parameter id="active_input" name="Active input" descr="Zero-based index of the active input. The selected input is propagated to the output."
                     exported="1">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;2</Domain>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Output of the selector. It is equal to the specified input.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_1" name="Input 1" descr="0 input of the block.">
            <Datatype type="0"/>
          </Input>
          <Input id="input_2" name="Input 2" descr="1 input of the block.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="ConstantGenerator - int_21" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConstantGenerator - int_22" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="Snapshot_12" catalog="kernel" class_id="snapshot">
        <Parameters>
          <Parameter id="load" name="Load" descr="Load new value of datatype in the internal memory."
                     exported="1">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="reset" name="Reset" descr="Reset value of datatype in the internal memory"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous Output" descr="Generate a new copy of snapshot datatype on every block activation"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Datatype stored in the internal memory and propagated to the output.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input stored in the internal memory.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="Snapshot_13" catalog="kernel" class_id="snapshot">
        <Parameters>
          <Parameter id="load" name="Load" descr="Load new value of datatype in the internal memory."
                     exported="1">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="reset" name="Reset" descr="Reset value of datatype in the internal memory"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous Output" descr="Generate a new copy of snapshot datatype on every block activation"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Datatype stored in the internal memory and propagated to the output.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input stored in the internal memory.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="Snapshot_14" catalog="kernel" class_id="snapshot">
        <Parameters>
          <Parameter id="load" name="Load" descr="Load new value of datatype in the internal memory."
                     exported="1">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="reset" name="Reset" descr="Reset value of datatype in the internal memory"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous Output" descr="Generate a new copy of snapshot datatype on every block activation"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Datatype stored in the internal memory and propagated to the output.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input stored in the internal memory.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="Snapshot_15" catalog="kernel" class_id="snapshot">
        <Parameters>
          <Parameter id="load" name="Load" descr="Load new value of datatype in the internal memory."
                     exported="1">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="reset" name="Reset" descr="Reset value of datatype in the internal memory"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous Output" descr="Generate a new copy of snapshot datatype on every block activation"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Datatype stored in the internal memory and propagated to the output.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input stored in the internal memory.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="StringGenerator_21" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="1">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ImageMerge_1" catalog="base" class_id="image_merge">
        <Parameters/>
        <Outputs>
          <Output id="output_video_stream" name="Output image" descr="Output image">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_video_stream_1" name="Input image" descr="Input image">
            <Datatype type="6"/>
          </Input>
          <Input id="input_video_stream_2" name="Input image" descr="Input image">
            <Datatype type="6"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="ImageGenerator_1" catalog="base" class_id="image_generator">
        <Parameters>
          <Parameter id="continuous" name="Continuous" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="constant_alpha" name="Alpha" descr="The alpha channel is filled with this value."
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
          <Parameter id="source_type" name="Source type" descr="Specifies the type of image generated. May assume one of following values:&#13;&#10;Constant (all pixels have the same color)&#13;&#10;Color Bars (vertical bar of colors)&#13;&#10;Random values with uniform distribution (pixels have random values)&#13;&#10;Random values with Gaussian distribution (pixels have random values)&#13;&#10;Jaehne (Jaehne&#8217;s test image)&#13;&#10;Ramp (gradient of color intensity starting on the upper left corner)&#13;&#10;"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;6</Domain>
            <Layout type="0">
              <Label>Constant</Label>
              <Label>Color bars</Label>
              <Label>Random values with uniform distribution</Label>
              <Label>Random values with Gaussian distribution;Jaehne;Ramp</Label>
            </Layout>
          </Parameter>
          <Parameter id="unif_min" name="Min (uniform)" descr="Lower bound for the range of uniform distribution.&#13;&#10;This parameter is used only in the 'Random value with uniform distribution' source type."
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
          <Parameter id="unif_max" name="Max (uniform)" descr="Upper bound for the range of uniform distribution.&#13;&#10;This parameter is used only in the 'Random value with uniform distribution' source type."
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
          <Parameter id="gauss_mean" name="Mean" descr="Mean of gaussian distribution.&#13;&#10;This parameter is used only in the 'Random value with gaussian distribution' source type."
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
          <Parameter id="gauss_stddev" name="Standard deviation" descr="Standard deviation of gaussian distribution.&#13;&#10;This parameter is used only in the 'Random value with gaussian distribution' source type."
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
          <Parameter id="axis" name="Axis" descr="Specifies the direction of the image intensity ramp. May be the horizontal axis, the vertical axis, or both.&#13;&#10;This parameter is used only in 'Ramp' source type."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;3</Domain>
            <Layout type="0">
              <Label>Horizontal axis;Vertical axis</Label>
              <Label>Both axis</Label>
            </Layout>
          </Parameter>
          <Parameter id="ramp_offset" name="Offset" descr="Starting value of the color intensity ramp.&#13;&#10;This parameter is used only in the 'Ramp' source type."
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
          <Parameter id="ramp_slope" name="Slope" descr="Slope value of the color intensity ramp.&#13;&#10;This parameter is used only in the 'Ramp' source type."
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output_video_stream" name="Output" descr="The output with the characteristics specified in the block">
            <Datatype type="6"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ImageMerge_3" catalog="base" class_id="image_merge">
        <Parameters/>
        <Outputs>
          <Output id="output_video_stream" name="Output image" descr="Output image">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_video_stream_1" name="Input image" descr="Input image">
            <Datatype type="6"/>
          </Input>
          <Input id="input_video_stream_2" name="Input image" descr="Input image">
            <Datatype type="6"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="ImageGenerator_2" catalog="base" class_id="image_generator">
        <Parameters>
          <Parameter id="continuous" name="Continuous" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="constant_alpha" name="Alpha" descr="The alpha channel is filled with this value."
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
          <Parameter id="source_type" name="Source type" descr="Specifies the type of image generated. May assume one of following values:&#13;&#10;Constant (all pixels have the same color)&#13;&#10;Color Bars (vertical bar of colors)&#13;&#10;Random values with uniform distribution (pixels have random values)&#13;&#10;Random values with Gaussian distribution (pixels have random values)&#13;&#10;Jaehne (Jaehne&#8217;s test image)&#13;&#10;Ramp (gradient of color intensity starting on the upper left corner)&#13;&#10;"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;6</Domain>
            <Layout type="0">
              <Label>Constant</Label>
              <Label>Color bars</Label>
              <Label>Random values with uniform distribution</Label>
              <Label>Random values with Gaussian distribution;Jaehne;Ramp</Label>
            </Layout>
          </Parameter>
          <Parameter id="unif_min" name="Min (uniform)" descr="Lower bound for the range of uniform distribution.&#13;&#10;This parameter is used only in the 'Random value with uniform distribution' source type."
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
          <Parameter id="unif_max" name="Max (uniform)" descr="Upper bound for the range of uniform distribution.&#13;&#10;This parameter is used only in the 'Random value with uniform distribution' source type."
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
          <Parameter id="gauss_mean" name="Mean" descr="Mean of gaussian distribution.&#13;&#10;This parameter is used only in the 'Random value with gaussian distribution' source type."
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
          <Parameter id="gauss_stddev" name="Standard deviation" descr="Standard deviation of gaussian distribution.&#13;&#10;This parameter is used only in the 'Random value with gaussian distribution' source type."
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
          <Parameter id="axis" name="Axis" descr="Specifies the direction of the image intensity ramp. May be the horizontal axis, the vertical axis, or both.&#13;&#10;This parameter is used only in 'Ramp' source type."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;3</Domain>
            <Layout type="0">
              <Label>Horizontal axis;Vertical axis</Label>
              <Label>Both axis</Label>
            </Layout>
          </Parameter>
          <Parameter id="ramp_offset" name="Offset" descr="Starting value of the color intensity ramp.&#13;&#10;This parameter is used only in the 'Ramp' source type."
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
          <Parameter id="ramp_slope" name="Slope" descr="Slope value of the color intensity ramp.&#13;&#10;This parameter is used only in the 'Ramp' source type."
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output_video_stream" name="Output" descr="The output with the characteristics specified in the block">
            <Datatype type="6"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConcatenateStrings_16" catalog="base" class_id="concatenate_strings">
        <Parameters/>
        <Outputs>
          <Output id="output" name="Output string" descr="The concatenation of the input strings">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_1" name="Input string 1" descr="The input string 1 wil be placed at position 1 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_2" name="Input string 2" descr="The input string 2 wil be placed at position 2 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
          <Input id="input_3" name="Input string 3" descr="The input string 3 wil be placed at position 3 to build the output concatenated string">
            <Datatype type="3"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="ConstantGenerator - int_5" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="1">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="Counter_5" catalog="base" class_id="Counter">
        <Parameters>
          <Parameter id="Step" name="Step" descr="Step Description" exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="Begin" name="Begin" descr="Begin Description" exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="End" name="End" descr="End Description" exported="1">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="CustomReset" name="Custom reset value" descr="When the counter is reset, and the reset mode is set to custom value, this value is used."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="Start" name="Start" descr="Start Description" exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="Stop" name="Stop" descr="Stop Description" exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="Reset" name="Reset" descr="Reset Description" exported="1">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="ResetMode" name="Reset mode" descr="Specifies the behaviour when the counter is reset. The counter can reset to the initial value (Begin) or to a custom value."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;2</Domain>
            <Layout type="0">
              <Label>Begin</Label>
              <Label>Custom value</Label>
            </Layout>
          </Parameter>
          <Parameter id="TypeCounter" name="Bounding mode" descr="Specifies whether the counter is bounded (stops counting after a given bound is reached), unbounded (counts forever) or circular (restart from the beginning after a given bound is reached)."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;3</Domain>
            <Layout type="0">
              <Label>Unbounded counter;Bounded counter</Label>
              <Label>Circular counter</Label>
            </Layout>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="Output" name="Output" descr="Output Description">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="Input" name="Input" descr="Input Descrption">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="CompareWithValue - int_1" catalog="kernel" class_id="comparison_op_int">
        <Parameters>
          <Parameter id="op_type" name="Operation type" descr="Select the type of operation that will be performed on the input datatype."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;6</Domain>
            <Layout type="0">
              <Label>Less Than (&lt;)</Label>
              <Label>Less Than or Equal To (&lt;=);Equal To (=);Different From (!= or &lt;&gt;)</Label>
              <Label>Greater Than (&gt;)</Label>
              <Label>Greater Than or Equal To (&gt;=)</Label>
            </Layout>
          </Parameter>
          <Parameter id="scalar_value" name="Value" descr="Value to compare with the input pin."
                     exported="1">
            <Datatype type="4"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Result of comparison operation.">
            <Datatype type="1"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input before comparing datatype.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="BooleanToTrigger_1" catalog="base" class_id="bool_to_trigger">
        <Parameters>
          <Parameter id="mode" name="Mode" descr="Specifies when to generate the output trigger. "
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;5</Domain>
            <Layout type="0">
              <Label>False to true;True to false</Label>
              <Label>Any change</Label>
              <Label>True;False</Label>
            </Layout>
          </Parameter>
          <Parameter id="initial_state" name="Initial state" descr="This value is used only at first signal change detection to initialize the previous signal state."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;3</Domain>
            <Layout type="0">
              <Label>Indeterminate;True</Label>
              <Label>False</Label>
            </Layout>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Output trigger datatype.">
            <Datatype type="2"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input boolean datatype. The block generates a trigger as output according to the value of this datatype.">
            <Datatype type="1"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="Confirm" catalog="kernel" class_id="bang_generator">
        <Parameters>
          <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="bang" name="Bang" descr="Bang">
            <Datatype type="2"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ScalarDisplay_6" catalog="base" class_id="Display">
        <Parameters>
          <Parameter id="DisplayNDD" name="Decimal digits" descr="If the input datatype is double it sets the number of decimal digits to be shown."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs>
          <Input id="Input000" name="Input 0" descr="Input 0 of the block">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="ScalarDisplay_9" catalog="base" class_id="Display">
        <Parameters>
          <Parameter id="DisplayNDD" name="Decimal digits" descr="If the input datatype is double it sets the number of decimal digits to be shown."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs>
          <Input id="Input000" name="Input 0" descr="Input 0 of the block">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="ConstantGenerator - int_7" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="Logical_1" catalog="kernel" class_id="logical_op">
        <Parameters>
          <Parameter id="op_type" name="Operation type" descr="Select the type of logic operation that will be performed on the input datatypes."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;6</Domain>
            <Layout type="0">
              <Label>AND</Label>
              <Label>OR</Label>
              <Label>XOR</Label>
              <Label>NAND</Label>
              <Label>NOR</Label>
              <Label>NXOR</Label>
            </Layout>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Block output. It contains the result of the specified operation.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_1" name="Input 1" descr="This input represent the 0th operand involved in the operation.">
            <Datatype type="0"/>
          </Input>
          <Input id="input_2" name="Input 2" descr="This input represent the 1th operand involved in the operation.">
            <Datatype type="0"/>
          </Input>
          <Input id="input_3" name="Input 3" descr="This input represent the 2th operand involved in the operation.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="comapreInit" catalog="kernel" class_id="comparison_op_int">
        <Parameters>
          <Parameter id="op_type" name="Operation type" descr="Select the type of operation that will be performed on the input datatype."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;6</Domain>
            <Layout type="0">
              <Label>Less Than (&lt;)</Label>
              <Label>Less Than or Equal To (&lt;=);Equal To (=);Different From (!= or &lt;&gt;)</Label>
              <Label>Greater Than (&gt;)</Label>
              <Label>Greater Than or Equal To (&gt;=)</Label>
            </Layout>
          </Parameter>
          <Parameter id="scalar_value" name="Value" descr="Value to compare with the input pin."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Result of comparison operation.">
            <Datatype type="1"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input before comparing datatype.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="CompareWithString_1" catalog="base" class_id="compare_string">
        <Parameters>
          <Parameter id="compare_string" name="StringTemplate" descr="Template string for comparison. (use regular expression syntax in Perl syntax: http://www.boost.org/libs/regex/doc/syntax_perl.html#Perl). For example, .* pattern matches any number of characters, thus behaving similarly to the * pattern.So if you need to match objects with label starting with 'point' substring, you can write (point).* instead, if you need to match objects with label containing 'point' substring, you can write .*(point).* "
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output_comparison" name="CompareValue" descr="The output value is 1 if the strings match, 0 otherwise. ">
            <Datatype type="1"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_string" name="InputString" descr="String to compare">
            <Datatype type="3"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="CompareWithString_2" catalog="base" class_id="compare_string">
        <Parameters>
          <Parameter id="compare_string" name="StringTemplate" descr="Template string for comparison. (use regular expression syntax in Perl syntax: http://www.boost.org/libs/regex/doc/syntax_perl.html#Perl). For example, .* pattern matches any number of characters, thus behaving similarly to the * pattern.So if you need to match objects with label starting with 'point' substring, you can write (point).* instead, if you need to match objects with label containing 'point' substring, you can write .*(point).* "
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output_comparison" name="CompareValue" descr="The output value is 1 if the strings match, 0 otherwise. ">
            <Datatype type="1"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_string" name="InputString" descr="String to compare">
            <Datatype type="3"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="CompareWithString_3" catalog="base" class_id="compare_string">
        <Parameters>
          <Parameter id="compare_string" name="StringTemplate" descr="Template string for comparison. (use regular expression syntax in Perl syntax: http://www.boost.org/libs/regex/doc/syntax_perl.html#Perl). For example, .* pattern matches any number of characters, thus behaving similarly to the * pattern.So if you need to match objects with label starting with 'point' substring, you can write (point).* instead, if you need to match objects with label containing 'point' substring, you can write .*(point).* "
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output_comparison" name="CompareValue" descr="The output value is 1 if the strings match, 0 otherwise. ">
            <Datatype type="1"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_string" name="InputString" descr="String to compare">
            <Datatype type="3"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="ConstantGenerator - int_3" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="CompareWithValue - int_2" catalog="kernel" class_id="comparison_op_int">
        <Parameters>
          <Parameter id="op_type" name="Operation type" descr="Select the type of operation that will be performed on the input datatype."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;6</Domain>
            <Layout type="0">
              <Label>Less Than (&lt;)</Label>
              <Label>Less Than or Equal To (&lt;=);Equal To (=);Different From (!= or &lt;&gt;)</Label>
              <Label>Greater Than (&gt;)</Label>
              <Label>Greater Than or Equal To (&gt;=)</Label>
            </Layout>
          </Parameter>
          <Parameter id="scalar_value" name="Value" descr="Value to compare with the input pin."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Result of comparison operation.">
            <Datatype type="1"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input before comparing datatype.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="Logical_2" catalog="kernel" class_id="logical_op">
        <Parameters>
          <Parameter id="op_type" name="Operation type" descr="Select the type of logic operation that will be performed on the input datatypes."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;6</Domain>
            <Layout type="0">
              <Label>AND</Label>
              <Label>OR</Label>
              <Label>XOR</Label>
              <Label>NAND</Label>
              <Label>NOR</Label>
              <Label>NXOR</Label>
            </Layout>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Block output. It contains the result of the specified operation.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_1" name="Input 1" descr="This input represent the 0th operand involved in the operation.">
            <Datatype type="0"/>
          </Input>
          <Input id="input_2" name="Input 2" descr="This input represent the 1th operand involved in the operation.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="CompareWithValue - int_3" catalog="kernel" class_id="comparison_op_int">
        <Parameters>
          <Parameter id="op_type" name="Operation type" descr="Select the type of operation that will be performed on the input datatype."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;6</Domain>
            <Layout type="0">
              <Label>Less Than (&lt;)</Label>
              <Label>Less Than or Equal To (&lt;=);Equal To (=);Different From (!= or &lt;&gt;)</Label>
              <Label>Greater Than (&gt;)</Label>
              <Label>Greater Than or Equal To (&gt;=)</Label>
            </Layout>
          </Parameter>
          <Parameter id="scalar_value" name="Value" descr="Value to compare with the input pin."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Result of comparison operation.">
            <Datatype type="1"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input before comparing datatype.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="Delay_1" catalog="kernel" class_id="delay">
        <Parameters>
          <Parameter id="reset" name="Reset" descr="Reset the status of the block by discarding the datatypes being stored. New datatypes will be processed normally (i.e.., will be delayed)"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Output datatype (delayed)">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input datatype which will be delayed before being sent out. The block doesn't stop the execution of the patch during the time of delay. ">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="PointToRoi_2" catalog="base" class_id="pointtoroi">
        <Parameters>
          <Parameter id="roi_offset" name="ROI Offset" descr="Specify the position of the input point with respect to the generated output rectangle"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;9</Domain>
            <Layout type="0">
              <Label>Top Left</Label>
              <Label>Top Center;Top Right;Middle Left;Middle Center</Label>
              <Label>Middle Right</Label>
              <Label>Bottom Left</Label>
              <Label>Bottom Center;Bottom Right</Label>
            </Layout>
          </Parameter>
          <Parameter id="null_roi" name="Null ROI" descr="If set to true, the NULL flag of the output ROI. Note that implementations of blocks may interpret a NULL ROI differently from an empty ROI. For instance, the image datatype inteprets a NULL ROI as a ROI covering the whole images, whereas an empty ROI (width or height set to zero) actually causes all pixels to be unaffected by the subsequent operations"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="size_x" name="Width" descr="Width of the generated rectangle"
                     exported="1">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="size_y" name="Height" descr="Height of the generated rectangle"
                     exported="1">
            <Datatype type="4"/>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs/>
      </Block>
      <Block label="Point2DGenerator_4" catalog="base" class_id="point2d_generator">
        <Parameters>
          <Parameter id="x" name="X" descr="X value" exported="1">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="y" name="Y" descr="Y value" exported="1">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="trasform" name="Matrix trasform" descr="Matrix trasform"
                     exported="0">
            <Datatype type="8"/>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs/>
      </Block>
      <Block label="IntGenerator_3" catalog="kernel" class_id="int_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Value" exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="IntGenerator_5" catalog="kernel" class_id="int_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Value" exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="IntGenerator_6" catalog="kernel" class_id="int_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Value" exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="IntGenerator_2" catalog="kernel" class_id="int_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Value" exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="RGBGenerator_1" catalog="gpgpu" class_id="rgb_generator">
        <Parameters>
          <Parameter id="red" name="Red" descr="Red component" exported="0">
            <Datatype type="5"/>
            <Domain type="1">1;0;1;1</Domain>
          </Parameter>
          <Parameter id="green" name="Green" descr="Green component" exported="0">
            <Datatype type="5"/>
            <Domain type="1">1;0;1;1</Domain>
          </Parameter>
          <Parameter id="blue" name="Blue" descr="Blue component" exported="0">
            <Datatype type="5"/>
            <Domain type="1">1;0;1;1</Domain>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs/>
      </Block>
      <Block label="RGBGenerator_2" catalog="gpgpu" class_id="rgb_generator">
        <Parameters>
          <Parameter id="red" name="Red" descr="Red component" exported="0">
            <Datatype type="5"/>
            <Domain type="1">1;0;1;1</Domain>
          </Parameter>
          <Parameter id="green" name="Green" descr="Green component" exported="0">
            <Datatype type="5"/>
            <Domain type="1">1;0;1;1</Domain>
          </Parameter>
          <Parameter id="blue" name="Blue" descr="Blue component" exported="0">
            <Datatype type="5"/>
            <Domain type="1">1;0;1;1</Domain>
          </Parameter>
        </Parameters>
        <Outputs/>
        <Inputs/>
      </Block>
      <Block label="StringGenerator_24" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="1">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="RemoveDuplicates_1" catalog="base" class_id="remove_duplicates">
        <Parameters/>
        <Outputs>
          <Output id="Output" name="Output" descr="Output">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="Input" name="Input" descr="Input">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="SetToNull" catalog="kernel" class_id="bang_generator">
        <Parameters>
          <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="bang" name="Bang" descr="Bang">
            <Datatype type="2"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="StringGenerator_25" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="StringGenerator_20" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="1">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="Filename" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="1">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="InputSelector_2" catalog="kernel" class_id="input_selector">
        <Parameters>
          <Parameter id="active_input" name="Active input" descr="Zero-based index of the active input. The selected input is propagated to the output."
                     exported="1">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;2</Domain>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Output of the selector. It is equal to the specified input.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_1" name="Input 1" descr="0 input of the block.">
            <Datatype type="0"/>
          </Input>
          <Input id="input_2" name="Input 2" descr="1 input of the block.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="SpawnCommand_1" catalog="base" class_id="spawn_command">
        <Parameters>
          <Parameter id="allow_duplicates" name="Allow duplicates" descr="If set to true, dusplicates commands are executed. If set to false, only the first occurance is executed"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="handle_process" name="OutputHandle" descr="The handler of the process executed">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="command_string" name="InputCommand" descr="The command-line of the process to be executed">
            <Datatype type="3"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="StringGenerator_22" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="Close Gui" catalog="kernel" class_id="bang_generator">
        <Parameters>
          <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="bang" name="Bang" descr="Bang">
            <Datatype type="2"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="StartIsClicked" catalog="kernel" class_id="comparison_op_int">
        <Parameters>
          <Parameter id="op_type" name="Operation type" descr="Select the type of operation that will be performed on the input datatype."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;6</Domain>
            <Layout type="0">
              <Label>Less Than (&lt;)</Label>
              <Label>Less Than or Equal To (&lt;=);Equal To (=);Different From (!= or &lt;&gt;)</Label>
              <Label>Greater Than (&gt;)</Label>
              <Label>Greater Than or Equal To (&gt;=)</Label>
            </Layout>
          </Parameter>
          <Parameter id="scalar_value" name="Value" descr="Value to compare with the input pin."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Result of comparison operation.">
            <Datatype type="1"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input before comparing datatype.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="LoadConfig" catalog="kernel" class_id="comparison_op_int">
        <Parameters>
          <Parameter id="op_type" name="Operation type" descr="Select the type of operation that will be performed on the input datatype."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;6</Domain>
            <Layout type="0">
              <Label>Less Than (&lt;)</Label>
              <Label>Less Than or Equal To (&lt;=);Equal To (=);Different From (!= or &lt;&gt;)</Label>
              <Label>Greater Than (&gt;)</Label>
              <Label>Greater Than or Equal To (&gt;=)</Label>
            </Layout>
          </Parameter>
          <Parameter id="scalar_value" name="Value" descr="Value to compare with the input pin."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Result of comparison operation.">
            <Datatype type="1"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input before comparing datatype.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="StringGenerator_26" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="_FDBKString" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="1">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="StringGenerator_28" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="StringGenerator_29" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="BangGenerator_9" catalog="kernel" class_id="bang_generator">
        <Parameters>
          <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="bang" name="Bang" descr="Bang">
            <Datatype type="2"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="CompareWithString_5" catalog="base" class_id="compare_string">
        <Parameters>
          <Parameter id="compare_string" name="StringTemplate" descr="Template string for comparison. (use regular expression syntax in Perl syntax: http://www.boost.org/libs/regex/doc/syntax_perl.html#Perl). For example, .* pattern matches any number of characters, thus behaving similarly to the * pattern.So if you need to match objects with label starting with 'point' substring, you can write (point).* instead, if you need to match objects with label containing 'point' substring, you can write .*(point).* "
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output_comparison" name="CompareValue" descr="The output value is 1 if the strings match, 0 otherwise. ">
            <Datatype type="1"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_string" name="InputString" descr="String to compare">
            <Datatype type="3"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="Logical_3" catalog="kernel" class_id="logical_op">
        <Parameters>
          <Parameter id="op_type" name="Operation type" descr="Select the type of logic operation that will be performed on the input datatypes."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;6</Domain>
            <Layout type="0">
              <Label>AND</Label>
              <Label>OR</Label>
              <Label>XOR</Label>
              <Label>NAND</Label>
              <Label>NOR</Label>
              <Label>NXOR</Label>
            </Layout>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Block output. It contains the result of the specified operation.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_1" name="Input 1" descr="This input represent the 0th operand involved in the operation.">
            <Datatype type="0"/>
          </Input>
          <Input id="input_2" name="Input 2" descr="This input represent the 1th operand involved in the operation.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="CompareToStart" catalog="kernel" class_id="comparison_op_int">
        <Parameters>
          <Parameter id="op_type" name="Operation type" descr="Select the type of operation that will be performed on the input datatype."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;6</Domain>
            <Layout type="0">
              <Label>Less Than (&lt;)</Label>
              <Label>Less Than or Equal To (&lt;=);Equal To (=);Different From (!= or &lt;&gt;)</Label>
              <Label>Greater Than (&gt;)</Label>
              <Label>Greater Than or Equal To (&gt;=)</Label>
            </Layout>
          </Parameter>
          <Parameter id="scalar_value" name="Value" descr="Value to compare with the input pin."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Result of comparison operation.">
            <Datatype type="1"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input before comparing datatype.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="MonadicLogical_1" catalog="kernel" class_id="monadic_logic_op">
        <Parameters>
          <Parameter id="op_type" name="Operation type" descr="Select the type of operation that will be performed on the input datatypes. At the moment the block compute only not operation."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;1;0</Domain>
            <Layout type="0">
              <Label>Not</Label>
            </Layout>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Block output. It contains the result of the specified operation.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input value">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="BooleanToTrigger_5" catalog="base" class_id="bool_to_trigger">
        <Parameters>
          <Parameter id="mode" name="Mode" descr="Specifies when to generate the output trigger. "
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;5</Domain>
            <Layout type="0">
              <Label>False to true;True to false</Label>
              <Label>Any change</Label>
              <Label>True;False</Label>
            </Layout>
          </Parameter>
          <Parameter id="initial_state" name="Initial state" descr="This value is used only at first signal change detection to initialize the previous signal state."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;3</Domain>
            <Layout type="0">
              <Label>Indeterminate;True</Label>
              <Label>False</Label>
            </Layout>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Output trigger datatype.">
            <Datatype type="2"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input boolean datatype. The block generates a trigger as output according to the value of this datatype.">
            <Datatype type="1"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="StringGenerator_27" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="1">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="BooleanToTrigger_6" catalog="base" class_id="bool_to_trigger">
        <Parameters>
          <Parameter id="mode" name="Mode" descr="Specifies when to generate the output trigger. "
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;5</Domain>
            <Layout type="0">
              <Label>False to true;True to false</Label>
              <Label>Any change</Label>
              <Label>True;False</Label>
            </Layout>
          </Parameter>
          <Parameter id="initial_state" name="Initial state" descr="This value is used only at first signal change detection to initialize the previous signal state."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;3</Domain>
            <Layout type="0">
              <Label>Indeterminate;True</Label>
              <Label>False</Label>
            </Layout>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Output trigger datatype.">
            <Datatype type="2"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input boolean datatype. The block generates a trigger as output according to the value of this datatype.">
            <Datatype type="1"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="StringGenerator_30" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="StringGenerator_31" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="BangGenerator_11" catalog="kernel" class_id="bang_generator">
        <Parameters>
          <Parameter id="bang" name="BangGenerator" descr="Bang generator (kernel catalog)"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="patch_start" name="Patch start" descr="Generates a bang when the patch starts."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_press" name="KeyPress" descr="Generates a bang when a key is pressed in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="key_release" name="KeyRelease" descr="Generates a bang when a key is released in the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_press" name="System KeyPress" descr="Generates a bang when a key is pressed even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="system-key_release" name="System KeyRelease" descr="Generates a bang when a key is released even outside the main EyesWeb application."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="periodic" name="Periodic" descr="Generates a bang periodically."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
          <Parameter id="absolute" name="Absolute time" descr="Generates a bang at a specified absolute time."
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="bang" name="Bang" descr="Bang">
            <Datatype type="2"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="StringGenerator_32" catalog="kernel" class_id="string_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="The value of the string which is generated as the output of the block"
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="*videoScroll" catalog="kernel" class_id="double_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Value" exported="1">
            <Datatype type="5"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="5"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ScalarRescaler_1" catalog="base" class_id="Rescale">
        <Parameters>
          <Parameter id="param_mode" name="Mode" descr="Set the input range mode parameter. In custom mode the user must provides the input range. In automatic mode it is calculated setting end and start input range as maximum and minimum input values."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;2</Domain>
            <Layout type="0">
              <Label>Custom range;Automatic range</Label>
            </Layout>
          </Parameter>
          <Parameter id="param_start_range_output" name="Start Range Output" descr="Start Range Output"
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
          <Parameter id="param_end_range_output" name="End Range Output" descr="End Range Output"
                     exported="1">
            <Datatype type="5"/>
          </Parameter>
          <Parameter id="param_start_range_input" name="Start Range Input" descr="Start Range Input. Ignored in automatic mode."
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
          <Parameter id="param_end_range_input" name="End Range Input" descr="End Range Input. Ignored in automatic mode."
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
          <Parameter id="param_update" name="Update" descr="Use input value to update max and min values. Not used in custom mode."
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="param_not_update" name="NotUpdate" descr="Use old max and min value. Not used in custom mode."
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Output rescaled value.">
            <Datatype type="5"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input value. ">
            <Datatype type="5"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="***TypeCast_1" catalog="base" class_id="ConversionLegacy">
        <Parameters/>
        <Outputs>
          <Output id="Output" name="Output" descr="Output">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="Input" name="Input" descr="Input">
            <Datatype type="4"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="*formatStartFRAME" catalog="base" class_id="format_int_as_string">
        <Parameters>
          <Parameter id="num_character" name="NumCharacter" descr="Number of character"
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;0;0</Domain>
          </Parameter>
          <Parameter id="format_string" name="FormatString" descr="Specifies character to add"
                     exported="0">
            <Datatype type="3"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Output">
            <Datatype type="3"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input">
            <Datatype type="4"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="*endFrame" catalog="kernel" class_id="double_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Value" exported="1">
            <Datatype type="5"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Value" descr="Value">
            <Datatype type="5"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ScalarRescaler_2" catalog="base" class_id="Rescale">
        <Parameters>
          <Parameter id="param_mode" name="Mode" descr="Set the input range mode parameter. In custom mode the user must provides the input range. In automatic mode it is calculated setting end and start input range as maximum and minimum input values."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;2</Domain>
            <Layout type="0">
              <Label>Custom range;Automatic range</Label>
            </Layout>
          </Parameter>
          <Parameter id="param_start_range_output" name="Start Range Output" descr="Start Range Output"
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
          <Parameter id="param_end_range_output" name="End Range Output" descr="End Range Output"
                     exported="1">
            <Datatype type="5"/>
          </Parameter>
          <Parameter id="param_start_range_input" name="Start Range Input" descr="Start Range Input. Ignored in automatic mode."
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
          <Parameter id="param_end_range_input" name="End Range Input" descr="End Range Input. Ignored in automatic mode."
                     exported="0">
            <Datatype type="5"/>
          </Parameter>
          <Parameter id="param_update" name="Update" descr="Use input value to update max and min values. Not used in custom mode."
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
          <Parameter id="param_not_update" name="NotUpdate" descr="Use old max and min value. Not used in custom mode."
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Output rescaled value.">
            <Datatype type="5"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input value. ">
            <Datatype type="5"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="***TypeCast_2" catalog="base" class_id="ConversionLegacy">
        <Parameters/>
        <Outputs>
          <Output id="Output" name="Output" descr="Output">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="Input" name="Input" descr="Input">
            <Datatype type="4"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="ConstantGenerator - int_8" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="InputSelector_10" catalog="kernel" class_id="input_selector">
        <Parameters>
          <Parameter id="active_input" name="Active input" descr="Zero-based index of the active input. The selected input is propagated to the output."
                     exported="1">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;2</Domain>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Output of the selector. It is equal to the specified input.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input_1" name="Input 1" descr="0 input of the block.">
            <Datatype type="0"/>
          </Input>
          <Input id="input_2" name="Input 2" descr="1 input of the block.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="ConstantGenerator - int_9" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConstantGenerator - int_10" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ScalarArithmeticOperation - int_3" catalog="kernel" class_id="scalar_arith_op_int">
        <Parameters>
          <Parameter id="op_type" name="Operation type" descr="Select the type of operation that will be performed on the input datatype."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;9</Domain>
            <Layout type="0">
              <Label>Sum</Label>
              <Label>Subtract;Subtract inverse;Multiply;Divide;Divide inverse</Label>
              <Label>Max</Label>
              <Label>Min</Label>
              <Label>Set value</Label>
            </Layout>
          </Parameter>
          <Parameter id="scalar_value" name="Scalar value" descr="Specifies the scalar value involved in the operation."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Block output. It contains the result of the specified operation.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="This input represent the operand involved in the operation with the scalar value.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="ConstantGenerator - int_11" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConstantGenerator - int_23" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="1">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConstantGenerator - int_24" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="***TypeCast_3" catalog="base" class_id="ConversionLegacy">
        <Parameters/>
        <Outputs>
          <Output id="Output" name="Output" descr="Output">
            <Datatype type="1"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="Input" name="Input" descr="Input">
            <Datatype type="1"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="ConstantGenerator - int_25" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConstantGenerator - int_26" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConstantGenerator - int_27" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="1">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConstantGenerator - int_28" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="1">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConstantGenerator - int_29" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConstantGenerator - int_6" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="1">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ScalarArithmeticOperation - int_5" catalog="kernel" class_id="scalar_arith_op_int">
        <Parameters>
          <Parameter id="op_type" name="Operation type" descr="Select the type of operation that will be performed on the input datatype."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;9</Domain>
            <Layout type="0">
              <Label>Sum</Label>
              <Label>Subtract;Subtract inverse;Multiply;Divide;Divide inverse</Label>
              <Label>Max</Label>
              <Label>Min</Label>
              <Label>Set value</Label>
            </Layout>
          </Parameter>
          <Parameter id="scalar_value" name="Scalar value" descr="Specifies the scalar value involved in the operation."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Block output. It contains the result of the specified operation.">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="This input represent the operand involved in the operation with the scalar value.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="Delay_2" catalog="kernel" class_id="delay">
        <Parameters>
          <Parameter id="reset" name="Reset" descr="Reset the status of the block by discarding the datatypes being stored. New datatypes will be processed normally (i.e.., will be delayed)"
                     exported="0">
            <Datatype type="2"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Output datatype (delayed)">
            <Datatype type="0"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input datatype which will be delayed before being sent out. The block doesn't stop the execution of the patch during the time of delay. ">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="CloseGuiVisible" catalog="kernel" class_id="comparison_op_int">
        <Parameters>
          <Parameter id="op_type" name="Operation type" descr="Select the type of operation that will be performed on the input datatype."
                     exported="0">
            <Datatype type="4"/>
            <Domain type="0">1;0;2;6</Domain>
            <Layout type="0">
              <Label>Less Than (&lt;)</Label>
              <Label>Less Than or Equal To (&lt;=);Equal To (=);Different From (!= or &lt;&gt;)</Label>
              <Label>Greater Than (&gt;)</Label>
              <Label>Greater Than or Equal To (&gt;=)</Label>
            </Layout>
          </Parameter>
          <Parameter id="scalar_value" name="Value" descr="Value to compare with the input pin."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output" descr="Result of comparison operation.">
            <Datatype type="1"/>
          </Output>
        </Outputs>
        <Inputs>
          <Input id="input" name="Input" descr="Input before comparing datatype.">
            <Datatype type="0"/>
          </Input>
        </Inputs>
      </Block>
      <Block label="ConstantGenerator - int_30" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConstantGenerator - int_31" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="1">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
      <Block label="ConstantGenerator - int_32" catalog="kernel" class_id="int_const_generator">
        <Parameters>
          <Parameter id="value" name="Value" descr="Input value of the constant."
                     exported="0">
            <Datatype type="4"/>
          </Parameter>
          <Parameter id="continuous_output" name="Continuous output" descr="Specifies wether the output is always generated (true) or only when the value changes (false)"
                     exported="0">
            <Datatype type="1"/>
          </Parameter>
        </Parameters>
        <Outputs>
          <Output id="output" name="Output Value" descr="Output Value of the constant.">
            <Datatype type="4"/>
          </Output>
        </Outputs>
        <Inputs/>
      </Block>
    </Blocks>
    <SubpatchParamPins/>
    <SubpatchOutputPins/>
    <SubpatchInputPins/>
  </PatchOutline>
</EywRADproject>
